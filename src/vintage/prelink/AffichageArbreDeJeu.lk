	procedure AttendFrappeClavier;     external;
procedure WritelnDansRapport(s : String255);     external;
procedure WriteDansRapport(s : String255);     external;
procedure WritelnNumDansRapport(s : String255; num : SInt32);     external;
procedure WriteNumDansRapport(s : String255; num : SInt32);     external;
procedure WritelnStringAndBoolDansRapport(s : String255; b : boolean);     external;
procedure WriteStringAndBoolDansRapport(s : String255; b : boolean);     external;
procedure WritelnStringAndBooleenDansRapport(s : String255; b : boolean);     external;
procedure WriteStringAndBooleenDansRapport(s : String255; b : boolean);     external;
procedure WritelnStringAndBooleanDansRapport(s : String255; b : boolean);     external;
procedure WriteStringAndBooleanDansRapport(s : String255; b : boolean);     external;
procedure WritelnDansRapportThreadSafe(s : String255);     external;
procedure DisposePropertyList(var L : PropertyList);     external;
	function LowerCase( ch : char ) : char;     external;
procedure SetPortByWindow(window : WindowPtr);     external;
function SquareSetEnString(ensemble : SquareSet) : String255;     external;
function MakeListOfMovePropertyOfSons(couleur : SInt16; var G : GameTree) : PropertyList;     external;
function GetOthelloSquareOfProperty(prop : Property) : SInt16;     external;
function SelectFirstSubtreeWithThisProperty(prop : Property; G : GameTree) : GameTree;     external;
procedure AlerteSimple(texte : String255);     external;
function IsARealNode(G : GameTree) : boolean;     external;
function IsAVirtualNode(G : GameTree) : boolean;     external;
function IsAVirtualNodeUsedForZebraBookDisplay(G : GameTree) : boolean;     external;
function GetTripleOfProperty(prop : Property) : Triple;     external;
procedure DessineStringOnSquare(whichSquare,couleurDesLettres : SInt16; var s : String255; var continuer : boolean);     external;
procedure DrawImagetteMeteoOnSquare(quelleImage : typeImagette; quelleCase : SInt16);     external;
procedure EffaceCasesDeLaListe(L : PropertyList);     external;
function GetRacineDeLaPartie : GameTree;     external;
procedure WritelnStringAndGameTreeDansRapport(s : String255; G : GameTree);     external;
function GetCurrentNode : GameTree;     external;
procedure DesssinePierresDelta(G : GameTree; surQuellesCases : SquareSet);     external;
procedure FlushWindow(theWindow : WindowRef);     external;
function GetArbreDeJeuWindow : WindowPtr;     external;
procedure WritelnStringAndPropertyListDansRapport(s : String255; L : PropertyList);     external;
procedure EffacePierresDelta(G : GameTree);     external;
procedure ClearUselessVirtualZebraNodes;     external;
procedure DessineAideDebutant(avecDessinAutresInfosSurLesCases : boolean; surQuellesCases : SquareSet);     external;
procedure DessineZoneDeTexteDansFenetreArbreDeJeu(forceModeEdition : boolean);     external;
procedure GetCommentaireDeCeNoeud(G : GameTree; var texte : Ptr; var longueur : SInt32);     external;
function TEGetTextLength(text : TEHandle) : SInt32;     external;
procedure DessineRubanDuCommentaireDansFenetreArbreDeJeu(forceModeEdition : boolean);     external;
function GetPropertyList(G : GameTree) : PropertyList;     external;
function SelectFirstPropertyOfTypes(whichTypes : SetOfPropertyTypes; L : PropertyList) : PropertyPtr;     external;
	function MakeRect(left, top, right, bottom : SInt32) : Rect;     external;
procedure GetOthelloValueOfProperty(prop : Property; var whichColor,whichSign,whichIntegerValue,centiemes : SInt16);     external;
procedure DessineCouleurDeZebraBookDansRect(whichRect : rect; trait,valeur : SInt32; encadrement : boolean);     external;
function CoupEnString(coup : SInt16; enMajuscules : boolean) : String255;     external;
	procedure DrawStringPourGNUPascal(const s : String255);     external;
	function StringWidthPourGNUPascal(const s : String255): SInt16;     external;
function GetStringInfoOfProperty(prop : Property) : String255;     external;
	function ReadStringFromRessource(stringListID, index : SInt16) : String255;     external;
function NoteEnString(note : SInt32; avecSignePlus : boolean; nbEspacesDevant,nbDecimales : SInt16) : String255;     external;
function MakeTripleProperty(whichType : SInt16; whichTriple : Triple) : Property;     external;
function MakeTriple(n : SInt32) : Triple;     external;
procedure DisposePropertyStuff(var p : Property);     external;
function ZebraBookACetteOption(mask : SInt32) : boolean;     external;
procedure GetCoupleLongintOfProperty(prop : Property; var longint1,longint2 : SInt32);     external;
function MakePointeurPropertyProperty(whichType : SInt16; node : GameTree; adresse : PropertyPtr; affRect : rect) : Property;     external;
procedure AddPropertyInFrontOfList(prop : Property; var L : PropertyList);     external;
function NumberOfRealSons(G : GameTree) : SInt16;     external;
function EstLaRacineDeLaPartie(G : GameTree) : boolean;     external;
procedure ForEachPropertyInListDoAvecResult(L : PropertyList ; DoWhat : PropertyProcAvecResult; var result : SInt32);     external;
  procedure MyEraseRect(const (*var*) r : Rect);     external;
  procedure MyEraseRectWithColor(const (*var*) r : Rect; couleurCmd : SInt32; whichPattern : pattern; fonctionAppelante : String255);     external;
procedure ToggleZebraOption(mask : SInt32);     external;
procedure ForEachSonDoAvecResult(G : GameTree ; DoWhat : GameTreeProcAvecResult; var result : SInt32);     external;
procedure GetCurrentScript(var currentScript : SInt32);     external;
procedure SwitchToRomanScript;     external;
  function MyGetPicture(picID: SInt16) : PicHandle;     external;
  function GetPicFrameOfPicture(thePict : PicHandle) : Rect;     external;
procedure DrawImagetteMeteo(quelleImage : typeImagette; whichWindow : WindowPtr; whichBounds : rect; fonctionAppelante : String255);     external;
  procedure EnableQuartzAntiAliasingThisPort(port : CGrafPtr; useQuartzMetrics : boolean);     external;
function qdThePort : CGrafPtr;     external;
procedure DeleteSonOfCurrentNode(var whichSon : GameTree);     external;
procedure DessineAutresInfosSurCasesAideDebutant(surQuellesCases : SquareSet; fonctionAppelante : String255);     external;
procedure SetNiveauTeteDeMort(niveau : SInt16);     external;
procedure AjusteCurseur;     external;
procedure GarbageCollectionDansTableHashageInterversions;     external;
	procedure HiliteRect(unRect : rect);     external;
function GetRectangleAffichageOfProperty(prop : Property) : rect;     external;
function SelectInPropertList(L : PropertyList; choice : PropertyPredicate; var result : SInt32) : PropertyPtr;     external;
function GetPropertyPtrOfProperty(prop : Property) : PropertyPtr;     external;
function GetPossesseurOfPointeurPropertyProperty(prop : Property) : GameTree;     external;
function NoeudHasCommentaire(G : GameTree) : boolean;     external;
function GetSquareOfMoveInNode(G : GameTree; var square : SInt32) : boolean;     external;
procedure ChangeFontSizeDansRapport(whichSize : SInt16);     external;
procedure ChangeFontDansRapport(whichFont : SInt16);     external;
procedure ChangeFontFaceDansRapport(whichStyle : StyleParameter);     external;
procedure TextNormalDansRapport;     external;
procedure InsereTexteDansRapport(text : Ptr; length : SInt32);     external;
function CreatePartieEnAlphaJusqua(G : GameTree; var partieAlpha : String255; var positionTerminale : PositionEtTraitRec) : boolean;     external;
procedure ForEachPositionOnPathToCurrentNodeDo(DoWhat : GameTreeProcAvecResult);     external;
function SelectFirstPropertyOfTypesInGameTree(whichTypes : SetOfPropertyTypes; G : GameTree) : PropertyPtr;     external;
function MakeStringProperty(whichType : SInt16; whichString : String255) : Property;     external;
procedure AddPropertyToGameTree(prop : Property; var G : GameTree);     external;
function GenericHash(data : Ptr; tailleData : SInt32) : SInt32;     external;
