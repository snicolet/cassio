	procedure AttendFrappeClavier;     external;
procedure WritelnDansRapport(s : String255);     external;
procedure WriteDansRapport(s : String255);     external;
procedure WritelnNumDansRapport(s : String255; num : SInt32);     external;
procedure WriteNumDansRapport(s : String255; num : SInt32);     external;
procedure WritelnStringAndBoolDansRapport(s : String255; b : boolean);     external;
procedure WriteStringAndBoolDansRapport(s : String255; b : boolean);     external;
procedure WritelnStringAndBooleenDansRapport(s : String255; b : boolean);     external;
procedure WriteStringAndBooleenDansRapport(s : String255; b : boolean);     external;
procedure WritelnStringAndBooleanDansRapport(s : String255; b : boolean);     external;
procedure WriteStringAndBooleanDansRapport(s : String255; b : boolean);     external;
procedure WritelnDansRapportThreadSafe(s : String255);     external;
procedure BeginDialog;     external;
function MyGetNewDialog(dialogID : SInt16) : DialogPtr;     external;
procedure MyParamText( const (*var*) param0: String255; const (*var*) param1: String255; const (*var*) param2: String255; const (*var*) param3: String255 );     external;
function ConstruireChaineReferencesPartieParNroRefPartie(nroReference : SInt32; avecScores : boolean; numeroProchainCoup : SInt32) : String255;     external;
procedure MyDisposeDialog(var dlog : DialogPtr);     external;
procedure EssaieSetPortWindowPlateau;     external;
procedure EndDialog;     external;
function CautionAlertTwoButtonsFromRessource(dialogID, texteItemID, explicationItemID, buttonOneID, buttonTwoID : SInt16) : SInt16;     external;
	function GetNameOfFSSpec(fs : FSSpec) : String255;     external;
function FichierTexteExisteFSp(mySpec : FSSpec; var fic : FichierTEXT) : OSErr;     external;
	function MyMakeFSSpec(vrn : SInt16; dirID : SInt32; name : String255) : FSSpec;     external;
function CreeFichierTexteFSp(mySpec : FSSpec; var fic : FichierTEXT) : OSErr;     external;
procedure SetFileCreatorFichierTexte(var fic : FichierTEXT; quelType : OSType);     external;
procedure SetFileTypeFichierTexte(var fic : FichierTEXT; quelType : OSType);     external;
  procedure SafeSetCursor(myCursor : CursHandle);     external;
function OuvreFichierTexte(var fic : FichierTEXT) : OSErr;     external;
function VideFichierTexte(var fic : FichierTEXT) : OSErr;     external;
function GetPartieRecordParNroRefPartie(nroReference : SInt32) : t_PartieRecNouveauFormat;     external;
function GetNroJoueurDansSonFichier(nroJoueur : SInt32) : SInt32;     external;
function GetNroTournoiDansSonFichier(nroTournoi : SInt32) : SInt32;     external;
procedure ExtraitPartieTableStockageParties(nroReference : SInt32; var partieStr : PackedThorGame);     external;
function PeutCalculerScoreFinalDeCettePartie(var game : PackedThorGame; var nbPionsFinalNoirs,nbPionsFinalBlancs : SInt32; var partieTerminee : boolean) : boolean;     external;
function PartieEstActiveEtSelectionnee(nroReferencePartie : SInt32) : boolean;     external;
procedure TraductionThorEnAlphanumerique(const s : PackedThorGame; var result : String255);     external;
procedure SetPartieDansListeDoitEtreSauvegardee(nroReferencePartie : SInt32; flag : boolean);     external;
function EcritPartieNouveauFormat(refnum : SInt16; nroPartie : SInt32; theGame : t_PartieRecNouveauFormat) : OSErr;     external;
function EcritEnteteNouveauFormat(refnum : SInt16; entete : t_EnTeteNouveauFormat) : OSErr;     external;
function FermeFichierTexte(var fic : FichierTEXT) : OSErr;     external;
procedure RemettreLeCurseurNormalDeCassio;     external;
	function ReadStringFromRessource(stringListID, index : SInt16) : String255;     external;
  procedure SetNameOfSFReply(var reply : SFReply; const name : String255);     external;
function MakeFileName(var reply : SFReply; prompt : String255; var whichSpec : FSSpec) : boolean;     external;
procedure DoTrierListe(critereDeTri,algorithmeDeTri : SInt32);     external;
function GetAnneePartieParNroRefPartie(nroReference : SInt32) : SInt16;     external;
procedure CalculsEtAffichagePourBase(infosDejaCalculees : boolean; withCheckEvent : boolean);     external;
procedure FILL_PACKED_GAME_WITH_ZEROS(var game : PackedThorGame);     external;
procedure ADD_MOVE_TO_PACKED_GAME(var whichGame : PackedThorGame; whichSquare : UInt8);     external;
function EstUnePartieOthello(var s : String255; compacterPartie : boolean) : boolean;     external;
procedure Normalisation(var partie120 : String255; var autreCoupQuatreDiag : boolean; interversions : boolean);     external;
function NormaliserLaPartiePourInclusionDansLaBaseWThor(const partieEnAlpha : String255) : String255;     external;
procedure TraductionAlphanumeriqueEnThor(const s : String255; var result : PackedThorGame);     external;
procedure LecturePreparatoireDossierDatabase(pathDossierEnglobant : String255; fonctionAppelante : String255);     external;
function MetJoueursEtTournoisEnMemoire(nomsAbreges : boolean) : OSErr;     external;
procedure SetAnneePartieParNroRefPartie(nroReference : SInt32; annee : SInt16);     external;
procedure SetPartieRecordParNroRefPartie(nroReference : SInt32; var GameRecord : t_PartieRecNouveauFormat);     external;
procedure SetNroDistributionParNroRefPartie(nroReference : SInt32; nroDistribution : SInt32);     external;
procedure SetPartieActive(nroReferencePartie : SInt32; flag : boolean);     external;
function GetJoueurEstUnOrdinateur(nroJoueur : SInt32) : boolean;     external;
function GetNroJoueurNoirParNroRefPartie(nroReference : SInt32) : SInt32;     external;
function GetNroJoueurBlancParNroRefPartie(nroReference : SInt32) : SInt32;     external;
procedure SetPartieEstSansOrdinateur(nroReferencePartie : SInt32; flag : boolean);     external;
procedure SetPartieDetruite(nroReferencePartie : SInt32; flag : boolean);     external;
procedure TrierListePartie(critereDeTri,algorithmeDeTri : SInt32);     external;
function AlgoDeTriOptimum(critereDeTri : SInt32) : SInt32;     external;
procedure LaveTableCriteres;     external;
procedure InvalidateNombrePartiesActivesDansLeCachePourTouteLaPartie;     external;
function InclurePartiesAvecOrdinateursDansListe : boolean;     external;
procedure SetInclurePartiesAvecOrdinateursDansListe(flag : boolean);     external;
procedure DoChangeSousSelectionActive;     external;
procedure CalculTableCriteres;     external;
function PartieEstCompatibleParCriteres(nroReferencePartie : SInt32) : boolean;     external;
function PartieNormalisee(var autreCoupQuatreDiag : boolean; interversions : boolean) : String255;     external;
procedure ConstruitTitrePartie(const nomNoir,nomBlanc : String255; enleverLesPrenoms : boolean; scoreNoir : SInt32; var titre : String255);     external;
function GetNomJoueur(nroJoueur : SInt32) : String255;     external;
  function EnleveEspacesDeDroite(const s : String255) : String255;     external;
function GetNomTournoi(nroTournoi : SInt32) : String255;     external;
function EstUnePartieOthelloAvecMiroir(var s : String255) : boolean;     external;
function EstUneDistributionDeParties(nroDistrib : SInt16) : boolean;     external;
function AnneePartiesFichierNouveauFormat(numFichier : SInt16) : SInt16;     external;
  function ReplaceStringOnce(const s, pattern, replacement : String255) : String255;     external;
function GetNameOfDistribution(nroDistribution : SInt32) : String255;     external;
function GetPathOfDistribution(nroDistribution : SInt32) : String255;     external;
function CreeFichierTexte(nom : String255 ; vRefNum : SInt16; var fic : FichierTEXT) : OSErr;     external;
function AjouterFichierNouveauFormat(fic : FSSpec; path : String255; typeDonneesDuFichier : SInt16; EnteteFichier : t_EnTeteNouveauFormat) : boolean;     external;
function OuvreFichierNouveauFormat(numFichier : SInt16) : OSErr;     external;
function FermeFichierNouveauFormat(numFichier : SInt16) : OSErr;     external;
function FenetreRapportEstOuverte : boolean;     external;
function FenetreRapportEstAuPremierPlan : boolean;     external;
function SelectionRapportNonVide : boolean;     external;
function LongueurSelectionRapport : SInt32;     external;
function SelectionRapportEnString(var count : SInt32) : String255;     external;
procedure ExportListeAuFormatTexte(descriptionLigne : String255; var nbPartiesExportees : SInt32);     external;
procedure AlerteSimple(texte : String255);     external;
procedure ResetListeDeParties;     external;
function NbPartiesDevantEtreSaugardeesDansLaListe : SInt32;     external;
procedure DessinePalette;     external;
procedure DoRapport;     external;
