	function Min (a, b: SInt32) : SInt32;     external;
	function Max (a, b: SInt32) : SInt32;     external;
procedure WritelnDansRapport(s : String255);     external;
procedure WriteDansRapport(s : String255);     external;
procedure WritelnNumDansRapport(s : String255; num : SInt32);     external;
procedure WriteNumDansRapport(s : String255; num : SInt32);     external;
procedure WritelnStringAndBoolDansRapport(s : String255; b : boolean);     external;
procedure WriteStringAndBoolDansRapport(s : String255; b : boolean);     external;
procedure WritelnStringAndBooleenDansRapport(s : String255; b : boolean);     external;
procedure WriteStringAndBooleenDansRapport(s : String255; b : boolean);     external;
procedure WritelnStringAndBooleanDansRapport(s : String255; b : boolean);     external;
procedure WriteStringAndBooleanDansRapport(s : String255; b : boolean);     external;
procedure WritelnDansRapportThreadSafe(s : String255);     external;
function ReadFromFichierAbstrait(var theFile : FichierAbstrait; fromPos : SInt32; var count : SInt32; buffer : Ptr) : OSErr;     external;
function SetPositionMarqueurFichierAbstrait(var theFile : FichierAbstrait; whichPosition : SInt32) : OSErr;     external;
function GetNextCharOfFichierAbstrait(var theFile : FichierAbstrait; var c : char) : OSErr;     external;
function RevientEnArriereDansFichierAbstrait(var theFile : FichierAbstrait; nbOctets : SInt32) : OSErr;     external;
  function NumEnString(num : SInt32) : String255;     external;
function StringEnCoup(const s : String255) : SInt16;     external;
function StringSGFEnCoup(const s : String255; var square_x,square_y : SInt16) : boolean;     external;
  function ChaineEnLongint(const s : String255) : SInt32;     external;
  function StringSimpleEnReel(alpha : String255) : double;     external;
function MakeLongintProperty(whichType : SInt16; whichLong : SInt32) : Property;     external;
function MakeValeurOthelloProperty(whichType : SInt16; whichColor,whichSign : SInt16; whichIntegerValue,centiemes : SInt16) : Property;     external;
	function TPCopy (source : String255; start, count: SInt32) : String255;     external;
procedure WritelnStringAndReelDansRapport(s : String255; x : double; nbDecimales : SInt16);     external;
	function MyTrunc(x : double) : SInt32;     external;
function GetApplicationNameDansArbre(var name : String255; var version : String255) : boolean;     external;
function MakeRealProperty(whichType : SInt16; whichReal : double) : Property;     external;
function MakeStringProperty(whichType : SInt16; whichString : String255) : Property;     external;
function MakeArgumentVideProperty(whichType : SInt16) : Property;     external;
function MakeOthelloSquareProperty(whichType : SInt16; whichSquare : SInt16) : Property;     external;
function MakeSquareSetProperty(whichType : SInt16; whichSet : SquareSet) : Property;     external;
  function  GetParsingCaracterSet : SetOfChar;     external;
  procedure SetParsingCaracterSet(parsingCaracters : SetOfChar);     external;
  procedure Parser (s : String255; var tete,reste : String255);     external;
function MakeSquareCoupleProperty(whichType : SInt16; whichSquare1,whichSquare2 : SInt16) : Property;     external;
function MakeTripleProperty(whichType : SInt16; whichTriple : Triple) : Property;     external;
function MakeBooleanProperty(whichType : SInt16; whichBoolean : boolean) : Property;     external;
function MakeCharProperty(whichType : SInt16; whichChar : char) : Property;     external;
procedure AddStringToTexteProperty(var prop : Property; s : String255);     external;
function MakeTexteProperty(whichType : SInt16; texte : Ptr; longueur : SInt32) : Property;     external;
procedure GetTexteOfProperty(prop : Property; var texte : Ptr; var longueur : SInt32);     external;
function GetPositionPointDinsertion : SInt32;     external;
procedure InsereTexteDansRapport(text : Ptr; length : SInt32);     external;
function GetFichierTEXTOfFichierAbstraitPtr(theAbstractFilePtr : FichierAbstraitPtr; var fic : FichierTEXT) : OSErr;     external;
procedure AppliquerStyleDuFichierAuRapport(var fichier : FichierTEXT; debutSelection,finSelection : SInt32);     external;
function MakeEmptyProperty : Property;     external;
procedure DisposePropertyStuff(var p : Property);     external;
procedure AlerteSimple(texte : String255);     external;
function StringToPropertyGenre(s : String255) : SInt16;     external;
	function UpCaseStr (s : String255) : String255;     external;
procedure WritelnStringAndPropertyDansRapport(s : String255; var prop : Property);     external;
function GetTripleOfProperty(prop : Property) : Triple;     external;
function PropertyEstVide(prop : Property) : boolean;     external;
procedure AddPropertyToGameTree(prop : Property; var G : GameTree);     external;
function NewPropertyList : PropertyList;     external;
procedure AddPropertyToList(prop : Property; var L : PropertyList);     external;
procedure CompacterPropertyList(var L : PropertyList);     external;
function GetCurrentNode : GameTree;     external;
procedure WritelnStringAndPropertyListDansRapport(s : String255; L : PropertyList);     external;
procedure DisposePropertyList(var L : PropertyList);     external;
function EstLaRacineDeLaPartie(G : GameTree) : boolean;     external;
procedure GetPositionInitialeOfGameTree(var position : plateauOthello; var numeroPremierCoup,trait,nbBlancs,nbNoirs : SInt32);     external;
function MakePositionEtTrait(var plat : plateauOthello; trait : SInt32) : PositionEtTraitRec;     external;
function CalculeNouvellePositionInitialeFromThisList(L : PropertyList; var jeu : plateauOthello; var numeroPremierCoup,trait,nbBlancs,nbNoirs : SInt32) : boolean;     external;
function SamePositionEtTrait(var pos1,pos2 : PositionEtTraitRec) : boolean;     external;
procedure DeleteAllSons(var G : GameTree);     external;
procedure VideTableHashageInterversions;     external;
procedure PlaquerPosition(plat : plateauOthello; trait : SInt16; flags : SInt32);     external;
procedure ConcatPropertyLists(var L1 : PropertyList; L2 : PropertyList; override,nePasDupliquer : SetOfPropertyTypes);     external;
function AllPropertyTypes : SetOfPropertyTypes;     external;
function TypesPierresDelta : SetOfPropertyTypes;     external;
procedure CalculePositionInitialeFromThisRoot(whichRoot : GameTree);     external;
function SelectFirstPropertyOfTypes(whichTypes : SetOfPropertyTypes; L : PropertyList) : PropertyPtr;     external;
function PropertyListEstVide(L : PropertyList) : boolean;     external;
function PropertyListLength(L : PropertyList) : SInt32;     external;
function InPropertyTypes(whichGenre : SInt16; whichSet : SetOfPropertyTypes) : boolean;     external;
function MakeGameTreeFromPropertyList(L : PropertyList) : GameTree;     external;
procedure AddSonToGameTree(fils,G : GameTree);     external;
procedure SetCurrentNode(G : GameTree; const fonctionAppelante : String255);     external;
function SelectFirstSubtreeWithThisProperty(prop : Property; G : GameTree) : GameTree;     external;
procedure DeletePropertyFromCurrentNode(prop : Property);     external;
procedure DisposeGameTree(var G : GameTree);     external;
function GetOthelloSquareOfProperty(prop : Property) : SInt16;     external;
function PlayMoveProperty(prop : Property; var positionEtTrait : PositionEtTraitRec) : boolean;     external;
function CoupsDuCheminJusquauNoeudEnString(G : GameTree) : String255;     external;
function PropertyToString(prop : Property) : String255;     external;
function MakeGameTreeFromPropertyListSansDupliquer(L : PropertyList) : GameTree;     external;
procedure AddSonToGameTreeSansDupliquer(fils,G : GameTree);     external;
procedure GererInterversionDeCeNoeud(G : GameTree; var position : PositionEtTraitRec);     external;
procedure MemoryFillChar(bufferPtr : universal UnivPtr; byteCount: SInt32; caractere : char);     external;
procedure InitMiniProfiler;     external;
function MakeEmptyPositionEtTrait : PositionEtTraitRec;     external;
procedure AfficheMiniProfilerDansRapport(affichage : SInt32);     external;
procedure WritelnSoldesCreationsPropertiesDansRapport(prefixe : String255);     external;
function FichierAbstraitEstCorrect(const theFile : FichierAbstrait) : boolean;     external;
function MakeFichierAbstraitFichier(nomFichier : String255 ; vRefNum : SInt16) : FichierAbstrait;     external;
procedure DisposeFichierAbstrait(var theFile : FichierAbstrait);     external;
function EcrireFichierAbstrait(var theFile : FichierAbstrait; fromPos : SInt32; text : Ptr; var nbOctets : SInt32) : OSErr;     external;
	procedure MySetStringLength (var s : String255; len : SInt16);     external;
function PropertyTypeToString(whichType : SInt16) : String255;     external;
function WriteDansFichierAbstrait(var theFile : FichierAbstrait; s : String255) : OSErr;     external;
function PropertyValueToString(prop : Property) : String255;     external;
procedure ForEachPropertyOfTheseTypesDoAvecResult(L : PropertyList; whichTypes : SetOfPropertyTypes ; DoWhat : PropertyProcAvecResult; var result : SInt32);     external;
function IsAVirtualNodeUsedForZebraBookDisplay(G : GameTree) : boolean;     external;
function GetCouleurOfMoveInNode(G : GameTree) : SInt32;     external;
function WritelnDansFichierAbstrait(var theFile : FichierAbstrait; s : String255) : OSErr;     external;
function NumberOfSons(G : GameTree) : SInt16;     external;
function NumberOfVirtualNodesUsedForZebraBookDisplay(G : GameTree) : SInt16;     external;
procedure ForEachGameTreeInListDo(L : GameTreeList ; DoWhat : GameTreeProc);     external;
function GetPositionInitialeEtPartieDansFichierSGF_ou_GGF_8x8(var fic : FichierTEXT; whichFormat : formats_connus; var posInitiale : PositionEtTraitRec; var coups : String255) : OSErr;     external;
function FichierTexteDeCassioExiste(nom : String255; var fic : FichierTEXT) : OSErr;     external;
function CreeFichierTexteDeCassio(nom : String255; var fic : FichierTEXT) : OSErr;     external;
function OuvreFichierTexte(var fic : FichierTEXT) : OSErr;     external;
function VideFichierTexte(var fic : FichierTEXT) : OSErr;     external;
function WritelnDansFichierTexte(var fic : FichierTEXT; s : String255) : OSErr;     external;
function FermeFichierTexte(var fic : FichierTEXT) : OSErr;     external;
function ReadlnDansFichierTexte(var fic : FichierTEXT; var s : String255) : OSErr;     external;
function EOFFichierTexte(var fic : FichierTEXT; var erreurES : OSErr) : boolean;     external;
function EstUnNomDeFichierTemporaireDePressePapier(const nom : String255) : boolean;     external;
