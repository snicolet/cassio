	function Min (a, b: SInt32) : SInt32;     external;
	function Max (a, b: SInt32) : SInt32;     external;
	procedure AttendFrappeClavier;     external;
procedure WritelnDansRapport(s : String255);     external;
procedure WriteDansRapport(s : String255);     external;
procedure WritelnNumDansRapport(s : String255; num : SInt32);     external;
procedure WriteNumDansRapport(s : String255; num : SInt32);     external;
procedure WritelnStringAndBoolDansRapport(s : String255; b : boolean);     external;
procedure WriteStringAndBoolDansRapport(s : String255; b : boolean);     external;
procedure WritelnStringAndBooleenDansRapport(s : String255; b : boolean);     external;
procedure WriteStringAndBooleenDansRapport(s : String255; b : boolean);     external;
procedure WritelnStringAndBooleanDansRapport(s : String255; b : boolean);     external;
procedure WriteStringAndBooleanDansRapport(s : String255; b : boolean);     external;
procedure WritelnDansRapportThreadSafe(s : String255);     external;
procedure SetTraitDansHashExacte(trait : SInt32; var cellule : HashTableExacteElement);     external;
procedure CreeCodagePosition(var plat : plOthEndgame; couleur,prof : SInt32; var codagePosition : codePositionRec);     external;
procedure WritelnCodagePositionDansRapport(codagePosition : codePositionRec);     external;
function InfoTrouveeDansHashTableExacte(var codagePosition : codePositionRec; var quelleHashTableExacte : HashTableExactePtr; clefHashage : SInt32; var whichClefExacte : SInt32) : boolean;     external;
procedure DecompresserBornesHashTableExacte(var whichElement : HashTableExacteElement; var bornes : DecompressionHashExacteRec);     external;
function GetBestDefenseDansHashExacte(var cellule : HashTableExacteElement) : SInt32;     external;
procedure CompresserBornesDansHashTableExacte(var whichElement : HashTableExacteElement; var bornes : DecompressionHashExacteRec);     external;
procedure WritelnPositionEtTraitDansRapport(const position : plateauOthello; trait : SInt32);     external;
procedure WritelnStringAndCoupDansRapport(s : String255; square : SInt16);     external;
procedure ExpandHashTableExacte(var whichElement : HashTableExacteElement; var whichLegalMoves : CoupsLegauxHashPtr; var codagePosition : codePositionRec; clefHashExacte : SInt32);     external;
function NbMaxEndgameTrees : SInt32;     external;
function GetMagicCookieInitialEndgameTree(numeroArbre : SInt32) : SInt32;     external;
procedure EssaieSetPortWindowPlateau;     external;
  procedure WriteNumAt(s : String255; num : SInt32; h,v : SInt32);     external;
  procedure WriteStringAt(s : String255; h,v : SInt32);     external;
function CoupEnStringEnMajuscules(coup : SInt16) : String255;     external;
procedure LanceDemandeAffichageReflexion(forcerAffichageImmediat : boolean; const fonctionAppelante : String255);     external;
function CalculeMobilite(coul : SInt32; var plat : plateauOthello; var jouable : plBool) : SInt32;     external;
function Evaluation(var position : plateauOthello; coulEvaluation,nbBlancs,nbNoirs : SInt32; var jouable : plBool; var front : InfoFront; afraidOfWipeOut : boolean; alpha,beta : SInt32; var nbEvaluationsRecursives : SInt32) : SInt32;     external;
function MemberOfPositionEtTraitSet(var position : PositionEtTraitRec; var data : SInt32; S : PositionEtTraitSet) : boolean;     external;
function MakePositionEtTrait(var plat : plateauOthello; trait : SInt32) : PositionEtTraitRec;     external;
procedure AjouterTempsDansMiniProfiler(nbVides,prof : SInt32; microsecondesUtilisees : UInt32; affichage : SInt32);     external;
function AB_simple(var pl : plateauOthello; var joua : plBool; var bstBef : SInt32; coul,prof,alpha,beta,nBla,nNoi : SInt32; var fr : InfoFront; canDoProbCut : boolean) : SInt32;     external;
	function MyTrunc(x : double) : SInt32;     external;
function  NoteCassioEnScoreFinal(note : SInt32) : SInt32;     external;
procedure AugmentationMinorant(newValeurMin,newDeltaMin,coup,couleur : SInt32; var bornes : DecompressionHashExacteRec; var plat : plateauOthello; fonctionAppelante : String255);     external;
procedure SetBestDefenseDansHashExacte(bestDefense : SInt32; var cellule : HashTableExacteElement);     external;
procedure DiminutionMajorant(newValeurMax,newDeltaMax,couleur : SInt32; var bornes : DecompressionHashExacteRec; var plat : plateauOthello; fonctionAppelante : String255);     external;
procedure WritelnStringDansRapport(s : String255);     external;
function ModifPlatLongint(a,coul : SInt32; var jeu : plateauOthello; var jouable : plBool; var nbbl,nbno : SInt32; var front : InfoFront) : boolean;     external;
procedure EnleverDeLaListeChaineeDesCasesVides(whichSquare : SInt32);     external;
procedure RemettreDansLaListeChaineeDesCasesVides(whichSquare : SInt32);     external;
procedure WritelnStringAndReelDansRapport(s : String255; x : double; nbDecimales : SInt16);     external;
function LanceurBitboardAlphaBeta(var plat : plOthEndgame; couleur,ESprof,alpha,beta,diffPions,numFirtSonToParallelize : SInt32) : SInt32;     external;
function CalculeMobilitePlatSeulement(const plat : plateauOthello; coul : SInt32) : SInt32;     external;
function GetValeurZooDeCeFils(prof,whichMove : SInt32; var bestSuite : SInt32; var timeTaken : double) : SInt32;     external;
procedure WriteStringAndReelDansRapport(s : String255; x : double; nbDecimales : SInt16);     external;
procedure WriteStringAndCoupDansRapport(s : String255; square : SInt16);     external;
function DoitStopperExecutionDeCeSousArbre(prof : SInt32) : boolean;     external;
procedure CassioPrendEnChargeLuiMemeCeFilsDuZoo(prof,whichMove : SInt32);     external;
function OnVientDeStoperExecutionDeCeFils(profPere,coupFils : SInt32; var numeroArret : SInt32) : boolean;     external;
procedure RetirerDeLaListeDesTracesExecutionAStopperParNumeroArret(numeroArret : SInt32);     external;
procedure RetirerCeFilsDuZoo(prof,whichMove : SInt32);     external;
procedure AjouterDataEstimationCharge(prof,rang,mobilite,indexMu,alpha,beta: SInt32; eval,vraiTempsEnTicks : TypeReel);     external;
function CassioUtiliseLeZoo : boolean;     external;
function CassioEstEnTrainDeCalculerPourLeZoo : boolean;     external;
function TempsEstimeEnSecondesPourResoudreCettePosition(prof,rang,mobilite,indexMu,alpha,beta : SInt32; eval : TypeReel) : TypeReel;     external;
procedure EnvoyerCeFilsAuZoo(prof,whichMove,alpha,beta,deltaFinal : SInt32);     external;
procedure CopierListeDesCoupsPourLeZoo(prof,nbCoups,couleur,hashCassio : SInt32; const liste : listeVides; const position : plateauOthello; alpha, beta : SInt32);     external;
function GetNombreDeFilsParallelisesPourCetteProf(prof : SInt32) : SInt32;     external;
function NombreDeResultatsEnAttenteSurLeZoo : SInt32;     external;
procedure EffacerTraceExecutionFinale(prof : SInt32);     external;
procedure WriteStringDansRapport(s : String255);     external;
procedure EcritTypeInterruptionDansRapport(uneinterruption : SInt16);     external;
procedure ReconstruireLaTableListeBitboardToSquareSiNecessaire(nbCasesVides : SInt32; listeChainee : celluleCaseVideDansListeChaineePtr);     external;
procedure VerifierLePoussageDesRequetesAuZoo;     external;
procedure DoSystemTask(couleur : SInt32);     external;
function AQuiDeJouer : SInt32;     external;
procedure AddPositionEtTraitToSet(var position : PositionEtTraitRec; data : SInt32; var S : PositionEtTraitSet);     external;
procedure WritelnBornesDansRapport(var bornes : DecompressionHashExacteRec);     external;
function NbPionsDefinitifsAvecInterieursEndgame(couleur : SInt32; var p : plOthEndgame) : SInt32;     external;
function NbPionsDefinitifsEndgame(couleur : SInt32; var plat : plOthEndgame) : SInt32;     external;
function TrierSelonDivergenceAvecMilieu(var plat : plateauOthello; couleur,nbCasesVides,conseilHash : SInt32; var source,dest : listeVides; var InfosMilieuDePartie : InfosMilieuRec; alpha,beta : SInt32; var coupureAlphaProbable,coupureBetaProbable : boolean; utiliserMilieu : boolean; var evalCouleur : SInt32) : SInt32;     external;
procedure RecordTraceExecutionFinale(prof, hashCassio, coup : SInt32);     external;
procedure AlerteSimple(texte : String255);     external;
procedure EnleverBornesMinPeuSuresDesAutresCoups(whichLegalMoves : CoupsLegauxHashPtr; clefHashExacte,couleur : SInt32; var bornes : DecompressionHashExacteRec; var plat : plateauOthello);     external;
procedure NettoyerInfosDuZooPourCetteProf(prof : SInt32);     external;
procedure WriteCoupDansRapport(square : SInt16);     external;
procedure FinRapport;     external;
procedure TextNormalDansRapport;     external;
function CoupEnString(coup : SInt16; enMajuscules : boolean) : String255;     external;
procedure LanceInterruptionSimple(const fonctionAppelante : String255);     external;
function MakeEmptyPositionEtTraitSet : PositionEtTraitSet;     external;
procedure AjouterPositionsDevantEtreDebugueesPasAPas(var positionsCherchees : PositionEtTraitSet);     external;
function SuiteParfaiteEstConnueDansGameTree : boolean;     external;
function CassioIsUsingAnEngine(var numero : SInt32) : boolean;     external;
function IndexDeltaFinaleEnPrecisionEngine(indexDeltaFinale : SInt32) : SInt32;     external;
function NewPropertyList : PropertyList;     external;
function GetActiveNodeOfEndgameTree(numeroArbre : SInt32) : GameTree;     external;
function GetPositionEtTraitACeNoeud(G : GameTree; var position : PositionEtTraitRec; const fonctionAppelante : String255) : boolean;     external;
function SamePositionEtTrait(var pos1,pos2 : PositionEtTraitRec) : boolean;     external;
function PeutCalculerFinaleParEndgameTree(numeroArbre : SInt32; position : PositionEtTraitRec; var listeDesCoups : PropertyList; var meilleurScore : SInt32) : boolean;     external;
procedure DisposePropertyList(var L : PropertyList);     external;
function EnginePeutFaireCalculDeFinale(var plateau : plateauOthello; couleur,  alpha, beta, precision, dernierCoup : SInt32; var note, bestMove : SInt32; var meilleureSuite : t_meilleureSuite) : boolean;     external;
procedure DisposePositionEtTraitSet(var S : PositionEtTraitSet);     external;
function TrierSelonDivergenceSansMilieu(var plat : plateauOthello; couleur,nbCasesVides : SInt32; var source,dest : listeVides) : SInt32;     external;
function MakeNullWindow(const v : SearchResult) : SearchWindow;     external;
function DecalerSearchResult(const myResult : SearchResult; midgameDecalage : SInt32) : SearchResult;     external;
function FailSoltInWindow(const result : SearchResult; const window : SearchWindow) : boolean;     external;
function FailHighInWindow(const result : SearchResult; const window : SearchWindow) : boolean;     external;
function GetWindowAlphaEnMidgameEval(const window : SearchWindow) : SInt32;     external;
function GetWindowBetaEnMidgameEval(const window : SearchWindow) : SInt32;     external;
function InitialiseSearchResult : SearchResult;     external;
function IsNullWindow(const window : SearchWindow) : boolean;     external;
function MeilleurCoupEstStockeDansLesBornes(const bornes : DecompressionHashExacteRec; var meilleurCoup,valeurDeLaPosition : SInt32) : boolean;     external;
function MakeSearchResultForSolvedPosition(endgameScore : SInt32) : SearchResult;     external;
function PasDeBordDeCinqAttaque(couleur : SInt32; var front : InfoFront; const plat : plateauOthello) : boolean;     external;
function ReverseResult(const result : SearchResult) : SearchResult;     external;
function MakeSearchResultFromHeuristicValue(midgameValue : SInt32) : SearchResult;     external;
function ReverseWindow(const window : SearchWindow) : SearchWindow;     external;
function ResultInsideWindow(const result : SearchResult; const window : SearchWindow) : boolean;     external;
function MakeSearchWindow(const alpha,beta : SearchResult) : SearchWindow;     external;
procedure UpdateSearchResult(var result : SearchResult; const valeurDuFils : SearchResult; var ameliorationMinimax,ameliorationProofNumber : boolean);     external;
function GetProofNumberOfResult(const myResult : SearchResult) : double;     external;
function GetDisproofNumberOfResult(const myResult : SearchResult) : double;     external;
function UpdateSearchWindow(const value : SearchResult; var window : SearchWindow) : boolean;     external;
function AlphaBetaCut(const window : SearchWindow) : boolean;     external;
function GetTraitOfPosition(var position : PositionEtTraitRec) : SInt32;     external;
function GenreDeReflexionInSet(genre : SInt16; whichSet : ReflexionTypesSet) : boolean;     external;
procedure AjoutePropertyValeurDeCoupDansGameTree(quelGenreDeReflexion,scorePourNoir : SInt32; G : GameTree);     external;
function EstVisibleDansFenetreArbreDeJeu(G : GameTree) : boolean;     external;
procedure EffaceNoeudDansFenetreArbreDeJeu;     external;
procedure EcritCurrentNodeDansFenetreArbreDeJeu(avecEcritureDesFils, doitEffacerPremiereLigneDeLaFenetre : boolean);     external;
	function ReadStringFromRessource(stringListID, index : SInt16) : String255;     external;
	function ParamStr(s, p0, p1, p2, p3 : String255) : String255;     external;
function  GetEffetSpecial : boolean;     external;
  function ReplaceStringByStringInString(const pattern,replacement,s : String255) : String255;     external;
function TypeEvalEnChaine(whichEval : EvalsDisponibles) : String255;     external;
procedure DisableKeyboardScriptSwitch;     external;
procedure ChangeFontSizeDansRapport(whichSize : SInt16);     external;
procedure ChangeFontDansRapport(whichFont : SInt16);     external;
procedure ChangeFontFaceDansRapport(whichStyle : StyleParameter);     external;
procedure WritelnStringDansRapportSansRepetition(theString : String255; var stringPool : StringSet);     external;
procedure EnableKeyboardScriptSwitch;     external;
function MeilleureSuiteInfosEnChaine(nbEspacesEntreCoups : SInt16; avecScore,avecNumeroPremierCoup,enMajuscules,remplacerScoreIncompletParEtc : boolean; whichScore : SInt16) : String255;     external;
function DeltaFinaleEnChaine(delta : SInt32) : String255;     external;
  procedure EnleveEspacesDeGaucheSurPlace(var s : String255);     external;
	function ReelEnString(unreel : double) : String255;     external;
procedure ChangeFontColorDansRapport(whichColor : SInt16);     external;
  function BigNumEnString(milliards,num : SInt32) : String255;     external;
  function SeparerLesChiffresParTrois(var s : String255) : String255;     external;
procedure WritelnStringAndNumEnSeparantLesMilliersDansRapport(s : String255; num : SInt32);     external;
procedure EcrireMesureDeParallelismeDansRapport;     external;
procedure EcrireFraisDeSynchronisationDansRapport;     external;
procedure EcrireParallelismeUtileDansRapport;     external;
function PartieEstFinieApresCeCoupDansPositionEtTrait(const position : PositionEtTraitRec; square : SInt32) : boolean;     external;
function SetClefHashageGlobale(whichValue : SInt32) : SInt32;     external;
procedure GetEndgameValuesInHashTableElement(var cellule : HashTableExacteElement; whichDeltaFinal : SInt32; var valMinPourNoir,valMaxPourNoir : SInt32);     external;
function ScoreFinalEstConfirmeParValeursHashExacte(genreReflexion,scoreDeNoir,vMinPourNoir,vMaxPourNoir : SInt32) : boolean;     external;
function UpdatePositionEtTrait(var positionEtTrait : PositionEtTraitRec; whichMove : SInt32) : boolean;     external;
procedure TesterClefHashage(valeurCorrecte : SInt32; nomFonction : String255);     external;
function GetEndgameValuesInAllBitboardHashTables(var plat : PositionEtTraitRec; var valMinPourNoir,valMaxPourNoir,bestMove : SInt32) : boolean;     external;
function NbPionsDeCetteCouleurDansPosition(couleur : SInt32; var position : plateauOthello) : SInt32;     external;
function GetCalculCourantDeCassioPourLeZoo : LongString;     external;
procedure WritelnLongStringDansRapport(const ligne : LongString);     external;
procedure GetMeilleureSuiteInfos(var infos : meilleureSuiteInfosRec);     external;
function GetMeilleureSuite : String255;     external;
procedure FabriqueMeilleureSuiteInfos(premierCoup : SInt16; suiteJouee : t_suiteJouee; meilleureSuite : meilleureSuitePtr; coul : SInt16; plat : plateauOthello; nBla,nNoi : SInt32; message : SInt32);     external;
function StructureMeilleureSuiteToString(const meilleureSuite : t_meilleureSuite; prof : SInt32) : String255;     external;
function NbCasesVidesDansPosition(var position : plateauOthello) : SInt32;     external;
procedure SetMeilleureSuite(s : String255);     external;
function CassioEstEnModeAnalyse : boolean;     external;
procedure EcritMeilleureSuite;     external;
function GetStatutMeilleureSuite : SInt32;     external;
procedure SetStatutMeilleureSuite(leStatut : SInt32);     external;
	function TPCopy (source : String255; start, count: SInt32) : String255;     external;
procedure AjouteMeilleureSuiteDansGameTree(genreReflexion : SInt32; meilleureSuite : String255; scoreDeNoir : SInt32; G : GameTree; exclamation : boolean; virtualite : SInt16);     external;
procedure SetMeilleureSuiteInfos(var infos : meilleureSuiteInfosRec);     external;
function PositionEtTraitEnString(var positionEtTrait : PositionEtTraitRec) : String255;     external;
procedure SetLargeurFenetreProbCut;     external;
procedure WritelnCoupDansRapport(square : SInt16);     external;
function GetMinimaxValueOfResult(const myResult : SearchResult) : SInt32;     external;
function SearchResultEnMidgameEval(const result : SearchResult) : SInt32;     external;
procedure EcritAnnonceFinaleDansMeilleureSuite(typeCalculFinale,nroCoup,deltaFinale : SInt32);     external;
procedure SetValReflex(var classAux : ListOfMoveRecords; profondeur,compt,longueurclass,genre,numero,IndexEnCours,couleur : SInt16);     external;
procedure EcritReflexion(const fonctionAppelante : String255);     external;
function GetBestMoveAttenteAnalyseDeFinale : SInt32;     external;
function PeutJouerIci(couleur,a : SInt32; const plat : plateauOthello) : boolean;     external;
procedure WritelnCoupAndNumDansRapport(square : SInt32; num : SInt32);     external;
procedure Calcule_Valeurs_Tactiques(plat : plateauOthello; avecCalculCentre : boolean);     external;
procedure LanceChrono;     external;
procedure LanceChronoCetteProf;     external;
  function InRange(n, minimum, maximum : SInt32) : boolean;     external;
function NoteEnString(note : SInt32; avecSignePlus : boolean; nbEspacesDevant,nbDecimales : SInt16) : String255;     external;
function EstLaListeDesCoupsDeFenetreReflexion(var whichList : ListOfMoveRecords) : boolean;     external;
procedure SetValReflexFinale(var classAux : ListOfMoveRecords; profondeur,compt,longueurclass,genre,numero,IndexEnCours,couleur : SInt16);     external;
procedure SetCoupEtScoreAnalyseRetrogradeDansReflex(coup,score : SInt32);     external;
function GetEndgameBornesDansHashExacteAfterThisSon(whichSon : SInt32; platDepart : PositionEtTraitRec; clefHashage : SInt32; var bornes : DecompressionHashExacteRec) : boolean;     external;
function GetEndgameScoreDansHashExacteAfterThisSon(whichSon : SInt32; platDepart : PositionEtTraitRec; clefHashage : SInt32; var score : SInt32) : boolean;     external;
function EstLeCoupParfaitAfficheCommeSuggestionDeFinale(whichMove : SInt32) : boolean;     external;
procedure EcritClassementDansRapport(whichClassement : ListOfMoveRecords; prompt : String255; longueurClassement : SInt32);     external;
function EstLaPositionCourante(var position : PositionEtTraitRec) : boolean;     external;
procedure SetMeilleureNoteSurCase(origine : SInt32; whichSquare : SInt16; whichNote : SInt32);     external;
procedure SetNoteSurCase(origine : SInt32; whichSquare : SInt16; whichNote : SInt32);     external;
function SuggestionAnalyseDeFinaleEstDessinee : boolean;     external;
procedure MetLesCoupsDansLeMemeOrdre(maitres : ListOfMoveRecords; var esclaves : ListOfMoveRecords; longueurClassement : SInt32);     external;
function GetCouleurOfSquareDansJeuCourant(whichSquare : SInt32) : SInt32;     external;
procedure EffacePionMontreCoupLegal(x : SInt16);     external;
procedure DessinePionMontreCoupLegal(x : SInt16);     external;
function MinimaxAEvalueAUMoinsUnCoupDansCettePasse : boolean;     external;
procedure SetNroLigneEnCoursDAnalyseDansReflex(nroLigne : SInt32);     external;
procedure DoMoveEndgameTree(numeroArbre,coup,trait : SInt32);     external;
procedure UndoMoveEndgameTree(numeroArbre : SInt32);     external;
procedure SetNombreDeCoupsEvaluesParMinimaxDansCettePasse(nombre : SInt32);     external;
function GetNombreDeCoupsEvaluesParMinimaxDansCettePasse : SInt32;     external;
procedure WritelnInterruptionDansRapport(uneInterruption : SInt16);     external;
  function Signe(n : SInt32) : SInt32;     external;
function MinimaxAEvalueTousLesCoupsDansCettePasse(longClass : SInt32) : boolean;     external;
procedure EcritRefutationsDansRapport(longClass : SInt32; var classAux : ListOfMoveRecords);     external;
procedure SetEcritToutDansRapportLog(flag : boolean);     external;
procedure SetRedirigerContenuFntreReflexionDansRapport(flag : boolean);     external;
procedure MemoryFillChar(bufferPtr : universal UnivPtr; byteCount: SInt32; caractere : char);     external;
function CalculeTempsAlloueEnFinale(CoulPourMeilleurFin : SInt16) : SInt32;     external;
procedure SetValeurTempsAlloueDansGestionTemps(alloue : SInt32);     external;
procedure EcritGestionTemps;     external;
function PrecisionFinaleEngineEnProfondeurMilieu(precision, empties : SInt32) : SInt32;     external;
procedure SetValeursGestionTemps(alloue,effectif,prevu : SInt32; divergence : double; prof,suivante : SInt16);     external;
procedure MetScorePrevuParFinaleDansCourbe(nroCoupDeb,nroCoupFin : SInt32; origine : typeGenreDeReflexion; scorePourNoir : SInt32);     external;
procedure SauvegardeLigneOptimale(coul : SInt32);     external;
function PeutCalculerFinaleOptimaleParOptimalite(var PlatAcomparer : plateauOthello; nbNoirCompare,nbBlancCompare : SInt32; var ChoixX,MeilleurDef,scorePourNoir : SInt32) : boolean;     external;
procedure SetCassioEstEnTrainDeReflechir(newvalue : boolean; oldValue : BooleanPtr);     external;
procedure SetGenreDerniereReflexionDeCassio(typeReflexion,numeroCoup : SInt32);     external;
function StopAlphaBetaTasks : OSStatus;     external;
function CreateAlphaBetaTasks : OSStatus;     external;
procedure ActiverSuggestionDeCassio(whichPos : PositionEtTraitRec; bestMove,bestDef : SInt32; fonctionAppelante : String255);     external;
function PositionEtTraitCourant : PositionEtTraitRec;     external;
procedure SetSuiteParfaiteEstConnueDansGameTree(flag : boolean);     external;
function ListeChaineeDesCasesVidesEstDisponible : boolean;     external;
procedure SetDerniereAnnonceFinaleDansMeilleureSuite(s : String255);     external;
procedure SetPositionDansFntreReflexion(var reflexionInfos : ReflexRec; position : PositionEtTraitRec);     external;
procedure CarteJouable(const plat : plateauOthello; var carte : plBool);     external;
procedure CarteFrontiere(const plat : plateauOthello; var front : InfoFront);     external;
procedure VideToutesLesHashTablesExactes;     external;
procedure VideHashTableExacte(whichHashTableExacte : HashTableExactePtr);     external;
procedure VideHashTableCoupsLegaux(whichHashTableCoupsLegaux : CoupsLegauxHashPtr);     external;
procedure VideHashTable(whichHashTable : HashTableHdl);     external;
procedure AllocateAllBitboardHashTables;     external;
procedure InitialiseConstantesCodagePosition;     external;
procedure CarteMove(coul : SInt32; const plat : plateauOthello; var carte : plBool; var mobilite : SInt32);     external;
procedure CreeListeCasesVidesDeCettePosition(jeu : plateauOthello; listeChaineeUtiliseOrdreOptmisiseDesCases : boolean);     external;
procedure CreerListeChaineeDesCasesVides( nbVides : SInt32; var tete : celluleCaseVideDansListeChainee; var buffer : t_bufferCellulesListeChainee; var whichTablePointeurs : tableDePointeurs; fonctionAppelante : String255);     external;
procedure SetListeChaineeDesCasesVidesEstDisponible(flag : boolean);     external;
procedure ResetTraceExecutionFinale;     external;
function MakeOneElementPositionEtTraitSet(var position : PositionEtTraitRec; data : SInt32) : PositionEtTraitSet;     external;
procedure ReinitilaliseInfosAffichageReflexion;     external;
procedure EffaceReflexion(effacerAussiLeRuban : boolean);     external;
procedure AfficheMiniProfilerDansRapport(affichage : SInt32);     external;
procedure EffaceAnnonceFinaleSiNecessaire;     external;
function HasGotEvent(myEventMask : EventMask; var whichEvent : eventRecord; sleep : UInt32; mouseRgn : RgnHandle) : boolean;     external;
procedure TraiteEvenements;     external;
procedure TraiteNullEvent(var whichEvent : eventRecord);     external;
procedure DetruireListeDesCoupsPourLeZoo(prof : SInt32);     external;
procedure EnvoyerUneRequetePourArreterTousMesCalculsDuZoo;     external;
function VerifieAssertionsDeFinale : boolean;     external;
function MakeEmptyStringSet : StringSet;     external;
procedure PartagerLeTempsMachineAvecLesAutresProcess(WNESleep : SInt32);     external;
function ScriptDeFinaleEnCours : boolean;     external;
procedure SetAutoVidageDuRapport(flag : boolean);     external;
function CalculateHashIndexFromThisNode(var positionCherchee : PositionEtTraitRec; whichNode : GameTree; var dernierCoup : SInt32) : SInt32;     external;
procedure ViderNotesSurCases(origine : SInt32; effacer : boolean; surQuellesCases : SquareSet);     external;
function AllocateNewEndgameTree(startingNode : GameTree; var numeroArbre : SInt32) : boolean;     external;
procedure SearchPositionFromThisNode(whichPosition : PositionEtTraitRec; whichNode : GameTree; var result : GameTree);     external;
procedure RetropropagerScoreDesFilsDansGameTree(G : GameTree);     external;
function PrefixeFichierProfiler : String255;     external;
procedure EngineBeginFeedHashSequence;     external;
procedure MetSousArbreDansHashTableExacte(G : GameTree; nbVidesMinimum : SInt32);     external;
procedure EngineEndFeedHashSequence;     external;
procedure TrierSelonHashTableExacte(platDepart : PositionEtTraitRec; var classement : ListOfMoveRecords; longClass, clefHashage : SInt32);     external;
procedure EcritMeilleureSuiteParOptimalite;     external;
procedure DetruitLesFilsVirtuelsInutilesDeCeNoeud(var G : GameTree);     external;
procedure TrierLesFilsDeCeNoeud(G : GameTree; critereDeTri : SInt32; var changed : boolean);     external;
function GetAffichageProprietesOfCurrentNode : UInt32;     external;
procedure DessineAutresInfosSurCasesAideDebutant(surQuellesCases : SquareSet; fonctionAppelante : String255);     external;
procedure LibereEndgameTree(numeroArbre : SInt32);     external;
procedure EcritStatistiquesEndgameTrees;     external;
procedure DisposeStringSet(var S : StringSet);     external;
function AllocateMemoryPtrClear(whichSize : SInt32) : Ptr;     external;
function AllocateMemoryHdlClear(whichSize : SInt32) : handle;     external;
procedure DisposeMemoryPtr(var whichPtr : Ptr);     external;
function GetFather(G : GameTree) : GameTree;     external;
