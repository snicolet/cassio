	function Min (a, b: SInt32) : SInt32;     external;
	function Max (a, b: SInt32) : SInt32;     external;
	procedure AttendFrappeClavier;     external;
procedure WritelnDansRapport(s : String255);     external;
procedure WriteDansRapport(s : String255);     external;
procedure WritelnNumDansRapport(s : String255; num : SInt32);     external;
procedure WriteNumDansRapport(s : String255; num : SInt32);     external;
procedure WritelnStringAndBoolDansRapport(s : String255; b : boolean);     external;
procedure WriteStringAndBoolDansRapport(s : String255; b : boolean);     external;
procedure WritelnStringAndBooleenDansRapport(s : String255; b : boolean);     external;
procedure WriteStringAndBooleenDansRapport(s : String255; b : boolean);     external;
procedure WritelnStringAndBooleanDansRapport(s : String255; b : boolean);     external;
procedure WriteStringAndBooleanDansRapport(s : String255; b : boolean);     external;
procedure WritelnDansRapportThreadSafe(s : String255);     external;
procedure MemoryFillChar(bufferPtr : universal UnivPtr; byteCount: SInt32; caractere : char);     external;
function AllocateMemoryPtr(whichSize : SInt32) : Ptr;     external;
procedure WritelnDansRapportEtAttendFrappeClavier(s : String255; bip : boolean);     external;
procedure DisposeMemoryPtr(var whichPtr : Ptr);     external;
procedure DisposeMemoryHdl(var whichHandle : handle);     external;
  procedure MyDeleteString( var s : String255; index, nb_chars_to_delete : SInt32);     external;
	function UpCaseStr (s : String255) : String255;     external;
	function LeftStr (const s : String255; len : SInt32) : String255;     external;
	function IsDigit(ch : char) : boolean;     external;
  procedure StrToInt32(const s : String255; var theLongint : SInt32);     external;
	function TPCopy (source : String255; start, count: SInt32) : String255;     external;
	procedure SplitBy (s : String255; sub : char; var left, right: String255);     external;
  procedure EnleveEspacesDeGaucheSurPlace(var s : String255);     external;
  procedure EnleveEspacesDeDroiteSurPlace(var s : String255);     external;
	function MyFSReadAt (refnum : SInt16; pos, len : SInt32; p : Ptr) : OSErr;     external;
  procedure SWAP_LONGINT( arg : UInt32Ptr );     external;
  procedure SWAP_INTEGER( arg : UInt16Ptr );     external;
	function MyFSWriteAt (refnum : SInt16; mode : SInt16; pos, len : SInt32; p : Ptr) : OSErr;     external;
  function EnleveEspacesDeDroite(const s : String255) : String255;     external;
  procedure EnleveEtCompteCeCaractereADroite(var s : String255; ch : char; var nbCaracteresEnleves : SInt16);     external;
  function CreateDirectoryWithThisPath(directoryPath : String255) : OSErr;     external;
function FileExists(nom : String255 ; vRefNum : SInt16; var fic : basicfile) : OSErr;     external;
function CreateFile(nom : String255 ; vRefNum : SInt16; var fic : basicfile) : OSErr;     external;
function OpenFile(var fic : basicfile) : OSErr;     external;
function EmptyFile(var fic : basicfile) : OSErr;     external;
function CloseFile(var fic : basicfile) : OSErr;     external;
function InsertFileInFile(var insere,receptacle : basicfile) : OSErr;     external;
procedure SetFileCreatorFichierTexte(var fic : basicfile; quelType : OSType);     external;
	
  function EndsWith(const s : String255; const sub : String255) : boolean;     external;
	function MyTrunc(x : double) : SInt32;     external;
procedure MoveMemory(sourcePtr,destPtr: Ptr; byteCount: SInt32);     external;
function FichierTexteDeCassioExiste(nom : String255; var fic : basicfile) : OSErr;     external;
function GetNroOrdreAlphabetiqueJoueur(nroJoueur : SInt32) : SInt32;     external;
function EndOfFile(var fic : basicfile; var erreurES : OSErr) : boolean;     external;
function Readln(var fic : basicfile; var s : String255) : OSErr;     external;
	function SplitAt (s : String255; sub : char; var s1, s2 : String255) : boolean;     external;
  function UpperCase(const s : String255; keepDiacritics : boolean) : String255;     external;
function GetNomJoueur(nroJoueur : SInt32) : String255;     external;
procedure SetNomJaponaisDuJoueur(nroJoueur : SInt32; nomJaponais : String255);     external;
procedure SetNomJoueur(nroJoueur : SInt32; joueur : String255);     external;
procedure SetNomCourtJoueur(nroJoueur : SInt32; joueur : String255);     external;
procedure SetNroOrdreAlphabetiqueJoueur(nroJoueur : SInt32; nroDansOrdreAlphabetique : SInt32);     external;
procedure SetNroDansFichierJoueur(nroJoueur : SInt32; nroDansSonFichier : SInt32);     external;
procedure SetJoueurEstUnOrdinateur(nroJoueur : SInt32; flag : boolean);     external;
procedure SetNomTournoi(nroTournoi : SInt32; tournoi : String255);     external;
procedure SetNomCourtTournoi(nroTournoi : SInt32; tournoi : String255);     external;
procedure SetNroOrdreAlphabetiqueTournoi(nroTournoi : SInt32; nroDansOrdreAlphabetique : SInt32);     external;
procedure SetNroDansFichierTournoi(nroTournoi : SInt32; nroDansSonFichier : SInt32);     external;
procedure TraduitNomJoueurEnMac(ancNom : String255; var nouveauNom : String255);     external;
procedure SetNombreJoueursDansBaseOfficielle(combien : SInt32);     external;
procedure AlerteSimpleFichierTexte(nomFichier : String255; erreurES : SInt32);     external;
function MakeEmptyATR : ATR;     external;
function MakeEmptyStringSet : StringSet;     external;
function Writeln(var fic : basicfile; s : String255) : OSErr;     external;
procedure InsererDansATR(var arbre : ATR; const chaine : String255);     external;
function ATRIsEmpty(x : ATR) : boolean;     external;
function ChaineEstPrefixeDansATR(x : ATR; const chaine : String255) : boolean;     external;
function GetNroJoueurDansSonFichier(nroJoueur : SInt32) : SInt32;     external;
function MemberOfStringSet(const theString : String255; var data : SInt64; S : StringSet) : boolean;     external;
procedure AddStringToSet(const theString : String255; data : SInt32; var S : StringSet);     external;
procedure DisposeStringSet(var S : StringSet);     external;
procedure DisposeATR(var theATR : ATR);     external;
procedure TraduitNomTournoiEnMac(ancNom : String255; var nouveauNom : String255);     external;
procedure SetNombreTournoisDansBaseOfficielle(combien : SInt32);     external;
function GetNroOrdreAlphabetiqueTournoi(nroTournoi : SInt32) : SInt32;     external;
function GetNomTournoi(nroTournoi : SInt32) : String255;     external;
procedure SetNomJaponaisDuTournoi(nroTournoi : SInt32; nomJaponais : String255);     external;
function DeleteFile(var fic : basicfile) : OSErr;     external;
procedure SetFileTypeFichierTexte(var fic : basicfile; quelType : OSType);     external;
	function MyFSRead(refnum : SInt16; len : SInt32; p : Ptr) : OSErr;     external;
	function ReadStringFromRessource(stringListID, index : SInt16) : String255;     external;
procedure AlerteSimple(texte : String255);     external;
	function ReplaceParameters(s, p0, p1, p2, p3 : String255) : String255;     external;
  procedure ShareTimeWithOtherProcesses(quantity : SInt32);     external;
	function GetPathOfScannedDirectory : String255;     external;
	procedure SetFileCreator(fichier : fileInfo; QuelType : OSType);     external;
	procedure SetFileType(fichier : fileInfo; QuelType : OSType);     external;
	function GetWDName(WDRefNum : SInt16) : String255;     external;
	function MakeFileInfo(vrn : SInt16; dirID : SInt32; name : String255; var fs : fileInfo) : OSErr;     external;
	function SetPathOfScannedDirectory(var folder : fileInfo) : OSErr;     external;
	function ScanDirectory (fs : fileInfo; doit : ScanProc) : OSErr;     external;
function NroOuverture(var s : packed7) : SInt32;     external;
	function EscapeDansQueue : boolean;     external;
procedure GeneralQuickSort(lo,up : SInt32; lecture : LectureTableauProc; affectation : AffectationProc; ordre : OrdreProc);     external;
function OpenPrefsFileForSequentialReading : OSErr;     external;
function EOFInPrefsFile : boolean;     external;
function GetNextLineInPrefsFile(var s : String255) : OSErr;     external;
  procedure Parse2(s : String255; var s1,s2,reste : String255);     external;
  function ReplaceStringOnce(const s, pattern, replacement : String255) : String255;     external;
function ClosePrefsFile : OSErr;     external;
  procedure SafeSetCursor(myCursor : CursHandle);     external;
function BeginIterationOnCassioFolderPaths(firstPathToTry : String255) : String255;     external;
procedure AddValidCassioFolderPath(whichPath : String255);     external;
function TryNextCassioFolderPath : String255;     external;
procedure ReparerFichiersSolitaires;     external;
procedure RemettreLeCurseurNormalDeCassio;     external;
