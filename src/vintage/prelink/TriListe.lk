	function Min (a, b: SInt32) : SInt32;     external;
	function Max (a, b: SInt32) : SInt32;     external;
	procedure AttendFrappeClavier;     external;
procedure WritelnDansRapport(s : String255);     external;
procedure WriteDansRapport(s : String255);     external;
procedure WritelnNumDansRapport(s : String255; num : SInt32);     external;
procedure WriteNumDansRapport(s : String255; num : SInt32);     external;
procedure WritelnStringAndBoolDansRapport(s : String255; b : boolean);     external;
procedure WriteStringAndBoolDansRapport(s : String255; b : boolean);     external;
procedure WritelnStringAndBooleenDansRapport(s : String255; b : boolean);     external;
procedure WriteStringAndBooleenDansRapport(s : String255; b : boolean);     external;
procedure WritelnStringAndBooleanDansRapport(s : String255; b : boolean);     external;
procedure WriteStringAndBooleanDansRapport(s : String255; b : boolean);     external;
procedure WritelnDansRapportThreadSafe(s : String255);     external;
function MakeEmptyIntegerSet : IntegerSet;     external;
procedure DisposeIntegerSet(var S : IntegerSet);     external;
function GetAnneePartieParNroRefPartie(nroReference : SInt32) : SInt16;     external;
function GetNroTournoiParNroRefPartie(nroReference : SInt32) : SInt32;     external;
function GetNumeroOrdreAlphabetiqueTournoiParNroRefPartie(nroReference : SInt32) : SInt32;     external;
function GetNumeroOrdreAlphabetiqueJoueurNoirParNroRefPartie(nroReference : SInt32) : SInt32;     external;
function GetNumeroOrdreAlphabetiqueJoueurBlancParNroRefPartie(nroReference : SInt32) : SInt32;     external;
function GetNroJoueurNoirParNroRefPartie(nroReference : SInt32) : SInt32;     external;
function GetNroJoueurBlancParNroRefPartie(nroReference : SInt32) : SInt32;     external;
procedure ExtraitPartieTableStockageParties(nroReference : SInt32; var partieStr : PackedThorGame);     external;
function COMPARE_PACKED_GAMES(const game1, game2 : PackedThorGame) : SInt32;     external;
function GetGainTheoriqueParNroRefPartie(nroReference : SInt32) : String255;     external;
function GetScoreReelParNroRefPartie(nroReference : SInt32) : SInt16;     external;
function GetNroDistributionParNroRefPartie(nroReference : SInt32) : SInt32;     external;
function AllocateMemoryPtr(whichSize : SInt32) : Ptr;     external;
function GetScoreTheoriqueParNroRefPartie(nroReference : SInt32) : SInt16;     external;
procedure DisposeMemoryPtr(var whichPtr : Ptr);     external;
	function MyTrunc(x : double_t) : SInt32;     external;
procedure AlerteSimple(texte : String255);     external;
function AutorisationCalculsLongsSurListe : boolean;     external;
procedure WritelnDansRapportEtAttendFrappeClavier(s : String255; bip : boolean);     external;
procedure TrierAlphabetiquementJoueursNouveauFormat;     external;
function LitNomsDesJoueursEnJaponais : OSErr;     external;
procedure TrierAlphabetiquementTournoisNouveauFormat;     external;
function LitNomsDesTournoisEnJaponais : OSErr;     external;
procedure AnnulerSousCriteresRuban;     external;
procedure SetPortByWindow(window : WindowPtr);     external;
	function MakeRect(left, top, right, bottom : SInt32) : Rect;     external;
  procedure SafeSetCursor(myCursor : CursHandle);     external;
function GetNombreDePartiesActivesDansLeCachePourCeCoup(numeroDuCoup : SInt32) : SInt32;     external;
function ListePartiesEstGardeeDansLeCache(quelCoup,nombrePartiesCompatibles : SInt32) : boolean;     external;
procedure InvalidateNombrePartiesActivesDansLeCache(quelNroCoup : SInt16);     external;
procedure EcritRubanListe(avecDessinDesCriteres : boolean);     external;
procedure CalculEmplacementCriteresListe;     external;
procedure LanceCalculsRapidesPourBaseOuNouvelleDemande(infosDejaCalculees,withCheckEvent : boolean);     external;
procedure RemettreLeCurseurNormalDeCassio;     external;
  procedure EnleveEspacesDeGaucheSurPlace(var s : String255);     external;
  function EnleveChiffresEntreCesCaracteres(delim1,delim2 : char; const s : String255; keepDelimitors : boolean) : String255;     external;
  function EnleveCesCaracteresEntreCesCaracteres(whichChars : SetOfChar; delim1,delim2 : char; const s : String255; keepDelimitors : boolean) : String255;     external;
  function EnleveChiffresAvantCeCaractereEnDebutDeLigne(delim : char; const s : String255; keepDelimitor : boolean) : String255;     external;
  function EnleveCesCaracteresApresCeCaractereEnFinDeLigne(whichChars : SetOfChar; delim : char; const s : String255; keepDelimitor : boolean) : String255;     external;
  function EnleveChiffresApresCeCaractereEnFinDeLigne(delim : char; const s : String255; keepDelimitor : boolean) : String255;     external;
function TrouverNomsDesJoueursDansNomDeFichier(s : String255; var numeroJoueur1,numeroJoueur2 : SInt32; longueurMinimaleUnPseudo : SInt32; var qualiteSolution : double_t) : boolean;     external;
function MemberOfIntegerSet(theKey: SInt32; var data : SInt32; S : IntegerSet) : boolean;     external;
procedure AddIntegerToSet(theKey : SInt32; data : SInt32; var S : IntegerSet);     external;
function GetNomJoueur(nroJoueur : SInt32) : String255;     external;
function NbPartiesDansLaSelectionDeLaListe : SInt32;     external;
function PartieEstActiveEtSelectionnee(nroReferencePartie : SInt32) : boolean;     external;
function AllocateMemoryHdl(whichSize : SInt32) : handle;     external;
procedure GeneralShellSort(lo,up : SInt32; lecture : LectureTableauProc; affectation : AffectationProc; ordre : OrdreProc);     external;
procedure DisposeMemoryHdl(var whichHandle : handle);     external;
function LongueurSelectionRapport : SInt32;     external;
procedure ForEachLineSelectedInRapportDo(doWhat : StringProc; var result : SInt32);     external;
function DumpPressePapierToFile(var fic : FichierTEXT; flavorType : ScrapFlavorType) : OSErr;     external;
procedure ForEachLineInFileDo(whichFile : FSSpec ; DoWhat : LineOfFileProc; var result : SInt32);     external;
function DetruitFichierTexte(var fic : FichierTEXT) : OSErr;     external;
procedure DialogueSimple(dialogueID : SInt16{; s1,s2,s3,s4 : String255});     external;
function LongueurPressePapier(flavor : ScrapFlavorType) : SInt32;     external;
procedure CalculsEtAffichagePourBase(infosDejaCalculees : boolean; withCheckEvent : boolean);     external;
