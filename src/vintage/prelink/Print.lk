	function Min (a, b: SInt32) : SInt32;     external;
	function Max (a, b: SInt32) : SInt32;     external;
	procedure AttendFrappeClavier;     external;
procedure WritelnDansRapport(s : String255);     external;
procedure WriteDansRapport(s : String255);     external;
procedure WritelnNumDansRapport(s : String255; num : SInt32);     external;
procedure WriteNumDansRapport(s : String255; num : SInt32);     external;
procedure WritelnStringAndBoolDansRapport(s : String255; b : boolean);     external;
procedure WriteStringAndBoolDansRapport(s : String255; b : boolean);     external;
procedure WritelnStringAndBooleenDansRapport(s : String255; b : boolean);     external;
procedure WriteStringAndBooleenDansRapport(s : String255; b : boolean);     external;
procedure WritelnStringAndBooleanDansRapport(s : String255; b : boolean);     external;
procedure WriteStringAndBooleanDansRapport(s : String255; b : boolean);     external;
procedure WritelnDansRapportThreadSafe(s : String255);     external;
procedure AjusteCurseur;     external;
	function StringWidthPourGNUPascal(const s : String255): SInt16;     external;
	procedure DrawStringPourGNUPascal(const s : String255);     external;
	function ParamStr(s, p0, p1, p2, p3 : String255) : String255;     external;
	function ReadStringFromRessource(stringListID, index : SInt16) : String255;     external;
  procedure MyEraseRect(const (*var*) r : Rect);     external;
  procedure MyEraseRectWithColor(const (*var*) r : Rect; couleurCmd : SInt32; whichPattern : pattern; fonctionAppelante : String255);     external;
	function LargeurDiagrammeFFORUM : SInt16;     external;
	function HauteurDiagrammeFFORUM : SInt16;     external;
	procedure ConstruitPositionEtCoupDapresPartie(var positionEtCoupStr: String255);     external;
	procedure ParserPositionEtCoupsOthello8x8(positionEtCoupStr : String255; var chainePositionInitiale,chaineCoups : String255);     external;
	function ConstruitChainePosition8x8(plat : plateauOthello) : String255;     external;
function JeuCourant : plateauOthello;     external;
	procedure ConstruitPositionPicture(chainePosition,chaineCoups : String255);     external;
	procedure ConstruitPicturePionsDeltaCourants;     external;
	procedure ConstruitDiagrammePicture(chainePositionInitiale,chaineCoups : String255);     external;
function StatistiquesSontEcritesDansLaFenetreNormale : boolean;     external;
procedure SetStatistiquesSontEcritesDansLaFenetreNormale(flag : boolean);     external;
procedure DessineRubanStatistiques(decH,decV : SInt16);     external;
procedure DessineStatistiques(avecEffacement : boolean; decH,decV : SInt32; withCheckEvent : boolean);     external;
	function EscapeDansQueue : boolean;     external;
procedure ConstruitPositionEtCoupDapresListe(nroPartie : SInt32; var positionEtCoupStr : String255);     external;
procedure EssayerConstruireTitreDapresListe(nroPartie : SInt32);     external;
procedure DessineBibliotheque(ligneDebut,ligneFin,decH,decV : SInt32);     external;
	function MyTrunc(x : double) : SInt32;     external;
procedure SetPortByWindow(window : WindowPtr);     external;
  procedure WriteNumAt(s : String255; num : SInt32; h,v : SInt32);     external;
procedure NewParamDiag(var paramDiag : ParamDiagRec);     external;
procedure GetParamDiag(var paramDiag : ParamDiagRec);     external;
procedure CopyCommentParamDiag(var source,dest : ParamDiagRec);     external;
procedure SetParamDiag(var paramDiag : ParamDiagRec);     external;
  procedure SafeSetCursor(myCursor : CursHandle);     external;
function GetScreenBounds : rect;     external;
	function MyNewCWindow( wStorage: UnivPtr; const boundsRect: Rect; const  title: String255; visible: Boolean; procID: SInt16; behind: WindowRef; goAwayFlag: Boolean; refCon: SInt32 ): WindowRef;     external;
function FenetreFictiveAvantPlan : WindowPtr;     external;
procedure DisposeParamDiag(var paramDiag : ParamDiagRec);     external;
procedure RemettreLeCurseurNormalDeCassio;     external;
	procedure EmuleToucheCommandeParControleDansEvent(var myEvent : eventRecord);     external;
function EvenementDuDialogue(dlog : DialogPtr; var evt : eventRecord) : boolean;     external;
function MyFiltreClassique(dlog : DialogPtr; var evt : eventRecord; var item : SInt16) : boolean;     external;
procedure FlashItem(dlog : DialogPtr; itemNumber : SInt16);     external;
	function GetFileMenu : MenuRef;     external;
procedure SetPortByDialog(dialog : DialogPtr);     external;
function QDGetPortBound : rect;     external;
procedure GetDialogItemRect(dp : DialogPtr; itemNumber : SInt16; var itemRect : rect);     external;
procedure SetItemTextInDialog(dp : DialogPtr; itemNumber : SInt16; s : String255);     external;
procedure SetRGBColor (var theColor: RGBColor; redValue, greenValue, blueValue: SInt32);     external;
procedure OutlineOK(dp : DialogPtr);     external;
procedure SetBoolRadio(dp : DialogPtr; itemNumber : SInt16; value : boolean);     external;
procedure SetBoolCheckBox(dp : DialogPtr; itemNumber : SInt16; value : boolean);     external;
procedure HiliteControlInDialog(dp : DialogPtr; itemNumber,hiliteState : SInt16);     external;
function MyGetPortBounds(port: CGrafPtr) : Rect;     external;
procedure MyDrawDialog(dp : DialogPtr);     external;
procedure SwitchToScript(whichScript : SInt32);     external;
procedure BeginDialog;     external;
function MyGetNewDialog(dialogID : SInt16) : DialogPtr;     external;
  function CenterRectInRect(original,bigRect : rect) : rect;     external;
procedure ValidRect(r : rect);     external;
	function DoDiagrammeFFORUM(ParametreTexte: String255; const chainePositionInitiale,chainePosition,chaineCoups : String255) : boolean;     external;
procedure GetItemTextInDialog(dp : DialogPtr; itemNumber : SInt16; var s : String255);     external;
procedure MyDisposeDialog(var dlog : DialogPtr);     external;
procedure MyDisposeModalFilterUPP(var userUPP : ModalFilterUPP);     external;
procedure GetCurrentScript(var currentScript : SInt32);     external;
procedure SwitchToRomanScript;     external;
procedure EndDialog;     external;
