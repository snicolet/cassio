	function Min (a, b: SInt32) : SInt32;     external;
	function Max (a, b: SInt32) : SInt32;     external;
	procedure AttendFrappeClavier;     external;
procedure WritelnDansRapport(s : String255);     external;
procedure WriteDansRapport(s : String255);     external;
procedure WritelnNumDansRapport(s : String255; num : SInt32);     external;
procedure WriteNumDansRapport(s : String255; num : SInt32);     external;
procedure WritelnStringAndBoolDansRapport(s : String255; b : boolean);     external;
procedure WriteStringAndBoolDansRapport(s : String255; b : boolean);     external;
procedure WritelnStringAndBooleenDansRapport(s : String255; b : boolean);     external;
procedure WriteStringAndBooleenDansRapport(s : String255; b : boolean);     external;
procedure WritelnStringAndBooleanDansRapport(s : String255; b : boolean);     external;
procedure WriteStringAndBooleanDansRapport(s : String255; b : boolean);     external;
procedure WritelnDansRapportThreadSafe(s : String255);     external;
	function TPCopy (source : String255; start, count: SInt32) : String255;     external;
  procedure StrToInt32(const s : String255; var theLongint : SInt32);     external;
procedure SetPortByWindow(window : WindowPtr);     external;
function GetWindowPortRect(window : WindowPtr) : rect;     external;
function GetScreenBounds : rect;     external;
function EnVieille3D : boolean;     external;
function  GetDebuggageUnitFichiersTexte : boolean;     external;
function GetReveillerRegulierementLeMac : boolean;     external;
function GetEcritToutDansRapportLog : boolean;     external;
function GetAvecAffichageNotesSurCases(origine : SInt32) : boolean;     external;
function InclurePartiesAvecOrdinateursDansListe : boolean;     external;
function cassio_must_get_zebra_nodes_from_disk : SInt32;     external;
function CassioIsUsingMetaphone : boolean;     external;
function GetCadence : SInt32;     external;
function TypeEvalEnCoursEnInteger : SInt32;     external;
function GetCadenceAutreQueAnalyse : SInt32;     external;
procedure SetEnVieille3D(flag : boolean);     external;
procedure SetDebuggageUnitFichiersTexte(flag : boolean);     external;
procedure SetReveillerRegulierementLeMac(flag : boolean);     external;
procedure SetAvecAffichageNotesSurCases(origine : SInt32; flag : boolean);     external;
procedure SetInclurePartiesAvecOrdinateursDansListe(flag : boolean);     external;
procedure SetCassioMustGetZebraNodesFromDisk(flag : boolean);     external;
procedure SetCassioIsUsingMetaphone(flag : boolean);     external;
procedure SetCadence(cadence : SInt32);     external;
procedure SetTypeEvaluationEnCours(laquelle : SInt32);     external;
procedure SetCadenceAutreQueAnalyse(cadenceAutreQueAnalyse : SInt32; avecJeuInstantane : boolean);     external;
function GetJeuInstantaneAutreQueAnalyse : boolean;     external;
procedure SetNombreDeProcesseursActifs(nombre : SInt32);     external;
  procedure Parse2(s : String255; var s1,s2,reste : String255);     external;
  function StrToInt32(const s : String255) : SInt32;     external;
  procedure Parse4(s : String255; var s1,s2,s3,s4,reste : String255);     external;
procedure SetNiemeJoueurTableSaisiePartie(N,nroJoueur : SInt32);     external;
procedure SetNiemeTournoiTableSaisiePartie(N,nroTournoi : SInt32);     external;
function GetNiemeJoueurTableSaisiePartie(N : SInt32) : SInt32;     external;
function GetNiemeTournoiTableSaisiePartie(N : SInt32) : SInt32;     external;
function FichierTexteDeCassioExiste(nom : String255; var fic : basicfile) : OSErr;     external;
  function ReplaceStringOnce(const s, pattern, replacement : String255) : String255;     external;
function CreeFichierTexteDeCassio(nom : String255; var fic : basicfile) : OSErr;     external;
function OpenFile(var fic : basicfile) : OSErr;     external;
function EmptyFile(var fic : basicfile) : OSErr;     external;
procedure AlerteSimpleFichierTexte(nomFichier : String255; erreurES : SInt32);     external;
function CloseFile(var fic : basicfile) : OSErr;     external;
procedure RetirerZebraBookOption(mask : SInt32);     external;
function ZebraBookACetteOption(mask : SInt32) : boolean;     external;
procedure AjouterZebraBookOption(mask : SInt32);     external;
function Writeln(var fic : basicfile; s : String255) : OSErr;     external;
function GetRapportWindow : WindowPtr;     external;
function GetArbreDeJeuWindow : WindowPtr;     external;
	function MyTrunc(x : double) : SInt32;     external;
function CoupEnStringEnMinuscules(coup : SInt16) : String255;     external;
function GetPremierCoupParDefaut : SInt32;     external;
function GetPoliceNameNotesSurCases(origine : SInt32) : String255;     external;
function GetTailleNotesSurCases(origine : SInt32) : SInt16;     external;
function GetZebraBookContemptWindowWidth : SInt32;     external;
function GetZebraBookOptions : SInt32;     external;
function CassioDoitRentrerEnContactAvecLeZoo : boolean;     external;
function GetLastStringSearchedInGameTree : String255;     external;
function GetEngineName(numeroEngine : SInt32) : String255;     external;
procedure GetIntervalleDeDifficultePourProblemeDePriseDeCoin(var difficulteMin,difficulteMax : SInt32);     external;
procedure SetFileCreatorFichierTexte(var fic : basicfile; quelType : OSType);     external;
procedure SetFileTypeFichierTexte(var fic : basicfile; quelType : OSType);     external;
procedure StoppeEtAffichePourDebugage(chaine : String255);     external;
function ReadlnDansFichierTexte(var fic : basicfile; var s : String255) : OSErr;     external;
	function ReadStringFromRessource(stringListID, index : SInt16) : String255;     external;
procedure AlerteSimple(texte : String255);     external;
function EndOfFile(var fic : basicfile; var erreurES : OSErr) : boolean;     external;
  procedure ChaineToInteger(const s : String255; var theInteger : SInt16);     external;
procedure SetRGBColor (var theColor: RGBColor; redValue, greenValue, blueValue: SInt32);     external;
procedure SetPremierCoupParDefaut(coup : SInt32);     external;
function StringEnCoup(const s : String255) : SInt16;     external;
procedure SetZebraBookContemptWindowWidth(whichContempt : SInt32);     external;
procedure SetZebraBookOptions(options : SInt32);     external;
procedure SetCassioDoitRentrerEnContactAvecLeZoo(s : String255);     external;
procedure SetLastStringSearchedInGameTree(s : String255);     external;
procedure SetIntervalleDeDifficultePourProblemeDePriseDeCoin(difficulteMin,difficulteMax : SInt32);     external;
function GetNumeroOfEngine(nomEngine : String255) : SInt32;     external;
  procedure ParseWithQuoteProtection(s : String255; var tete,reste : String255);     external;
procedure SetPoliceNameNotesSurCases(origine : SInt32; whichPoliceName : String255);     external;
procedure SetTailleNotesSurCases(origine : SInt32; whichTaille : SInt16);     external;
procedure SetAlternativePoliceNameNotesSurCases(origine : SInt32; whichPoliceName : String255);     external;
procedure SetAlternativeTailleNotesSurCases(origine : SInt32; whichTaille : SInt16);     external;
function LargeurNormaleFenetreListe(nbreDeColonnes : SInt32) : SInt32;     external;
procedure AjoutePartieDansMenuReouvrir(CheminEtNomFichier : String255);     external;
function SousMenuReouvrirEstVide : boolean;     external;
procedure MyDisableItem(theMenu : MenuRef; item: MenuItemIndex);     external;
	function GetFileMenu : MenuRef;     external;
procedure MyEnableItem(theMenu : MenuRef; item: MenuItemIndex);     external;
  function MyGetMenu(resourceID : SInt16) : MenuRef;     external;
	procedure TerminateMenu(var theMenu : MenuRef; provientDUneResource : boolean);     external;
function CassioEstUnBundleApplicatif : boolean;     external;
function GetEngineBundleName : String255;     external;
function NumberOfEngines : SInt32;     external;
	function UpCase (ch : char) : char;     external;
  procedure MyAppendMenu( menu: MenuRef; const data: String255 );     external;
procedure LecturePreparatoireDossierEngines(pathDuDossierPere : String255 );     external;
procedure SetIntegerEditableText(dp : DialogPtr; itemNumber : SInt16; value : SInt16);     external;
procedure SetBoolCheckBox(dp : DialogPtr; itemNumber : SInt16; value : boolean);     external;
procedure GetDialogItemRect(dp : DialogPtr; itemNumber : SInt16; var itemRect : rect);     external;
function CassioIsUsingAnEngine(var numero : SInt32) : boolean;     external;
function CassioIsWaitingAnEngineResult : boolean;     external;
procedure KillCurrentEngine;     external;
procedure Wait(secondes : double);     external;
function CanStartEngine(pathMac, arguments : String255) : boolean;     external;
function GetEnginePath(numeroEngine : SInt32; nomEngine : String255) : String255;     external;
procedure RelancerDerniereRechercheEngine;     external;
procedure GetLongintEditableText(dp : DialogPtr; itemNumber : SInt16; var result : SInt32);     external;
procedure GetBoolCheckBox(dp : DialogPtr; itemNumber : SInt16; var result : boolean);     external;
procedure GetIntegerEditableText(dp : DialogPtr; itemNumber : SInt16; var result : SInt16);     external;
procedure ChangeNbPartiesChargeablesPourBase(nouveauNbPartiesChargeables : SInt32);     external;
function CalculeNbrePartiesOptimum(tailleDisponiblePourLaBase : SInt32) : SInt32;     external;
procedure BeginDialog;     external;
function MyFiltreClassiqueRapide(dlog : DialogPtr; var evt : eventRecord; var item : SInt16) : boolean;     external;
function MyGetNewDialog(dialogID : SInt16) : DialogPtr;     external;
procedure GetItemTextInDialog(dp : DialogPtr; itemNumber : SInt16; var s : String255);     external;
  function SeparerLesChiffresParTrois(var s : String255) : String255;     external;
	function ParamStr(s, p0, p1, p2, p3 : String255) : String255;     external;
procedure SetItemTextInDialog(dp : DialogPtr; itemNumber : SInt16; s : String255);     external;
procedure MyDrawDialog(dp : DialogPtr);     external;
procedure InitRadios(dp : DialogPtr; var Radios : RadioRec);     external;
	procedure DrawPUItem(theMenu : MenuRef; item : SInt16; loc : Rect; drawMark : boolean);     external;
procedure SetPortByDialog(dialog : DialogPtr);     external;
procedure OutlineOK(dp : DialogPtr);     external;
procedure PushRadio(dp : DialogPtr; var Radios : RadioRec; itemHit : SInt16);     external;
procedure FiltrerChiffreInEditText(dp : DialogPtr; itemNumber : SInt16);     external;
procedure ToggleCheckBox(dp : DialogPtr; itemNumber : SInt16);     external;
function IsCheckBoxOn(dp : DialogPtr; itemNumber : SInt16) : boolean;     external;
procedure InvalidateAllCasesDessinEnTraceDeRayon;     external;
procedure InvalidateAllOffScreenPICTs;     external;
procedure EcranStandard(clipRegion : RgnHandle; forcedErase : boolean);     external;
	function EventPopUpItemInDialog(dp : DialogPtr; menuTitleItem : SInt16; theMenu : MenuRef; var numItem : SInt16; menuRect : Rect; drawChoice, checkChoice : Boolean) : boolean;     external;
procedure SelectCassioFonts(theme : SInt32);     external;
procedure InvalidateAllWindows;     external;
procedure MyDisposeDialog(var dlog : DialogPtr);     external;
procedure MyDisposeModalFilterUPP(var userUPP : ModalFilterUPP);     external;
procedure EndDialog;     external;
function GetCheckBoxValue(dp : DialogPtr; itemNumber : SInt16) : boolean;     external;
procedure DoChangeGarderPartieNoireADroiteOthellier;     external;
procedure DoChangeAfficheMeilleureSuite;     external;
procedure DoChangeAfficheDernierCoup;     external;
procedure DoChangeAfficheProchainsCoups;     external;
procedure DoChangeAfficheSuggestionDeCassio;     external;
procedure DoChangeAffichePierresDelta;     external;
procedure DoChangeAfficheSignesDiacritiques;     external;
procedure DoChangeAfficheBibliotheque;     external;
procedure DoChangeAfficheNotesSurCases(origine : SInt32);     external;
procedure ToggleZebraOption(mask : SInt32);     external;
procedure LoadZebraBook(withCheckEvents : boolean);     external;
function GetCurrentNode : GameTree;     external;
procedure DetruitLesFilsZebraBookInutilesDeCeNoeud(var G : GameTree);     external;
procedure LireBibliothequeDeZebraPourCurrentNode(const fonctionAppelante : String255);     external;
procedure EffaceNoteSurCases(origine : SInt32; surQuellesCases : SquareSet);     external;
function GetAffichageProprietesOfCurrentNode : UInt32;     external;
procedure DessineNoteSurCases(origine : SInt32; surQuellesCases : SquareSet);     external;
procedure AfficheProprietesOfCurrentNode(dessinerAideDebutantSiNecessaire : boolean; surQuellesCases : SquareSet; const fonctionAppelante : String255);     external;
function EstVisibleDansFenetreArbreDeJeu(G : GameTree) : boolean;     external;
procedure EffaceNoeudDansFenetreArbreDeJeu;     external;
procedure EcritCurrentNodeDansFenetreArbreDeJeu(avecEcritureDesFils, doitEffacerPremiereLigneDeLaFenetre : boolean);     external;
procedure AjusteCurseur;     external;
procedure EffaceTousLesNomsCourtsDesJoueurs;     external;
procedure RegenererLesNomsMetaphoneDeLaBase;     external;
  procedure Parse(s : String255; var tete,reste : String255);     external;
	function DateCouranteEnString : String255;     external;
function GetApplicationName(default : String255) : String255;     external;
function GetApplicationBundleName : String255;     external;
function VersionDeCassioEnString : String255;     external;
procedure SetVerbosityOfZoo(value : SInt32);     external;
function VerbosityOfZoo : SInt32;     external;
function FileExists(nom : String255 ; vRefNum : SInt16; var fic : basicfile) : OSErr;     external;
function InsererFichierTexteDansFichierTexte(var insere,receptacle : basicfile) : OSErr;     external;
procedure SetUsingZebraBook(flag : boolean);     external;
