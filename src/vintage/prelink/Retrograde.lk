	function Min (a, b: SInt32) : SInt32;     external;
	function Max (a, b: SInt32) : SInt32;     external;
procedure WritelnDansRapport(s : String255);     external;
procedure WriteDansRapport(s : String255);     external;
procedure WritelnNumDansRapport(s : String255; num : SInt32);     external;
procedure WriteNumDansRapport(s : String255; num : SInt32);     external;
procedure WritelnStringAndBoolDansRapport(s : String255; b : boolean);     external;
procedure WriteStringAndBoolDansRapport(s : String255; b : boolean);     external;
procedure WritelnStringAndBooleenDansRapport(s : String255; b : boolean);     external;
procedure WriteStringAndBooleenDansRapport(s : String255; b : boolean);     external;
procedure WritelnStringAndBooleanDansRapport(s : String255; b : boolean);     external;
procedure WriteStringAndBooleanDansRapport(s : String255; b : boolean);     external;
procedure WritelnDansRapportThreadSafe(s : String255);     external;
	function MakeRect(left, top, right, bottom : SInt32) : Rect;     external;
	function NewMenuFlottant(whichID : SInt32; whichrect : Rect; whichItem : SInt16) : MenuFlottantRec;     external;
procedure GetDialogItemRect(dp : DialogPtr; itemNumber : SInt16; var itemRect : rect);     external;
	procedure InstalleMenuFlottant(var whichMenuFlottant : MenuFlottantRec; whichWindow : WindowPtr);     external;
  procedure CalculateMenuFlottantControl(var whichMenuFlottant : MenuFlottantRec; whichWindow : WindowPtr);     external;
	procedure DesinstalleMenuFlottant(var whichMenuFlottant : MenuFlottantRec);     external;
function EvenementDuDialogue(dlog : DialogPtr; var evt : eventRecord) : boolean;     external;
function MyFiltreClassique(dlog : DialogPtr; var evt : eventRecord; var item : SInt16) : boolean;     external;
	function InMenuCmdSet(item : SInt16; commands : menuCmdSet) : boolean;     external;
	procedure SetItemMenuFlottant(var whichMenuFlottant : MenuFlottantRec; whichItem : SInt16; var change : boolean);     external;
procedure MyEnableItem(theMenu : MenuRef; item: MenuItemIndex);     external;
procedure MyDisableItem(theMenu : MenuRef; item: MenuItemIndex);     external;
  procedure DrawPUItemMenuFlottant(var whichMenuFlottant : MenuFlottantRec; drawMark : boolean);     external;
  procedure EffaceMenuFlottant(var whichMenuFlottant : MenuFlottantRec);     external;
procedure SetPortByDialog(dialog : DialogPtr);     external;
procedure MyDrawDialog(dp : DialogPtr);     external;
procedure OutlineOK(dp : DialogPtr);     external;
  procedure CheckOnlyThisItem(var whichMenuFlottant : MenuFlottantRec; whichItem : SInt16);     external;
	function EventPopUpItemMenuFlottant(var whichMenuFlottant : MenuFlottantRec; drawChoice, checkChoiceBefore,checkChoiceAfter : Boolean) : boolean;     external;
procedure BeginDialog;     external;
procedure SwitchToScript(whichScript : SInt32);     external;
function MyGetNewDialog(dialogID : SInt16) : DialogPtr;     external;
procedure EssaieUpdateEventsWindowPlateau;     external;
procedure MyDisposeDialog(var dlog : DialogPtr);     external;
procedure MyDisposeModalFilterUPP(var userUPP : ModalFilterUPP);     external;
procedure GetCurrentScript(var currentScript : SInt32);     external;
procedure SwitchToRomanScript;     external;
procedure EndDialog;     external;
	function ReadStringFromRessource(stringListID, index : SInt16) : String255;     external;
	function ParamStr(s, p0, p1, p2, p3 : String255) : String255;     external;
procedure WritelnDansRapportSync(s : String255; scrollerSynchronisation : boolean);     external;
function ConstruireChaineReferencesPartieDapresListe(nroPartie : SInt32; descriptionComplete : boolean) : String255;     external;
function GetPartieEnAlphaDapresListe(nroReference,jusquaQuelCoup : SInt32) : String255;     external;
function PartiePourPressePapier(enMajuscules,avecEspaceEntreCoups : boolean; nbreCoupsAExporter : SInt16) : String255;     external;
function GetCurrentInterruption : SInt16;     external;
procedure EnleveCetteInterruption(typeInterruption : SInt16);     external;
procedure PlaquerPartieLegale(partieAlphaCompactee : String255; flags : SInt32);     external;
procedure LanceInterruption(typeInterruption : SInt16; const fonctionAppelante : String255);     external;
procedure SetCurrentScript(whichScript : SInt32);     external;
procedure DoFinaleOptimale(selectedByMenu : boolean);     external;
procedure DoFinaleGagnante(selectedByMenu : boolean);     external;
procedure DoMilieuDeJeuNormal(combienDeCoups : SInt16; selectedByMenu : boolean);     external;
function CalculePhasePartie(numeroCoup : SInt16) : SInt16;     external;
procedure SetDoitEcrireCommentaireCourbe(flag : boolean);     external;
procedure DoBackMove;     external;
function AQuiDeJouer : SInt32;     external;
procedure DessineCourbe(coloration : typeColorationCourbe; fonctionAppelante : String255);     external;
procedure Superviseur(n : SInt16);     external;
procedure Initialise_table_heuristique(jeu : plateauOthello; debug : boolean);     external;
function JeuCourant : plateauOthello;     external;
procedure EcritJeReflechis(coulChoix : SInt16);     external;
procedure DessineIconesChangeantes;     external;
procedure Calcule_Valeurs_Tactiques(plat : plateauOthello; avecCalculCentre : boolean);     external;
procedure SetProfImposee(flag : boolean; const fonctionAppelante : String255);     external;
function CalculeMeilleurCoupMilieuDePartie(const jeu : plateauOthello; var emplBool : plBool; var frontiere : InfoFront; couleur,profondeur,nbBlancs,nbNoirs : SInt32) : MoveRecord;     external;
procedure SetAutoVidageDuRapport(flag : boolean);     external;
procedure SetEcritToutDansRapportLog(flag : boolean);     external;
procedure SetEffetSpecial(flag : boolean);     external;
function GetCurrentNode : GameTree;     external;
procedure ViderSearchResults(var results : MakeEndgameSearchResultRec);     external;
function MakeEndgameSearch(var paramMakeEndgameSearch : MakeEndgameSearchParamRec ) : boolean;     external;
  function Signe(n : SInt32) : SInt32;     external;
procedure SetDeroulementAutomatiqueDuRapport(flag : boolean);     external;
procedure FinRapport;     external;
procedure TextNormalDansRapport;     external;
procedure ChangeFontFaceDansRapport(whichStyle : StyleParameter);     external;
procedure ChangeFontSizeDansRapport(whichSize : SInt16);     external;
procedure ChangeFontDansRapport(whichFont : SInt16);     external;
function MeilleureSuiteInfosEnChaine(nbEspacesEntreCoups : SInt16; avecScore,avecNumeroPremierCoup,enMajuscules,remplacerScoreIncompletParEtc : boolean; whichScore : SInt16) : String255;     external;
procedure AjouteMeilleureSuiteDansArbreDeJeuCourant(genreReflexion : SInt32; meilleureSuite : String255; scoreDeLaLignePourNoir : SInt32);     external;
	function TPCopy (source : String255; start, count: SInt32) : String255;     external;
  procedure EnleveEspacesDeGaucheSurPlace(var s : String255);     external;
procedure DisableKeyboardScriptSwitch;     external;
function NbLignesVisiblesDansRapport : SInt16;     external;
procedure FrappeClavierDansRapport(whichChar : char);     external;
function FenetreRapportEstOuverte : boolean;     external;
	procedure InvalidateWindow(whichWindow : WindowPtr);     external;
function GetRapportWindow : WindowPtr;     external;
function FindStringInRapport(s : String255; from,direction : SInt32; var positionTrouvee : SInt32) : boolean;     external;
procedure SelectionnerTexteDansRapport(posDebut,posFin : SInt32);     external;
procedure DetruireSelectionDansRapport;     external;
procedure UpdateScrollersRapport;     external;
procedure EffaceDernierCaractereDuRapportSync(scrollerSynchronisation : boolean);     external;
procedure PositionnePointDinsertion(index : SInt32);     external;
function CoupEnString(coup : SInt16; enMajuscules : boolean) : String255;     external;
procedure InsereStringlnDansRapport(s : String255);     external;
function GetPositionPointDinsertion : SInt32;     external;
procedure ViewRectAGaucheRapport;     external;
function MakeTripleProperty(whichType : SInt16; whichTriple : Triple) : Property;     external;
function MakeTriple(n : SInt32) : Triple;     external;
function MakeOthelloSquareProperty(whichType : SInt16; whichSquare : SInt16) : Property;     external;
function GetNiemeCoupPartieCourante(numeroDuCoup : SInt32) : SInt32;     external;
function SelectFirstSubtreeWithThisProperty(prop : Property; G : GameTree) : GameTree;     external;
procedure AddPropertyToGameTreeSansDuplication(prop : Property; var G : GameTree);     external;
procedure DisposePropertyStuff(var p : Property);     external;
function NoteEnString(note : SInt32; avecSignePlus : boolean; nbEspacesDevant,nbDecimales : SInt16) : String255;     external;
procedure ChangeFontColorDansRapport(whichColor : SInt16);     external;
procedure InsereStringDansRapport(s : String255);     external;
  function DeleteSubstringBeforeThisChar(delim : char; const s : String255; keepDelimitor : boolean) : String255;     external;
  function DeleteSubstringAfterThisChar(delim : char; const s : String255; keepDelimitor : boolean) : String255;     external;
function MeilleureSuiteEtNoteEnChaine(coul,note,profondeur : SInt16) : String255;     external;
function AllocateMemoryHdl(whichSize : SInt32) : handle;     external;
procedure EngineNewPosition;     external;
procedure EngineViderFeedHashHistory;     external;
procedure OuvreFntrRapport(avecAnimationZoom,forceSelectWindow : boolean);     external;
function FenetreRapportEstAuPremierPlan : boolean;     external;
procedure SelectWindowSousPalette(whichWindow : WindowPtr);     external;
procedure DoCourbe;     external;
function GetPlaceDisponibleDansRapport : SInt32;     external;
procedure FaireDeLaPlaceAuDebutDuRapport(placeVoulue : SInt32);     external;
procedure DoChangeAfficheProchainsCoups;     external;
procedure DoChangeAfficheSignesDiacritiques;     external;
procedure VideToutesLesHashTablesExactes;     external;
procedure PartagerLeTempsMachineAvecLesAutresProcess(WNESleep : SInt32);     external;
procedure DetermineMomentFinDePartie;     external;
procedure FixeMarqueSurMenuMode(n : SInt16);     external;
procedure EnableKeyboardScriptSwitch;     external;
procedure DessineSliderFenetreCourbe;     external;
procedure EffaceProprietesOfCurrentNode;     external;
procedure AfficheProprietesOfCurrentNode(dessinerAideDebutantSiNecessaire : boolean; surQuellesCases : SquareSet; const fonctionAppelante : String255);     external;
procedure DessineAutresInfosSurCasesAideDebutant(surQuellesCases : SquareSet; fonctionAppelante : String255);     external;
procedure LanceCalculsRapidesPourBaseOuNouvelleDemande(infosDejaCalculees,withCheckEvent : boolean);     external;
procedure EcritTypeInterruptionDansRapport(uneinterruption : SInt16);     external;
procedure DoAvanceAuCoupNro(numeroCoup : SInt16; NeDessinerQueLesNouveauxPions : boolean);     external;
procedure DoChangeHumCtreHum;     external;
function PeutReculerUnCoup : boolean;     external;
function PeutCopierEndgameScoreFromGameTreeDansCourbe(G : GameTree; nroDuCoup : SInt32; origineCherchees : SetOfGenreDeReflexion) : boolean;     external;
procedure RefletePositionCouranteDansPictureIconisation;     external;
procedure AjoutePropertyValeurDeCoupDansCurrentNode(quelGenreDeReflexion,scorePourNoir : SInt32);     external;
	procedure MDisposeHandle ( var data : UnivHandle );     external;
procedure DoSystemTask(couleur : SInt32);     external;
function AlertTwoButtonsFromRessource(dialogID, texteItemID, explicationItemID, buttonOneID, buttonTwoID : SInt16) : SInt16;     external;
procedure SetHashValueDuZoo(var hash : UInt64; value : SInt32);     external;
function GetCouleurAffichageValeurCourbe(trait : SInt32; whichNote : SInt32) : RGBColor;     external;
procedure ChangeFontColorRGBDansRapport(whichColor : RGBColor);     external;
