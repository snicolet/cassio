	function Min (a, b: SInt32) : SInt32;     external;
	function Max (a, b: SInt32) : SInt32;     external;
procedure WritelnDansRapport(s : String255);     external;
procedure WriteDansRapport(s : String255);     external;
procedure WritelnNumDansRapport(s : String255; num : SInt32);     external;
procedure WriteNumDansRapport(s : String255; num : SInt32);     external;
procedure WritelnStringAndBoolDansRapport(s : String255; b : boolean);     external;
procedure WriteStringAndBoolDansRapport(s : String255; b : boolean);     external;
procedure WritelnStringAndBooleenDansRapport(s : String255; b : boolean);     external;
procedure WriteStringAndBooleenDansRapport(s : String255; b : boolean);     external;
procedure WritelnStringAndBooleanDansRapport(s : String255; b : boolean);     external;
procedure WriteStringAndBooleanDansRapport(s : String255; b : boolean);     external;
procedure WritelnDansRapportThreadSafe(s : String255);     external;
function FichierTexteExiste(nom : String255 ; vRefNum : SInt16; var fic : FichierTEXT) : OSErr;     external;
function PathDuDossierDatabase : String255;     external;
function CreeFichierTexte(nom : String255 ; vRefNum : SInt16; var fic : FichierTEXT) : OSErr;     external;
procedure SetFileCreatorFichierTexte(var fic : FichierTEXT; quelType : OSType);     external;
procedure SetFileTypeFichierTexte(var fic : FichierTEXT; quelType : OSType);     external;
function OuvreFichierTexte(var fic : FichierTEXT) : OSErr;     external;
function FermeFichierTexte(var fic : FichierTEXT) : OSErr;     external;
function  GetDebuggageUnitFichiersTexte : boolean;     external;
function GetEcritToutDansRapportLog : boolean;     external;
procedure SetDebuggageUnitFichiersTexte(flag : boolean);     external;
procedure SetEcritToutDansRapportLog(flag : boolean);     external;
function SetPositionTeteLectureFinFichierTexte(var fic : FichierTEXT) : OSErr;     external;
function WritelnDansFichierTexte(var fic : FichierTEXT; s : String255) : OSErr;     external;
  procedure ChaineToLongint(const s : String255; var theLongint : SInt32);     external;
	function RightOfString (const s : String255; len : SInt16) : String255;     external;
function GetNiemeCaractereDuRapport(n : SInt32) : char;     external;
function GetTailleRapport : SInt32;     external;
function EstUnFichierNouveauFormat(fic : FSSpec; var typeDonnees : SInt16; var entete : t_EnTeteNouveauFormat) : boolean;     external;
procedure AlerteSimple(texte : String255);     external;
  procedure EnleveEspacesDeGaucheSurPlace(var s : String255);     external;
function CassioIsUsingMetaphone : boolean;     external;
procedure SetCassioIsUsingMetaphone(flag : boolean);     external;
function TrouveNumeroDuJoueur(const nomJoueur : String255; var numeroJoueur, confiance : SInt32; genreRecherche : SInt32) : boolean;     external;
function GetNroJoueurDansSonFichier(nroJoueur : SInt32) : SInt32;     external;
procedure MyFabriqueNomJoueurPourBaseWThorOfficielle(var nom : String255; var result : t_JoueurRecNouveauFormat);     external;
function GetNomJoueur(nroJoueur : SInt32) : String255;     external;
  function NumEnString(num : SInt32) : String255;     external;
function EcritJoueurNouveauFormat(refnum : SInt16; nroJoueur : SInt32; thePlayer : t_JoueurRecNouveauFormat) : OSErr;     external;
function EcritEnteteNouveauFormat(refnum : SInt16; entete : t_EnTeteNouveauFormat) : OSErr;     external;
procedure AjouterJoueurEnMemoire(joueur : String255; numeroEnMemoire,numeroDansSonFichier : SInt32);     external;
function JoueurRecNouveauFormatToString(whichPlayer : t_JoueurRecNouveauFormat) : String255;     external;
function NombreJoueursDansBaseOfficielle : SInt32;     external;
procedure SetNombreJoueursDansBaseOfficielle(combien : SInt32);     external;
  function EnleveEspacesDeGauche(const s : String255) : String255;     external;
function TrouveNumeroDuTournoi(const nomTournoi : String255; var numeroTournoi : SInt32; fromIndex : SInt32) : boolean;     external;
function GetNroTournoiDansSonFichier(nroTournoi : SInt32) : SInt32;     external;
procedure MyFabriqueNomTournoiPourBaseWThorOfficielle(var nom : String255; var result : t_TournoiRecNouveauFormat);     external;
function GetNomTournoi(nroTournoi : SInt32) : String255;     external;
function EcritTournoiNouveauFormat(refnum : SInt16; nroTournoi : SInt32; theTourney : t_TournoiRecNouveauFormat) : OSErr;     external;
procedure AjouterTournoiEnMemoire(tournoi : String255; numeroEnMemoire,numeroDansSonFichier : SInt32);     external;
function TournoiRecNouveauFormatToString(whichTourney : t_TournoiRecNouveauFormat) : String255;     external;
function NombreTournoisDansBaseOfficielle : SInt32;     external;
procedure SetNombreTournoisDansBaseOfficielle(combien : SInt32);     external;
procedure SetNroJoueurNoirParNroRefPartie(nroReference : SInt32; nroJoueur : SInt32);     external;
function GetJoueurEstUnOrdinateur(nroJoueur : SInt32) : boolean;     external;
function GetNroJoueurNoirParNroRefPartie(nroReference : SInt32) : SInt32;     external;
function GetNroJoueurBlancParNroRefPartie(nroReference : SInt32) : SInt32;     external;
procedure SetPartieEstSansOrdinateur(nroReferencePartie : SInt32; flag : boolean);     external;
procedure SetNroJoueurBlancParNroRefPartie(nroReference : SInt32; nroJoueur : SInt32);     external;
procedure SetNroTournoiParNroRefPartie(nroReference : SInt32; nroTournoi : SInt32);     external;
procedure SetAnneePartieParNroRefPartie(nroReference : SInt32; annee : SInt16);     external;
function NumberOfGamesWithThisReferenceFilter(FiltreNumRef : FiltreNumRefProc; var result : SInt32) : SInt32;     external;
procedure ForEachGameInListDo(FiltreNumRef : FiltreNumRefProc; FiltreGame : FiltreGameProc; DoWhat : GameInListProc; var result : SInt32);     external;
function bidFiltreGameProc(var partie60 : PackedThorGame; numeroRefPartie : SInt32; var result : SInt32) : boolean;     external;
	function ParamStr(s, p0, p1, p2, p3 : String255) : String255;     external;
procedure CalculsEtAffichagePourBase(infosDejaCalculees : boolean; withCheckEvent : boolean);     external;
function PositionEtTraitAfterMoveNumber(var game : PackedThorGame; numeroCoup : SInt32; var typeErreur : SInt32) : PositionEtTraitRec;     external;
function GetScoreTheoriqueParNroRefPartie(nroReference : SInt32) : SInt16;     external;
function MemberOfPositionEtTraitSet(var position : PositionEtTraitRec; var data : SInt32; S : PositionEtTraitSet) : boolean;     external;
procedure AddPositionEtTraitToSet(var position : PositionEtTraitRec; data : SInt32; var S : PositionEtTraitSet);     external;
function ConstruireChaineReferencesPartieParNroRefPartie(nroReference : SInt32; avecScores : boolean; numeroProchainCoup : SInt32) : String255;     external;
procedure WritelnPositionEtTraitDansRapport(const position : plateauOthello; trait : SInt32);     external;
function GetTraitOfPosition(var position : PositionEtTraitRec) : SInt32;     external;
function DoPlaquerPositionAndMakeEndgameSolve(var positionEtTrait : PositionEtTraitRec; endgameSolveFlags : SInt32; var solveResults : MakeEndgameSearchResultRec) : SInt32;     external;
procedure WriteStringAndReelDansRapport(s : String255; x : double; nbDecimales : SInt16);     external;
procedure SetScoreTheoriqueParNroRefPartie(nroReference : SInt32; scoreTheorique : SInt16);     external;
  function SecondesEnJoursHeuresSecondes(secondes : SInt32) : String255;     external;
	function MyTrunc(x : double) : SInt32;     external;
procedure EcritTypeInterruptionDansRapport(uneinterruption : SInt16);     external;
function MakeEmptyPositionEtTraitSet : PositionEtTraitSet;     external;
procedure DisposePositionEtTraitSet(var S : PositionEtTraitSet);     external;
procedure DoChangeHumCtreHum;     external;
function MetJoueursEtTournoisEnMemoire(nomsAbreges : boolean) : OSErr;     external;
  function  GetParsingProtectionWithQuotes : boolean;     external;
  procedure SetParsingProtectionWithQuotes(flag : boolean);     external;
  procedure Parser6(s : String255; var s1,s2,s3,s4,s5,s6,reste : String255);     external;
function FiltrePartieEstActiveEtSelectionnee(numeroDansLaListe,numeroReference : SInt32; var result : SInt32) : boolean;     external;
  function ChaineEnLongint(const s : String255) : SInt32;     external;
function NombreDeLignesDansSelectionRapport : SInt32;     external;
function FenetreRapportEstOuverte : boolean;     external;
function FenetreRapportEstAuPremierPlan : boolean;     external;
function SelectionRapportNonVide : boolean;     external;
function LongueurSelectionRapport : SInt32;     external;
function SelectionRapportEnString(var count : SInt32) : String255;     external;
procedure ForEachLineSelectedInRapportDo(doWhat : StringProc; var result : SInt32);     external;
procedure LanceInterruption(typeInterruption : SInt16; const fonctionAppelante : String255);     external;
procedure WritelnInterruptionDansRapport(uneInterruption : SInt16);     external;
function CassioEstEnTrainDeReflechir : boolean;     external;
function CassioEstEnTrainDeCalculerPourLeZoo : boolean;     external;
procedure ChangeFontFaceDansRapport(whichStyle : StyleParameter);     external;
procedure TextNormalDansRapport;     external;
function NbPartiesDansLaSelectionDeLaListe : SInt32;     external;
function NbPionsDeCetteCouleurDansPosition(couleur : SInt32; var position : plateauOthello) : SInt32;     external;
function NbCasesVidesDansPosition(var position : plateauOthello) : SInt32;     external;
  function ReelEnStringAvecDecimales(unreel : double; nbChiffresSignificatifs : SInt16) : String255;     external;
  function ReplaceStringByStringInString(const pattern,replacement,s : String255) : String255;     external;
  procedure MettreDateDuJourDansEnteteFichierNouveauFormat(var entete : t_EnTeteNouveauFormat);     external;


