	procedure AttendFrappeClavier;     external;
procedure WritelnDansRapport(s : String255);     external;
procedure WriteDansRapport(s : String255);     external;
procedure WritelnNumDansRapport(s : String255; num : SInt32);     external;
procedure WriteNumDansRapport(s : String255; num : SInt32);     external;
procedure WritelnStringAndBoolDansRapport(s : String255; b : boolean);     external;
procedure WriteStringAndBoolDansRapport(s : String255; b : boolean);     external;
procedure WritelnStringAndBooleenDansRapport(s : String255; b : boolean);     external;
procedure WriteStringAndBooleenDansRapport(s : String255; b : boolean);     external;
procedure WritelnStringAndBooleanDansRapport(s : String255; b : boolean);     external;
procedure WriteStringAndBooleanDansRapport(s : String255; b : boolean);     external;
procedure WritelnDansRapportThreadSafe(s : String255);     external;
  function MyStr255ToString( const s : Str255 ) : String255;     external;
  procedure StrToInt32(const s : String255; var theLongint : SInt32);     external;
procedure SetPortByDialog(dialog : DialogPtr);     external;
function QDGetPortBound : rect;     external;
	function StringWidthPourGNUPascal(const s : String255): SInt16;     external;
  procedure MyEraseRect(const (*var*) r : Rect);     external;
  procedure MyEraseRectWithColor(const (*var*) r : Rect; couleurCmd : SInt32; whichPattern : pattern; fonctionAppelante : String255);     external;
  function GarderSeulementLesChiffres(var s : String255) : String255;     external;
	function ProfondeurMainDevice : SInt16;     external;
function GetWindowPortRect(window : WindowPtr) : rect;     external;
function GetScreenBounds : rect;     external;
	function GetNameOfSFReply(const reply : SFReply) : String255;     external;
  procedure MySFPutFile(where : Point; prompt : ConstStringPtr; origName : String255; dlgHook : DlgHookUPP; VAR reply : SFReply);     external;
	function FileInfo(vrn : SInt16; dirID : SInt32; name : String255) : fileInfo;     external;
function SaveFileDialog(fileName,prompt : stringPtr; filetype,fileCreator : OSType; var fileSpec : fileInfo; var stationery : boolean; var replacing : boolean; var reply : NavReplyRecord) : OSStatus;     external;
	function FSSpecToFullPath (fs : fileInfo; var path : String255) : OSErr;     external;
  procedure SetNameOfSFReply(var reply : SFReply; const name : String255);     external;
	
function MyNavServicesAvailable : boolean;     external;
procedure MyNavEventProc(callBackSelector : NavEventCallbackMessage; callBackParms : NavCBRecPtr ; callBackUD: UnivPtr);     external;
	function MyFSMakeFSSpec (vrn : SInt16; dirID : SInt32; name : String255; var fs : fileInfo) : OSErr;     external;
  procedure MySFGetFile(where : Point; prompt : String255; fileFilter : FileFilterUPP; numTypes : SInt16; typeList : ConstSFTypeListPtr; dlgHook : DlgHookUPP; var reply : SFReply);     external;
function OpenOneFileDialog(prompt : String255; applicationSignature : OSType; numTypes : SInt16; typeList : ConstSFTypeListPtr; var fileSpec : fileInfo) : OSStatus;     external;
procedure EndLiveUndo;     external;
	procedure DrawStringPourGNUPascal(const s : String255);     external;
  procedure ShareTimeWithOtherProcesses(quantity : SInt32);     external;
	function MakeCFSTR(s : String255) : CFStringRef;     external;
  function MyGetPicture(picID: SInt16) : PicHandle;     external;
  function GetPicFrameOfPicture(thePict : PicHandle) : Rect;     external;
procedure TransfererLePressePapierGlobalDansTextEdit;     external;
	function MakeRect(left, top, right, bottom : SInt32) : Rect;     external;
function EclaircirCouleurDeCetteQuantite(theColor : RGBColor; quantite : SInt32) : RGBColor;     external;
function FenetreFictiveAvantPlan : WindowPtr;     external;
function PaletteEstSurCeDialogue(dp : DialogPtr) : boolean;     external;
  procedure EnableQuartzAntiAliasingThisPort(port : CGrafPtr; useQuartzMetrics : boolean);     external;
procedure EssaieSetPortWindowPlateau;     external;
  procedure EnableQuartzAntiAliasing(useQuartzMetrics : boolean);     external;
procedure HideTooltipWindowInCloud;     external;
function FrontWindowSaufPalette : WindowPtr;     external;
procedure DoActivateWindow(whichWindow : WindowPtr; activation : boolean);     external;
procedure AjusteCurseur;     external;
procedure ShowTooltipWindowInCloud;     external;
  procedure DisableQuartzAntiAliasing;     external;
