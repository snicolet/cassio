	function Min (a, b: SInt32) : SInt32;     external;
	function Max (a, b: SInt32) : SInt32;     external;
procedure WritelnDansRapport(s : String255);     external;
procedure WriteDansRapport(s : String255);     external;
procedure WritelnNumDansRapport(s : String255; num : SInt32);     external;
procedure WriteNumDansRapport(s : String255; num : SInt32);     external;
procedure WritelnStringAndBoolDansRapport(s : String255; b : boolean);     external;
procedure WriteStringAndBoolDansRapport(s : String255; b : boolean);     external;
procedure WritelnStringAndBooleenDansRapport(s : String255; b : boolean);     external;
procedure WriteStringAndBooleenDansRapport(s : String255; b : boolean);     external;
procedure WritelnStringAndBooleanDansRapport(s : String255; b : boolean);     external;
procedure WriteStringAndBooleanDansRapport(s : String255; b : boolean);     external;
procedure WritelnDansRapportThreadSafe(s : String255);     external;
	function MakeRect(left, top, right, bottom : SInt32) : Rect;     external;
procedure InvalidateAllCasesDessinEnTraceDeRayon;     external;
function CassioEstEn3D : boolean;     external;
function EnJolie3D : boolean;     external;
procedure EraseRectPovRay3D(myRect : rect);     external;
procedure SetPortByWindow(window : WindowPtr);     external;
function BordureOthellierEstUneTexture : boolean;     external;
  procedure MyEraseRect(const (*var*) r : Rect);     external;
  procedure MyEraseRectWithColor(const (*var*) r : Rect; couleurCmd : SInt32; whichPattern : pattern; fonctionAppelante : String255);     external;
function DrawBordureRectDansFenetre(whichRect : rect; whichWindow : WindowPtr) : OSErr;     external;
function EnModeEntreeTranscript : boolean;     external;
	procedure DrawStringPourGNUPascal(const s : String255);     external;
  procedure DisableQuartzAntiAliasingThisPort(port : CGrafPtr);     external;
  procedure EnableQuartzAntiAliasingThisPort(port : CGrafPtr; useQuartzMetrics : boolean);     external;
function FichierBordureEstIntrouvable : boolean;     external;
procedure SetRGBColor (var theColor: RGBColor; redValue, greenValue, blueValue: SInt32);     external;
function CouleurCmdToRGBColor(couleurCmd : SInt16) : RGBColor;     external;
function GetWindowPortRect(window : WindowPtr) : rect;     external;
function NomTexture3D : String255;     external;
procedure DessineOmbreRoundRect(theRect : rect; ovalWidth,ovalHeight : SInt16; targetColor : RGBColor; tailleOmbre,forceDuGradient,ombrageMinimum,typeOmbrage : SInt32);     external;
procedure EssaieSetPortWindowPlateau;     external;
	procedure GlobalToLocalRect(var myrect : rect);     external;
procedure SetPositionScore3D;     external;
	procedure LocalToGlobalRect(var myrect : rect);     external;
procedure SetPositionDemandeCoup3D;     external;
procedure SetPositionMeilleureSuite3D;     external;
procedure SetMeilleureSuiteRect(theRect : rect);     external;
procedure CalculateMeilleureSuiteWidth;     external;
procedure CalculateMeilleureSuiteRectGlobal;     external;
function GetWindowStructRect(theWindow : WindowRef) : rect;     external;
procedure CalculateRectEscargotGlobal;     external;
procedure EcritMeilleureSuite;     external;
procedure DessineBoiteDeTaille(whichWindow : WindowPtr);     external;
procedure Heure(couleur : SInt16);     external;
	function GetWindowSize(window : WindowPtr) : Point;     external;
function GetTailleImagesPovRay : Point;     external;
	function ReadStringFromRessource(stringListID, index : SInt16) : String255;     external;
  function PourcentageEntierEnString(num : SInt32) : String255;     external;
function NoircirCouleur(theColor : RGBColor) : RGBColor;     external;
function DrawBordureColorPict(quellesBordures : SInt32) : OSErr;     external;
function CassioEstEnModeAnalyse : boolean;     external;
function AQuiDeJouer : SInt32;     external;
function DoitPasser(coul : SInt32; const plat : plateauOthello; var jouable : plBool) : boolean;     external;
function JeuCourant : plateauOthello;     external;
function CassioEstEnModeSolitaire : boolean;     external;
function GetBoundingRect3D(whichSquare : SInt16) : rect;     external;
function GetOthellier3DVistaBuffer : rect;     external;
	function MyTrunc(x : double_t) : SInt32;     external;
function EclaircirCouleur(theColor : RGBColor) : RGBColor;     external;
  function NumEnString(num : SInt32) : String255;     external;
function GetCouleurOfSquareDansJeuCourant(whichSquare : SInt32) : SInt32;     external;
function GetCurrentNode : GameTree;     external;
procedure AfficheProprietesOfCurrentNode(dessinerAideDebutantSiNecessaire : boolean; surQuellesCases : SquareSet; const fonctionAppelante : String255);     external;
function GetValeurDessinEnTraceDeRayon(square : SInt16) : SInt16;     external;
procedure DrawBufferedColorPict(thePictID : SInt16; inrect : rect; var whichTexture : CouleurOthellierRec);     external;
function NroPremierePictDeLaSerie(CouleurDemandeeParUtilisateur : SInt16) : SInt16;     external;
procedure SetValeurDessinEnTraceDeRayon(square,valeur : SInt16);     external;
function SquareInSquareSet(whichSquare : SInt16; whichSet : SquareSet) : boolean;     external;
procedure InvalidateDessinEnTraceDeRayon(square : SInt16);     external;
function QDGetPortBound : rect;     external;
function GetRect3DDessus(whichSquare : SInt16) : rect;     external;
	function StringWidthPourGNUPascal(const s : String255): SInt16;     external;
	function IsDigit(ch : char) : boolean;     external;
function CoupEnStringEnMajuscules(coup : SInt16) : String255;     external;
function GetRectAreteVisiblePion3DPourPionDelta(x,QuelGenreDeMarque : SInt16) : rect;     external;
function AttenteAnalyseDeFinaleDansPositionCourante : boolean;     external;
function GetBestMoveAttenteAnalyseDeFinale : SInt32;     external;
function SuggestionAnalyseDeFinaleEstDessinee : boolean;     external;
function GetRectPionDessous3DPourPionDelta(x,QuelGenreDeMarque : SInt16) : rect;     external;
function EnVieille3D : boolean;     external;
procedure DessinePion3D(x,coul : SInt16);     external;
function CoupEnString(coup : SInt16; enMajuscules : boolean) : String255;     external;
procedure WritelnStringAndCoupDansRapport(s : String255; square : SInt16);     external;
function GetAffichageProprietesOfCurrentNode : UInt32;     external;
procedure SetAffichageProprietesOfCurrentNode(flags : UInt32);     external;
function ZebraBookACetteOption(mask : SInt32) : boolean;     external;
function GetNoteSurCase(origine : SInt32; whichSquare : SInt16) : SInt32;     external;
function EstUneNoteCalculeeEnMilieuDePartieDansLeBookDeZebra(whichNote : SInt32) : boolean;     external;
procedure DessineCouleurDeZebraBookDansRect(whichRect : rect; trait,valeur : SInt32; encadrement : boolean);     external;
procedure WriteStringAndCoupDansRapport(s : String255; square : SInt16);     external;
procedure DetermineOthellierPatSelonCouleur(CouleurDemandeeParUtilisateur : SInt16; var othellierPat : pattern);     external;
procedure DessinePlateau3D(avecDessinFondNoir : boolean);     external;
procedure GetPositionCorrecteNumeroDuCoup3D(square : SInt16; var result : Point);     external;
function GetNiemeCoupPartieCourante(numeroDuCoup : SInt32) : SInt32;     external;
function GetCouleurNiemeCoupPartieCourante(numeroDuCoup : SInt32) : SInt32;     external;
function MyGetRegionRect(theRegion : RgnHandle) : rect;     external;
function GetWindowVisibleRegion(theWindow : WindowRef; visible : RgnHandle) : RgnHandle;     external;
function DerniereCaseJouee : SInt32;     external;
procedure GetPositionInitialeOfGameTree(var position : plateauOthello; var numeroPremierCoup,trait,nbBlancs,nbNoirs : SInt32);     external;
  function InRange(n, minimum, maximum : SInt32) : boolean;     external;
function GetSignesDiacritiques(G : GameTree) : String255;     external;
procedure ParserCommentaireSolitaire(commentaire : String255; var promptGras,resteDuCommentaire : String255);     external;
procedure AjusteCurseur;     external;
function Calculs3DMocheSontFaits : boolean;     external;
procedure EcranStandardSetUp;     external;
procedure Dessine3D(const position : plateauOthello; avecBruitage : boolean);     external;
procedure EcranStandardTranscript;     external;
procedure ValidRect(r : rect);     external;
procedure FlushWindow(theWindow : WindowRef);     external;
function GetAvecAffichageNotesSurCases(origine : SInt32) : boolean;     external;
procedure DessineNoteSurCases(origine : SInt32; surQuellesCases : SquareSet);     external;
procedure EcritLesInfosDApprentissage;     external;
function DoitAfficherBibliotheque : boolean;     external;
procedure EcritCoupsBibliotheque(surQuellesCases : SquareSet);     external;
procedure MemoryFillChar(bufferPtr : universal UnivPtr; byteCount: SInt32; caractere : char);     external;
function SquareSetEnString(ensemble : SquareSet) : String255;     external;
function NbCasesVidesDansPosition(var position : plateauOthello) : SInt32;     external;
procedure WritelnPositionEtTraitDansRapport(const position : plateauOthello; trait : SInt32);     external;
function GetTraitOfPosition(var position : PositionEtTraitRec) : SInt32;     external;
procedure DoChangeAfficheSuggestionDeCassio;     external;
procedure ActiverAttenteAnalyseDeFinale(whichPos : PositionEtTraitRec; bestMove,bestDef : SInt32; dessinee : boolean);     external;
function  PtInPlateau3D(loc : Point; var caseCliquee : SInt16) : boolean;     external;
procedure DetruitMeilleureSuite;     external;
procedure NoUpdateWindowPlateau;     external;
function GetRect3DDessous(whichSquare : SInt16) : rect;     external;
function NoircirCouleurDeCetteQuantite(theColor : RGBColor; quantite : SInt32) : RGBColor;     external;
 procedure PrintForEPSFile(s : String255);     external;
  function SameRect(rect1,rect2 : rect) : boolean;     external;
procedure Wait(secondes : double_t);     external;
