	function Min (a, b: SInt32) : SInt32;     external;
	function Max (a, b: SInt32) : SInt32;     external;
	procedure AttendFrappeClavier;     external;
procedure WritelnDansRapport(s : String255);     external;
procedure WriteDansRapport(s : String255);     external;
procedure WritelnNumDansRapport(s : String255; num : SInt32);     external;
procedure WriteNumDansRapport(s : String255; num : SInt32);     external;
procedure WritelnStringAndBoolDansRapport(s : String255; b : boolean);     external;
procedure WriteStringAndBoolDansRapport(s : String255; b : boolean);     external;
procedure WritelnStringAndBooleenDansRapport(s : String255; b : boolean);     external;
procedure WriteStringAndBooleenDansRapport(s : String255; b : boolean);     external;
procedure WritelnStringAndBooleanDansRapport(s : String255; b : boolean);     external;
procedure WriteStringAndBooleanDansRapport(s : String255; b : boolean);     external;
procedure WritelnDansRapportThreadSafe(s : String255);     external;
  function  GetParserProtectionWithQuotes : boolean;     external;
  procedure SetParserProtectionWithQuotes(flag : boolean);     external;
  procedure Parse2(s : String255; var s1,s2,reste : String255);     external;
  function DeleteSubstringBeforeThisChar(delim : char; const s : String255; keepDelimitor : boolean) : String255;     external;
  function DeleteSubstringAfterThisChar(delim : char; const s : String255; keepDelimitor : boolean) : String255;     external;
function PeutImporterNomJoueurFormatPGN(nomDictionnaireDesPseudos,pseudo : String255; strict : boolean; var nomDansThor : String255; var numeroDansThor : SInt32) : boolean;     external;
procedure AjoutePseudoInconnu(const message_erreur,pseudo,nom : String255);     external;
	function ReadStringFromRessource(stringListID, index : SInt16) : String255;     external;
function PeutImporterNomTournoiFormatPGN(nomDictionnaireDesPseudos,pseudo : String255; var nomDansThor : String255; var numeroDansThor : SInt32) : boolean;     external;
  function  GetParserDelimiters : SetOfChar;     external;
  procedure SetParserDelimiters(parsingCaracters : SetOfChar);     external;
  procedure Parse3(s : String255; var s1,s2,s3,reste : String255);     external;
  function StrToInt32(const s : String255) : SInt32;     external;
function GetNomJoueur(nroJoueur : SInt32) : String255;     external;
function TrouverNomsDesJoueursDansNomDeFichier(s : String255; var numeroJoueur1,numeroJoueur2 : SInt32; longueurMinimaleUnPseudo : SInt32; var qualiteSolution : double) : boolean;     external;
function MemberOfStringSet(const theString : String255; var data : SInt64; S : StringSet) : boolean;     external;
procedure AddStringToSet(const theString : String255; data : SInt32; var S : StringSet);     external;
procedure ChangeFontColorDansRapport(whichColor : SInt16);     external;
function UTF8ToAscii(const s : String255) : String255;     external;
procedure TextNormalDansRapport;     external;
  procedure EnleveEspacesDeGaucheSurPlace(var s : String255);     external;
  procedure EnleveEspacesDeDroiteSurPlace(var s : String255);     external;
	function TPCopy (source : String255; start, count: SInt32) : String255;     external;
function EstUnePartieOthello(var s : String255; compacterPartie : boolean) : boolean;     external;
procedure ChangeFontFaceDansRapport(whichStyle : StyleParameter);     external;
function FenetreRapportEstOuverte : boolean;     external;
procedure OuvreFntrRapport(avecAnimationZoom,forceSelectWindow : boolean);     external;
function FenetreRapportEstAuPremierPlan : boolean;     external;
procedure SelectWindowSousPalette(whichWindow : WindowPtr);     external;
function GetRapportWindow : WindowPtr;     external;
function GetAutoVidageDuRapport : boolean;     external;
function GetEcritToutDansRapportLog : boolean;     external;
procedure SetEcritToutDansRapportLog(flag : boolean);     external;
procedure SetAutoVidageDuRapport(flag : boolean);     external;
  procedure SafeSetCursor(myCursor : CursHandle);     external;
	function ExtraitNomDirectoryOuFichier(chemin : String255) : String255;     external;
	function GetNameOfFSSpec(fs : fileInfo) : String255;     external;
function FSSpecToLongName(whichFile : fileInfo; var theLongName : String255) : OSErr;     external;
procedure AnnonceOuvertureFichierEnRougeDansRapport(nomFichier : String255);     external;
procedure DoLectureJoueursEtTournoi(nomsCourts : boolean);     external;
function TrouveNumeroDuTournoi(const nomTournoi : String255; var numeroTournoi : SInt32; fromIndex : SInt32) : boolean;     external;
function OpenFile(var fic : basicfile) : OSErr;     external;
procedure AlerteSimpleFichierTexte(nomFichier : String255; erreurES : SInt32);     external;
function MakeEmptyStringSet : StringSet;     external;
procedure DisposeStringSet(var S : StringSet);     external;
function EndOfFile(var fic : basicfile; var erreurES : OSErr) : boolean;     external;
function Readln(var fic : basicfile; var s : String255) : OSErr;     external;
procedure CompacterPartieAlphanumerique(var s : String255; modification : SInt16);     external;
function EstUnePartieOthelloTerminee(var s : String255; compacterPartie : boolean; var nbPionsFinalNoirs,nbPionsFinalBlancs : SInt32) : boolean;     external;
	function EscapeDansQueue : boolean;     external;
  function InRange(n, minimum, maximum : SInt32) : boolean;     external;
function EstUnePartieOthelloAvecMiroir(var s : String255) : boolean;     external;
	function LeftStr (const s : String255; len : SInt32) : String255;     external;
function PeutCompleterPartieAvecLigneOptimale(var partieEnAlpha : String255) : boolean;     external;
procedure SetAutorisationCalculsLongsSurListe(flag : boolean);     external;
procedure DoChangeSousSelectionActive;     external;
function AjouterPartieAlphaDansLaListe(partieEnAlpha : String255; theorique,numeroNoir,numeroBlanc,numeroTournoi,annee : SInt32; var partieRec : t_PartieRecNouveauFormat; var nroReferencePartieAjoutee : SInt32) : boolean;     external;
procedure SetPartieDansListeEstDouteuse(nroReferencePartie : SInt32; flag : boolean);     external;
procedure TrierListePartie(critereDeTri,algorithmeDeTri : SInt32);     external;
function AlgoDeTriOptimum(critereDeTri : SInt32) : SInt32;     external;
procedure CalculsEtAffichagePourBase(infosDejaCalculees : boolean; withCheckEvent : boolean);     external;
procedure PartagerLeTempsMachineAvecLesAutresProcess(WNESleep : SInt32);     external;
procedure DoSystemTask(couleur : SInt32);     external;
function AQuiDeJouer : SInt32;     external;
function CloseFile(var fic : basicfile) : OSErr;     external;
function EstUnNomDeFichierTemporaireDePressePapier(const nom : String255) : boolean;     external;
	function ParamStr(s, p0, p1, p2, p3 : String255) : String255;     external;
procedure RemettreLeCurseurNormalDeCassio;     external;
procedure ForceDoubleTriApresUnAjoutDeParties(whichGenreDeTri : SInt32);     external;
function ReadlnDansFichierAbstrait(var theFile : FichierAbstrait; var s : String255) : OSErr;     external;
function EOFFichierAbstrait(var theFile : FichierAbstrait; var erreurES : OSErr) : boolean;     external;
function ScannerStringPourTrouverCoup(debutScan : SInt16; const s : String255; var positionDuCoupDansChaine : SInt16) : SInt16;     external;
function ReadEnregistrementDansFichierAbstraitSGF_ou_GGF(var theFile : FichierAbstrait; whichFormat : formats_connus; var result : PartieFormatGGFRec) : OSErr;     external;
function ScoreFinalEnChaine(scorePourNoir : SInt16) : String255;     external;
function TrouverPartieEtJoueursDansChaine(chaine : String255; var partieEnAlpha : String255; var numeroJoueur1,numeroJoueur2 : SInt32; var qualiteSolution : double) : boolean;     external;
procedure FermerFichierEtFabriquerFichierAbstrait(var fic : basicfile; var theFile : FichierAbstrait);     external;
function TrouverNomDeTournoiDansPath(path : String255; var numeroTournoi,annee : SInt32; nomDictionnaireDesPseudos : String255) : boolean;     external;
procedure WritelnStringAndReelDansRapport(s : String255; x : double; nbDecimales : SInt16);     external;
procedure DisposeFichierAbstraitEtOuvrirFichier(var fic : basicfile; var theFile : FichierAbstrait);     external;
procedure SetDebugFiles(flag : boolean);     external;
function FichierTexteDeCassioExiste(nom : String255; var fic : basicfile) : OSErr;     external;
function CreeFichierTexteDeCassio(nom : String255; var fic : basicfile) : OSErr;     external;
function EmptyFile(var fic : basicfile) : OSErr;     external;
function Writeln(var fic : basicfile; s : String255) : OSErr;     external;
procedure Normalisation(var partie120 : String255; var autreCoupQuatreDiag : boolean; interversions : boolean);     external;
procedure TraductionAlphanumeriqueEnThor(const s : String255; var result : PackedThorGame);     external;
  procedure StrToInt32(const s : String255; var theLongint : SInt32);     external;
function EcritPartieNouveauFormat(refnum : SInt16; nroPartie : SInt32; theGame : t_PartieRecNouveauFormat) : OSErr;     external;
function EcritEnteteNouveauFormat(refnum : SInt16; entete : t_EnTeteNouveauFormat) : OSErr;     external;
procedure SetFileCreatorFichierTexte(var fic : basicfile; quelType : OSType);     external;
procedure SetFileTypeFichierTexte(var fic : basicfile; quelType : OSType);     external;
  function ReplaceStringOnce(const s, pattern, replacement : String255) : String255;     external;
procedure TraductionThorEnAlphanumerique(const s : PackedThorGame; var result : String255);     external;
procedure TraductionThorEnSuedois(const s : PackedThorGame; var result : String255);     external;
procedure COPY_PACKED_GAME_TO_STR60(const game : PackedThorGame; var result60 : String255);     external;
  function ReplaceVariable(const s, pattern, replacement : String255) : String255;     external;
  function StripDiacritics(const s : String255) : String255;     external;
function GetNomCourtTournoiParNroRefPartie(nroReference : SInt32) : String255;     external;
function EstUnePartieAvecTournoiJaponais(nroReferencePartie : SInt32) : boolean;     external;
function GetNomJaponaisDuTournoiParNroRefPartie(nroReference : SInt32) : String255;     external;
function GetNomTournoiParNroRefPartie(nroReference : SInt32) : String255;     external;
function GetNroTournoiParNroRefPartie(nroReference : SInt32) : SInt32;     external;
function GetNomJoueurNoirSansPrenomParNroRefPartie(nroReference : SInt32) : String255;     external;
function GetNomJoueurBlancSansPrenomParNroRefPartie(nroReference : SInt32) : String255;     external;
function EstUnePartieAvecJoueurNoirJaponais(nroReferencePartie : SInt32) : boolean;     external;
function GetNomJaponaisDuJoueurNoirParNroRefPartie(nroReference : SInt32) : String255;     external;
function GetNomJoueurNoirCommeDansPappParNroRefPartie(nroReference : SInt32) : String255;     external;
function EstUnePartieAvecJoueurBlancJaponais(nroReferencePartie : SInt32) : boolean;     external;
function GetNomJaponaisDuJoueurBlancParNroRefPartie(nroReference : SInt32) : String255;     external;
function GetNomJoueurBlancCommeDansPappParNroRefPartie(nroReference : SInt32) : String255;     external;
function GetNroJoueurNoirParNroRefPartie(nroReference : SInt32) : SInt32;     external;
function GetNroJoueurBlancParNroRefPartie(nroReference : SInt32) : SInt32;     external;
function GetScoreReelParNroRefPartie(nroReference : SInt32) : SInt16;     external;
function GetScoreTheoriqueParNroRefPartie(nroReference : SInt32) : SInt16;     external;
function GetGainTheoriqueParNroRefPartie(nroReference : SInt32) : String255;     external;
function GetNomDistributionParNroRefPartie(nroReference : SInt32) : String255;     external;
function GetAnneePartieParNroRefPartie(nroReference : SInt32) : SInt16;     external;
function GetNomJoueurNoirParNroRefPartie(nroReference : SInt32) : String255;     external;
function GetNomJoueurBlancParNroRefPartie(nroReference : SInt32) : String255;     external;
  procedure SetNameOfSFReply(var reply : SFReply; const name : String255);     external;
function MakeFileName(var reply : SFReply; prompt : String255; var whichSpec : fileInfo) : boolean;     external;
function FileExists(info : fileInfo; var fic : basicfile) : OSErr;     external;
function CreateFile(info : fileInfo; var fic : basicfile) : OSErr;     external;
	function GetNameOfSFReply(const reply : SFReply) : String255;     external;
procedure ForEachGameInListDo(FiltreNumRef : FiltreNumRefProc; FiltreGame : FiltreGameProc; DoWhat : GameInListProc; var result : SInt32);     external;
function FiltrePartieEstActiveEtSelectionnee(numeroDansLaListe,numeroReference : SInt32; var result : SInt32) : boolean;     external;
function bidFiltreGameProc(var partie60 : PackedThorGame; numeroRefPartie : SInt32; var result : SInt32) : boolean;     external;
 function NumEnStringAvecFormat(num,nbDeChiffres : SInt32; formatChar : char) : String255;     external;
function VersionDeCassioEnString : String255;     external;
function PartieEstActiveEtSelectionnee(nroReferencePartie : SInt32) : boolean;     external;
  procedure ShareTimeWithOtherProcesses(quantity : SInt32);     external;
function SetFilePosition(var fic : basicfile; position : SInt32) : OSErr;     external;
	function ExtraitCheminDAcces(nomComplet : String255) : String255;     external;
function FileExists(nom : String255 ; vRefNum : SInt16; var fic : basicfile) : OSErr;     external;
function CreateFile(nom : String255 ; vRefNum : SInt16; var fic : basicfile) : OSErr;     external;
function SetFilePositionAtEnd(var fic : basicfile) : OSErr;     external;
  function EnleveEspacesDeGauche(const s : String255) : String255;     external;
function Write(var fic : basicfile; s : String255) : OSErr;     external;
function PeutCalculerScoreFinalDeCettePartie(var game : PackedThorGame; var nbPionsFinalNoirs,nbPionsFinalBlancs : SInt32; var partieTerminee : boolean) : boolean;     external;
function PositionEtTraitInitiauxStandard : PositionEtTraitRec;     external;
function GetTraitOfPosition(var position : PositionEtTraitRec) : SInt32;     external;
function UpdatePositionEtTrait(var positionEtTrait : PositionEtTraitRec; whichMove : SInt32) : boolean;     external;
function CoupEnString(coup : SInt16; enMajuscules : boolean) : String255;     external;
procedure BeginDialog;     external;
  function GetFichierTexte(prompt : String255; fileKind1,fileKind2,fileKind3,fileKind4 : OSType; var fic : basicfile) : OSErr;     external;
procedure EndDialog;     external;
	function CreateSubDirectoryNearThisFile(const whichFile : fileInfo; var directoryName : String255) : OSErr;     external;
procedure SetCassioMustCheckDangerousEvents(newvalue : boolean; oldValue : BooleanPtr);     external;
procedure RejouePartieOthello(s : String255; coupMax : SInt16; positionDepartStandart : boolean; platImpose : plateauOthello; traitImpose : SInt16; var gameNodeLePlusProfondGenere : GameTree; peutDetruireArbreDeJeu : boolean; avecNomsOuvertureDansArbre : boolean);     external;
procedure AjoutePropertyValeurDeCoupDansCurrentNode(quelGenreDeReflexion,scorePourNoir : SInt32);     external;
function AjouterPartieRecDansListe(var partieRec : t_PartieRecNouveauFormat; anneePartie : SInt16; var nroReferencePartieAjoutee : SInt32) : boolean;     external;
procedure ForEachLineInFileDo(whichFile : fileInfo ; DoWhat : LineOfFileProc; var result : SInt32);     external;
function DoitExpliquerTrierListeSuivantUnClassement : boolean;     external;
procedure SetDoitExpliquerTrierListeSuivantUnClassement(flag : boolean);     external;
	function FSSpecToFullPath (fs : fileInfo; var path : String255) : OSErr;     external;
function TypeDeFichierEstConnu(const fic : basicfile; var infos : FormatFichierRec; var err : OSErr) : boolean;     external;
procedure WritelnStringDansRapport(s : String255);     external;
function AjouterPartiesFichierTHOR_PARDansListe(var fichierTHOR_PAR : basicfile) : OSErr;     external;
	function GetPathOfScannedDirectory : String255;     external;
function ChooseFolder(prompt : String255; var whichSpec : fileInfo) : boolean;     external;
function MetJoueursEtTournoisEnMemoire(nomsAbreges : boolean) : OSErr;     external;
	function SetPathOfScannedDirectory(var folder : fileInfo) : OSErr;     external;
	function ScanDirectory (fs : fileInfo; doit : ScanProc) : OSErr;     external;
function CassioIsUsingMetaphone : boolean;     external;
procedure SetCassioIsUsingMetaphone(flag : boolean);     external;
function GetFileSize(var fic : basicfile; var taille : SInt32) : OSErr;     external;
procedure DoNouvellePartie(ForceHumCtreHum : boolean);     external;
function PositionEtTraitCourant : PositionEtTraitRec;     external;
function EstLaPositionCourante(var position : PositionEtTraitRec) : boolean;     external;
  function SecondesEnJoursHeuresSecondes(secondes : SInt32) : String255;     external;
	procedure SplitBy (s : String255; sub : char; var left, right: String255);     external;
  procedure Parse(s : String255; var tete,reste : String255);     external;
  function StringBeginsWith(const s, pattern : String255) : boolean;     external;
procedure SetNroFFODuJoueur(nroJoueur : SInt32; whichNumeroFFO : SInt32);     external;
function GetNroFFODuJoueur(nroJoueur : SInt32) : SInt32;     external;
function GetNroJoueurDansSonFichier(nroJoueur : SInt32) : SInt32;     external;
function MakeEmptyIntegerSet : IntegerSet;     external;
function MakeOneElementIntegerSet(theKey : SInt32; data : SInt32) : IntegerSet;     external;
procedure DisposeIntegerSet(var S : IntegerSet);     external;
function IntegerSetEstVide(S : IntegerSet) : boolean;     external;
function CardinalOfIntegerSet(S : IntegerSet) : SInt32;     external;
function MemberOfIntegerSet(theKey: SInt32; var data : SInt32; S : IntegerSet) : boolean;     external;
procedure AddIntegerToSet(theKey : SInt32; data : SInt32; var S : IntegerSet);     external;
function PartieEstActive(nroReferencePartie : SInt32) : boolean;     external;
function GetNumeroJoueurNoirDansFichierParNroRefPartie(nroReference : SInt32) : SInt32;     external;
function GetNumeroJoueurBlancDansFichierParNroRefPartie(nroReference : SInt32) : SInt32;     external;
function GetNomTournoiAvecAnneeParNroRefPartie(nroReference : SInt32; longueurTotaleVoulue : SInt16) : String255;     external;
function GetNomJoueurCommeDansFichierFFODesJoueurs(nroJoueur : SInt32) : String255;     external;







