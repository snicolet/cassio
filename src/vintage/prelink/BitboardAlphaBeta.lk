	procedure AttendFrappeClavier;                                                                                                                                                     EXTERNAL_NAME('AttendFrappeClavier');
procedure WritelnDansRapport(s : String255);                                                                                                                                        EXTERNAL_NAME('WritelnDansRapport');
procedure WriteDansRapport(s : String255);                                                                                                                                          EXTERNAL_NAME('WriteDansRapport');
procedure WritelnNumDansRapport(s : String255; num : SInt32);                                                                                                                       EXTERNAL_NAME('WritelnNumDansRapport');
procedure WriteNumDansRapport(s : String255; num : SInt32);                                                                                                                         EXTERNAL_NAME('WriteNumDansRapport');
procedure WritelnStringAndBoolDansRapport(s : String255; b : boolean);                                                                                                              EXTERNAL_NAME('WritelnStringAndBoolDansRapport');
procedure WriteStringAndBoolDansRapport(s : String255; b : boolean);                                                                                                                EXTERNAL_NAME('WriteStringAndBoolDansRapport');
procedure WritelnStringAndBooleenDansRapport(s : String255; b : boolean);                                                                                                           EXTERNAL_NAME('WritelnStringAndBooleenDansRapport');
procedure WriteStringAndBooleenDansRapport(s : String255; b : boolean);                                                                                                             EXTERNAL_NAME('WriteStringAndBooleenDansRapport');
procedure WritelnStringAndBooleanDansRapport(s : String255; b : boolean);                                                                                                           EXTERNAL_NAME('WritelnStringAndBooleanDansRapport');
procedure WriteStringAndBooleanDansRapport(s : String255; b : boolean);                                                                                                             EXTERNAL_NAME('WriteStringAndBooleanDansRapport');
procedure WritelnDansRapportThreadSafe(s : String255);                                                                                                                              EXTERNAL_NAME('WritelnDansRapportThreadSafe');
procedure AjouterTempsDansMiniProfiler(nbVides,prof : SInt32; microsecondesUtilisees : UInt32; affichage : SInt32);                                                                 EXTERNAL_NAME('AjouterTempsDansMiniProfiler');
function DeuxCasesVidesBitboardFast(my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32; alpha,beta,diffPions : SInt32; listeBitboard : UInt32) : SInt32;                  EXTERNAL_NAME('DeuxCasesVidesBitboardFast');
procedure EcritBitboardState(s : String255; position : bitboard; ESprof,alpha,beta,diffPions : SInt32);                                                                             EXTERNAL_NAME('EcritBitboardState');
procedure WritelnListeBitboardDansRapport(s : String255; listeBitboard : UInt32; nbCasesVides : SInt32);                                                                            EXTERNAL_NAME('WritelnListeBitboardDansRapport');
function ModifPlatBitboard(coup,vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32; var resultat : bitboard; var diffPions : SInt32) : SInt32;    EXTERNAL_NAME('ModifPlatBitboard');
function DernierCoupBitboard(my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32; diffPions,iCourant : SInt32) : SInt32;                                                   EXTERNAL_NAME('DernierCoupBitboard');
function CalculePionsStablesBitboard(my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32; nbPionsStablesSuffisant : SInt32) : SInt32;                                      EXTERNAL_NAME('CalculePionsStablesBitboard');
function MakeBitboard(my_low,my_high,opp_low,opp_hi : UInt32) : bitboard;                                                                                                           EXTERNAL_NAME('MakeBitboard');
  function Hexa(num : SInt32) : String255;                                                                                                                                          EXTERNAL_NAME('Hexa');
procedure WritelnStringAndCoupDansRapport(s : String255; square : SInt16);                                                                                                          EXTERNAL_NAME('WritelnStringAndCoupDansRapport');
procedure PointDeMesureDeParallelisme;                                                                                                                                              EXTERNAL_NAME('PointDeMesureDeParallelisme');
function QuatreCasesVidesBitboardFast(var position : bitboard; alpha_4,beta_4,diffPions_4,vecteurParite_4 : SInt32; listeBitboard : UInt32{; debugageUnrolled : boolean}) : SInt32; EXTERNAL_NAME('QuatreCasesVidesBitboardFast');
function QuatreCasesVidesBitboardSimple(var position : bitboard; alpha_4,beta_4,diffPions_4,vecteurParite_4 : SInt32; listeBitboard : UInt32{; debugageUnrolled : boolean}) : SInt32;                                                                                         EXTERNAL_NAME('QuatreCasesVidesBitboardSimple');
function BitboardHashGet(hash_table : BitboardHashTable; pos_my_bits_low,pos_my_bits_high,pos_opp_bits_low,pos_opp_bits_high : UInt32; var hash_index : UInt32; var hash_info : loweruppermoveemptiesRec) : BitboardHash;                                                     EXTERNAL_NAME('BitboardHashGet');
procedure BitboardHashUpdate(hash_table : BitboardHashTable; hash_index : UInt32; pos_my_bits_low,pos_my_bits_high,pos_opp_bits_low,pos_opp_bits_high : UInt32; board_empties : SInt32; alpha,beta,score,move : SInt32);                                                      EXTERNAL_NAME('BitboardHashUpdate');
function TrierFastestFirstBitboardStabilite(pos_my_bits_low,pos_my_bits_high,pos_opp_bits_low,pos_opp_bits_high : UInt32; var listeCoupsLegaux : listeVides; coupAMettreEnTete : SInt32; listeBitboard : UInt32) : SInt32;                                                    EXTERNAL_NAME('TrierFastestFirstBitboardStabilite');
procedure EcouterLesResultatsDansCetteThread(nroThread : SInt32);                                                                                                                   EXTERNAL_NAME('EcouterLesResultatsDansCetteThread');
function ThreadEstInterrompue(nroThread, nbreCasesVides : SInt32) : boolean;                                                                                                        EXTERNAL_NAME('ThreadEstInterrompue');
function PeutTrouverUneThreadDisponible(nroThreadMaitre, nbreCasesVides, hashStamp : SInt32; var nroThreadEsclave : SInt32) : boolean;                                              EXTERNAL_NAME('PeutTrouverUneThreadDisponible');
function CalculerCoupsEnParallele(inNroThreadDuPere : SInt32; inNroThreadFilsDisponible : SInt32; inPosition : bitboard; inNbreVides : SInt32; inAlpha,inBeta : SInt32; inDiffPions : SInt32; inVecteurParite : SInt32; inListeBitboard : UInt32; var inListeDesCoupsLegaux : listeVides; indexPremierFils,indexDernierFils : SInt32; var outMeilleureDefense : UInt32; var outNroDuDernierFilsEvalue : SInt32) : SInt32;                                         EXTERNAL_NAME('CalculerCoupsEnParallele');
  function NumEnString(num : SInt32) : String255;                                                                                                                                   EXTERNAL_NAME('NumEnString');
procedure AttendreFrappeClavierParallelisme(attenteTouche : boolean);                                                                                                               EXTERNAL_NAME('AttendreFrappeClavierParallelisme');
procedure WritelnPositionEtTraitDansRapport(const position : plateauOthello; trait : SInt32);                                                                                       EXTERNAL_NAME('WritelnPositionEtTraitDansRapport');
function ListeChaineeDesCasesVidesEnListeBitboard(theList : celluleCaseVideDansListeChaineePtr; nbCasesVides : SInt32) : UInt32;                                                    EXTERNAL_NAME('ListeChaineeDesCasesVidesEnListeBitboard');
procedure ReinitialiserInterruptionsParHashStampsDesThreads(nroThreadAgissante : SInt32);                                                                                           EXTERNAL_NAME('ReinitialiserInterruptionsParHashStampsDesThreads');
function ListeChaineeDesCasesVidesEstDisponible : boolean;                                                                                                                          EXTERNAL_NAME('ListeChaineeDesCasesVidesEstDisponible');
procedure CreeListeCasesVidesDeCettePosition(jeu : plateauOthello; listeChaineeUtiliseOrdreOptmisiseDesCases : boolean);                                                            EXTERNAL_NAME('CreeListeCasesVidesDeCettePosition');
procedure CreerListeChaineeDesCasesVides( nbVides : SInt32; var tete : celluleCaseVideDansListeChainee; var buffer : t_bufferCellulesListeChainee; var whichTablePointeurs : tableDePointeurs; fonctionAppelante : String255);                                                EXTERNAL_NAME('CreerListeChaineeDesCasesVides');
procedure SetListeChaineeDesCasesVidesEstDisponible(flag : boolean);                                                                                                                EXTERNAL_NAME('SetListeChaineeDesCasesVidesEstDisponible');
procedure WriteCoupDansRapport(square : SInt16);                                                                                                                                    EXTERNAL_NAME('WriteCoupDansRapport');
procedure WriteStringAndNumEnSeparantLesMilliersDansRapport(s : String255; num : SInt32);                                                                                           EXTERNAL_NAME('WriteStringAndNumEnSeparantLesMilliersDansRapport');
procedure WritelnStringAndReelDansRapport(s : String255; x : double_t; nbDecimales : SInt16);                                                                                       EXTERNAL_NAME('WritelnStringAndReelDansRapport');
