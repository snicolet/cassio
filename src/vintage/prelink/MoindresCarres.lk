procedure WritelnDansRapport(s : String255);     external;
procedure WriteDansRapport(s : String255);     external;
procedure WritelnNumDansRapport(s : String255; num : SInt32);     external;
procedure WriteNumDansRapport(s : String255; num : SInt32);     external;
procedure WritelnStringAndBoolDansRapport(s : String255; b : boolean);     external;
procedure WriteStringAndBoolDansRapport(s : String255; b : boolean);     external;
procedure WritelnStringAndBooleenDansRapport(s : String255; b : boolean);     external;
procedure WriteStringAndBooleenDansRapport(s : String255; b : boolean);     external;
procedure WritelnStringAndBooleanDansRapport(s : String255; b : boolean);     external;
procedure WriteStringAndBooleanDansRapport(s : String255; b : boolean);     external;
procedure WritelnDansRapportThreadSafe(s : String255);     external;
procedure ExtraitPartieTableStockageParties(nroReference : SInt32; var partieStr : PackedThorGame);     external;
function CalculePositionEtTraitApres(var partie60 : PackedThorGame; numeroCoup : SInt16; var position : plateauOthello; var trait,nbBlanc,nbNoir : SInt32) : boolean;     external;
procedure Calcule_Valeurs_Tactiques(plat : plateauOthello; avecCalculCentre : boolean);     external;
procedure CarteFrontiere(const plat : plateauOthello; var front : InfoFront);     external;
procedure CarteJouable(const plat : plateauOthello; var carte : plBool);     external;
function CreeEvaluationCassioRec(var position : plateauOthello; coulEvaluation,nbBlancs,nbNoirs : SInt32; var jouable : plBool; var front : InfoFront) : EvaluationCassioRec;     external;
function GetScoreTheoriqueParNroRefPartie(nroReference : SInt32) : SInt16;     external;
procedure SetVecteurNul(n : SInt32; var V : VecteurReels);     external;
  function ReelEnStringAvecDecimales(unreel : double; nbChiffresSignificatifs : SInt16) : String255;     external;
procedure SetMatriceCarreeNulle(n : SInt32; var M : MatriceReels);     external;
procedure WritelnMatriceReelsDansRapport(var M : MatriceReels; nbChiffres : SInt16);     external;
function ResoudSystemeEquationsCarre(A : MatriceReels; b : VecteurReels; var Inverse : MatriceReels; var x : VecteurReels) : boolean;     external;
procedure WritelnVecteurReelsDansRapport(var v : VecteurReels; nbChiffres : SInt16);     external;
procedure Superviseur(n : SInt16);     external;
procedure Normalisation(var partie120 : String255; var autreCoupQuatreDiag : boolean; interversions : boolean);     external;
