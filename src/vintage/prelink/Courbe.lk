	function Min (a, b: SInt32) : SInt32;     external;
	function Max (a, b: SInt32) : SInt32;     external;
	procedure AttendFrappeClavier;     external;
procedure WritelnDansRapport(s : String255);     external;
procedure WriteDansRapport(s : String255);     external;
procedure WritelnNumDansRapport(s : String255; num : SInt32);     external;
procedure WriteNumDansRapport(s : String255; num : SInt32);     external;
procedure WritelnStringAndBoolDansRapport(s : String255; b : boolean);     external;
procedure WriteStringAndBoolDansRapport(s : String255; b : boolean);     external;
procedure WritelnStringAndBooleenDansRapport(s : String255; b : boolean);     external;
procedure WriteStringAndBooleenDansRapport(s : String255; b : boolean);     external;
procedure WritelnStringAndBooleanDansRapport(s : String255; b : boolean);     external;
procedure WriteStringAndBooleanDansRapport(s : String255; b : boolean);     external;
procedure WritelnDansRapportThreadSafe(s : String255);     external;
	function MakeRect(left, top, right, bottom : SInt32) : Rect;     external;
	function MakePoint(h,v : SInt32) : Point;     external;
function CreateTempOffScreenWorld(var theRect : rect; var offScreenGWorld : GWorldPtr) : OSErr;     external;
procedure KillTempOffscreenWorld(var offScreenGWorld : GWorldPtr);     external;
procedure MemoryFillChar(bufferPtr : universal UnivPtr; byteCount: SInt32; caractere : char);     external;
function GetWindowContentRect(theWindow : WindowRef) : rect;     external;
  procedure MyEraseRectWithColor(const (*var*) r : Rect; couleurCmd : SInt32; whichPattern : pattern; fonctionAppelante : String255);     external;
procedure SetPortByWindow(window : WindowPtr);     external;
function QDGetPortBound : rect;     external;
function EnTrainDeRejouerUnePartie : boolean;     external;
procedure FlushWindow(theWindow : WindowRef);     external;
function EclaircirCouleurDeCetteQuantite(theColor : RGBColor; quantite : SInt32) : RGBColor;     external;
	function MyTrunc(x : double) : SInt32;     external;
  procedure DisableQuartzAntiAliasingThisPort(port : CGrafPtr);     external;
	function ReadStringFromRessource(stringListID, index : SInt16) : String255;     external;
	procedure DrawStringPourGNUPascal(const s : String255);     external;
	function StringWidthPourGNUPascal(const s : String255): SInt16;     external;
  procedure EnableQuartzAntiAliasingThisPort(port : CGrafPtr; useQuartzMetrics : boolean);     external;
  procedure MyEraseRect(const (*var*) r : Rect);     external;
procedure DessineBoiteDeTaille(whichWindow : WindowPtr);     external;
function GetCouleurAffichageValeurZebraBook(trait : SInt32; whichNote : SInt32) : RGBColor;     external;
  procedure Intersection(xA1,yA1,xA2,yA2,XB1,yB1,xB2,YB2 : SInt32; var x,y : SInt32);     external;
procedure ValidRect(r : rect);     external;
	function BoolEnString(myBool : boolean) : String255;     external;
procedure Superviseur(n : SInt16);     external;
function Evaluation(var position : plateauOthello; coulEvaluation,nbBlancs,nbNoirs : SInt32; var jouable : plBool; var front : InfoFront; afraidOfWipeOut : boolean; alpha,beta : SInt32; var nbEvaluationsRecursives : SInt32) : SInt32;     external;
function GetEndgameScoreDeCetteCouleurDansGameNode(G : GameTree; couleur : SInt32; var scoreMinPourCouleur,scoreMaxPourCouleur : SInt32) : boolean;     external;
function DerniereCaseJouee : SInt32;     external;
function CoupEnString(coup : SInt16; enMajuscules : boolean) : String255;     external;
function GetNiemeCoupPartieCourante(numeroDuCoup : SInt32) : SInt32;     external;
function PeutArreterAnalyseRetrograde : boolean;     external;
procedure DoBackMove;     external;
procedure DoDoubleBackMove;     external;
procedure DoRetourAuCoupNro(numeroCoup : SInt32; NeDessinerQueLesNouveauxPions,ForceHumCtreHum : boolean);     external;
procedure DoAvanceMove;     external;
procedure DoDoubleAvanceMove;     external;
procedure DoAvanceAuCoupNro(numeroCoup : SInt16; NeDessinerQueLesNouveauxPions : boolean);     external;
  procedure ShareTimeWithOtherProcesses(quantity : SInt32);     external;
procedure AjusteCurseur;     external;
  function EstUnDoubleClic(myEvent : eventRecord; attendClicSuivant : boolean) : boolean;     external;
function CassioEstEnModeAnalyse : boolean;     external;
	function ReplaceParameters(s, p0, p1, p2, p3 : String255) : String255;     external;
  function ReelEnStringAvecDecimales(unreel : double; nbChiffresSignificatifs : SInt16) : String255;     external;
function GetCouleurAffichageValeurCourbe(trait : SInt32; whichNote : SInt32) : RGBColor;     external;
function EvaluationEdmondEstDisponible : boolean;     external;
function GetNouvelleEvalDejaChargee : boolean;     external;
procedure DumpWorkToScreen(sourceRect,targetRect : rect; offScreenWork,targetWindow : CGrafPtr);     external;
function CreateDirectoryWithThisPath(directoryPath : String255) : OSErr;     external;
	function ExtraitCheminDAcces(nomComplet : String255) : String255;     external;
procedure ExportPictureToFile(thePicHandle : PicHandle; nomFichier : String255);     external;
function FileExists(nom : String255 ; vRefNum : SInt16; var fic : basicfile) : OSErr;     external;
function QTGraph_ShowImageFromFile(whichWindow : CGrafPtr; whichBounds : rect; var info : fileInfo) : OSErr;     external;
function FichierTexteDeCassioExiste(nom : String255; var fic : basicfile) : OSErr;     external;
function GetPathCompletDossierOthelliersDeCassio : String255;     external;
procedure QTGraph_ShowImageWithTransparenceFromFile(whichWindow : CGrafPtr; transparentColor : RGBColor; whichBounds : rect; var info : fileInfo);     external;
procedure SetRGBColor (var theColor: RGBColor; redValue, greenValue, blueValue: SInt32);     external;






