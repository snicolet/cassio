	function Min (a, b: SInt32) : SInt32;                                                                                                                                              EXTERNAL_NAME('Min');
	function Max (a, b: SInt32) : SInt32;                                                                                                                                              EXTERNAL_NAME('Max');
procedure WritelnDansRapport(s : String255);                                                                                                                                        EXTERNAL_NAME('WritelnDansRapport');
procedure WriteDansRapport(s : String255);                                                                                                                                          EXTERNAL_NAME('WriteDansRapport');
procedure WritelnNumDansRapport(s : String255; num : SInt32);                                                                                                                       EXTERNAL_NAME('WritelnNumDansRapport');
procedure WriteNumDansRapport(s : String255; num : SInt32);                                                                                                                         EXTERNAL_NAME('WriteNumDansRapport');
procedure WritelnStringAndBoolDansRapport(s : String255; b : boolean);                                                                                                              EXTERNAL_NAME('WritelnStringAndBoolDansRapport');
procedure WriteStringAndBoolDansRapport(s : String255; b : boolean);                                                                                                                EXTERNAL_NAME('WriteStringAndBoolDansRapport');
procedure WritelnStringAndBooleenDansRapport(s : String255; b : boolean);                                                                                                           EXTERNAL_NAME('WritelnStringAndBooleenDansRapport');
procedure WriteStringAndBooleenDansRapport(s : String255; b : boolean);                                                                                                             EXTERNAL_NAME('WriteStringAndBooleenDansRapport');
procedure WritelnStringAndBooleanDansRapport(s : String255; b : boolean);                                                                                                           EXTERNAL_NAME('WritelnStringAndBooleanDansRapport');
procedure WriteStringAndBooleanDansRapport(s : String255; b : boolean);                                                                                                             EXTERNAL_NAME('WriteStringAndBooleanDansRapport');
procedure WritelnDansRapportThreadSafe(s : String255);                                                                                                                              EXTERNAL_NAME('WritelnDansRapportThreadSafe');
function DimensionDuPointMultidimensionnel(var p : PointMultidimensionnel) : SInt32;                                                                                                EXTERNAL_NAME('DimensionDuPointMultidimensionnel');
function AllocatePointMultidimensionnel(n : SInt32; var p : PointMultidimensionnel) : boolean;                                                                                      EXTERNAL_NAME('AllocatePointMultidimensionnel');
procedure StraightLineFitting(var x,y,sigma : PointMultidimensionnel; nData : SInt32; variancesIndividuellesConnues : boolean; var a,b,sigmaa,sigmab,chi2,q : TypeReel);            EXTERNAL_NAME('StraightLineFitting');
procedure SetValeurDansPointMultidimensionnel(var p : PointMultidimensionnel; valeur : TypeReel);                                                                                   EXTERNAL_NAME('SetValeurDansPointMultidimensionnel');
procedure CombinaisonLineairePointMultidimensionnel(var p1,p2 : PointMultidimensionnel; lambda1,lambda2 : TypeReel; var resultat : PointMultidimensionnel);                         EXTERNAL_NAME('CombinaisonLineairePointMultidimensionnel');
procedure DiffPointMultidimensionnel(var p1,p2,resultat : PointMultidimensionnel);                                                                                                  EXTERNAL_NAME('DiffPointMultidimensionnel');
procedure MomentsOfPointMultidimensionnel(var data : PointMultidimensionnel; nData : SInt32; var moyenne, deviationAbsolueMoyenne, standardDeviation, variance, skewness, kurtosis : TypeReel);                                                                               EXTERNAL_NAME('MomentsOfPointMultidimensionnel');
  function RealToLongint(r : double_t) : SInt32;                                                                                                                                    EXTERNAL_NAME('RealToLongint');
procedure DisposePointMultidimensionnel(var p : PointMultidimensionnel);                                                                                                            EXTERNAL_NAME('DisposePointMultidimensionnel');
procedure HLockAllProfsDansDansTableOfMoveRecordsLists;                                                                                                                             EXTERNAL_NAME('HLockAllProfsDansDansTableOfMoveRecordsLists');
procedure HUnlockAllProfsDansDansTableOfMoveRecordsLists;                                                                                                                           EXTERNAL_NAME('HUnlockAllProfsDansDansTableOfMoveRecordsLists');
function GetCurrentInterruption : SInt16;                                                                                                                                           EXTERNAL_NAME('GetCurrentInterruption');
procedure EnleveCetteInterruption(typeInterruption : SInt16);                                                                                                                       EXTERNAL_NAME('EnleveCetteInterruption');
procedure PlaquerPosition(plat : plateauOthello; trait : SInt16; flags : SInt32);                                                                                                   EXTERNAL_NAME('PlaquerPosition');
procedure DoChangeHumCtreHum;                                                                                                                                                       EXTERNAL_NAME('DoChangeHumCtreHum');
procedure DoMilieuDeJeuAnalyse(selectedByMenu : boolean);                                                                                                                           EXTERNAL_NAME('DoMilieuDeJeuAnalyse');
function CalculePhasePartie(numeroCoup : SInt16) : SInt16;                                                                                                                          EXTERNAL_NAME('CalculePhasePartie');
procedure ReinitilaliseInfosAffichageReflexion;                                                                                                                                     EXTERNAL_NAME('ReinitilaliseInfosAffichageReflexion');
procedure EffaceReflexion(effacerAussiLeRuban : boolean);                                                                                                                           EXTERNAL_NAME('EffaceReflexion');
function AQuiDeJouer : SInt32;                                                                                                                                                      EXTERNAL_NAME('AQuiDeJouer');
procedure LanceChrono;                                                                                                                                                              EXTERNAL_NAME('LanceChrono');
procedure EcritJeReflechis(coulChoix : SInt16);                                                                                                                                     EXTERNAL_NAME('EcritJeReflechis');
procedure Superviseur(n : SInt16);                                                                                                                                                  EXTERNAL_NAME('Superviseur');
procedure Initialise_table_heuristique(jeu : plateauOthello; debug : boolean);                                                                                                      EXTERNAL_NAME('Initialise_table_heuristique');
procedure Calcule_Valeurs_Tactiques(plat : plateauOthello; avecCalculCentre : boolean);                                                                                             EXTERNAL_NAME('Calcule_Valeurs_Tactiques');
procedure SetProfImposee(flag : boolean; const fonctionAppelante : String255);                                                                                                      EXTERNAL_NAME('SetProfImposee');
function CalculeMeilleurCoupMilieuDePartie(const jeu : plateauOthello; var emplBool : plBool; var frontiere : InfoFront; couleur,profondeur,nbBlancs,nbNoirs : SInt32) : MoveRecord;                                                                                          EXTERNAL_NAME('CalculeMeilleurCoupMilieuDePartie');
procedure LanceInterruption(typeInterruption : SInt16; const fonctionAppelante : String255);                                                                                        EXTERNAL_NAME('LanceInterruption');
procedure ForEachPositionInGameDo(partie60 : PackedThorGame; DoWhat : MilieuDePartieProc; var result : SInt32);                                                                     EXTERNAL_NAME('ForEachPositionInGameDo');
function EOFFichierTexte(var fic : FichierTEXT; var erreurES : OSErr) : boolean;                                                                                                    EXTERNAL_NAME('EOFFichierTexte');
function ReadLongintDansFichierTexte(var fic : FichierTEXT; var value : SInt32) : OSErr;                                                                                            EXTERNAL_NAME('ReadLongintDansFichierTexte');
function LitPointMultidimensionnelDansFichierTexte(var fic : FichierTEXT; var p : PointMultidimensionnel) : OSErr;                                                                  EXTERNAL_NAME('LitPointMultidimensionnelDansFichierTexte');
procedure CopierPointMultidimensionnel(var source,dest : PointMultidimensionnel);                                                                                                   EXTERNAL_NAME('CopierPointMultidimensionnel');
function WriteLongintDansFichierTexte(var fic : FichierTEXT; value : SInt32) : OSErr;                                                                                               EXTERNAL_NAME('WriteLongintDansFichierTexte');
function EcritPointMultidimensionnelDansFichierTexte(var fic : FichierTEXT; var p : PointMultidimensionnel) : OSErr;                                                                EXTERNAL_NAME('EcritPointMultidimensionnelDansFichierTexte');
function FichierTexteDeCassioExiste(nom : String255; var fic : FichierTEXT) : OSErr;                                                                                                EXTERNAL_NAME('FichierTexteDeCassioExiste');
function OuvreFichierTexte(var fic : FichierTEXT) : OSErr;                                                                                                                          EXTERNAL_NAME('OuvreFichierTexte');
function FermeFichierTexte(var fic : FichierTEXT) : OSErr;                                                                                                                          EXTERNAL_NAME('FermeFichierTexte');
function FichierTexteExiste(nom : String255 ; vRefNum : SInt16; var fic : FichierTEXT) : OSErr;                                                                                     EXTERNAL_NAME('FichierTexteExiste');
function CreeFichierTexteDeCassio(nom : String255; var fic : FichierTEXT) : OSErr;                                                                                                  EXTERNAL_NAME('CreeFichierTexteDeCassio');
function VideFichierTexte(var fic : FichierTEXT) : OSErr;                                                                                                                           EXTERNAL_NAME('VideFichierTexte');
procedure SetFileCreatorFichierTexte(var fic : FichierTEXT; quelType : OSType);                                                                                                     EXTERNAL_NAME('SetFileCreatorFichierTexte');
procedure SetFileTypeFichierTexte(var fic : FichierTEXT; quelType : OSType);                                                                                                        EXTERNAL_NAME('SetFileTypeFichierTexte');
procedure ForEachGameInListDo(FiltreNumRef : FiltreNumRefProc; FiltreGame : FiltreGameProc; DoWhat : GameInListProc; var result : SInt32);                                          EXTERNAL_NAME('ForEachGameInListDo');
function bidFiltreNumRefProc(numeroDansLaListe,numeroReference : SInt32; var result : SInt32) : boolean;                                                                            EXTERNAL_NAME('bidFiltreNumRefProc');
function bidFiltreGameProc(var partie60 : PackedThorGame; numeroRefPartie : SInt32; var result : SInt32) : boolean;                                                                 EXTERNAL_NAME('bidFiltreGameProc');
