	function Min (a, b: SInt32) : SInt32;                                                                                                                                              EXTERNAL_NAME('Min');
	function Max (a, b: SInt32) : SInt32;                                                                                                                                              EXTERNAL_NAME('Max');
	procedure AttendFrappeClavier;                                                                                                                                                     EXTERNAL_NAME('AttendFrappeClavier');
procedure WritelnDansRapport(s : String255);                                                                                                                                        EXTERNAL_NAME('WritelnDansRapport');
procedure WriteDansRapport(s : String255);                                                                                                                                          EXTERNAL_NAME('WriteDansRapport');
procedure WritelnNumDansRapport(s : String255; num : SInt32);                                                                                                                       EXTERNAL_NAME('WritelnNumDansRapport');
procedure WriteNumDansRapport(s : String255; num : SInt32);                                                                                                                         EXTERNAL_NAME('WriteNumDansRapport');
procedure WritelnStringAndBoolDansRapport(s : String255; b : boolean);                                                                                                              EXTERNAL_NAME('WritelnStringAndBoolDansRapport');
procedure WriteStringAndBoolDansRapport(s : String255; b : boolean);                                                                                                                EXTERNAL_NAME('WriteStringAndBoolDansRapport');
procedure WritelnStringAndBooleenDansRapport(s : String255; b : boolean);                                                                                                           EXTERNAL_NAME('WritelnStringAndBooleenDansRapport');
procedure WriteStringAndBooleenDansRapport(s : String255; b : boolean);                                                                                                             EXTERNAL_NAME('WriteStringAndBooleenDansRapport');
procedure WritelnStringAndBooleanDansRapport(s : String255; b : boolean);                                                                                                           EXTERNAL_NAME('WritelnStringAndBooleanDansRapport');
procedure WriteStringAndBooleanDansRapport(s : String255; b : boolean);                                                                                                             EXTERNAL_NAME('WriteStringAndBooleanDansRapport');
procedure WritelnDansRapportThreadSafe(s : String255);                                                                                                                              EXTERNAL_NAME('WritelnDansRapportThreadSafe');
function PositionDansStringAlphaEnCoup(const s : String255; positionDansChaine : SInt16) : SInt16;                                                                                  EXTERNAL_NAME('PositionDansStringAlphaEnCoup');
procedure FILL_PACKED_GAME_WITH_ZEROS(var game : PackedThorGame);                                                                                                                   EXTERNAL_NAME('FILL_PACKED_GAME_WITH_ZEROS');
procedure COPY_STR60_TO_PACKED_GAME(const s60 : String255; var result : PackedThorGame);                                                                                            EXTERNAL_NAME('COPY_STR60_TO_PACKED_GAME');
procedure PrecompileInterversions(var whichGame : PackedThorGame; longueur : SInt16);                                                                                               EXTERNAL_NAME('PrecompileInterversions');
procedure COPY_PACKED_GAME_TO_PACKED_GAME(const source : PackedThorGame; whichLength : UInt8; var result : PackedThorGame);                                                         EXTERNAL_NAME('COPY_PACKED_GAME_TO_PACKED_GAME');
procedure MoveMemory(sourcePtr,destPtr: Ptr; byteCount: SInt32);                                                                                                                    EXTERNAL_NAME('MoveMemory');
function GET_ADRESS_OF_NTH_MOVE(var whichGame : PackedThorGame; n : UInt8) : Ptr;                                                                                                   EXTERNAL_NAME('GET_ADRESS_OF_NTH_MOVE');
procedure SET_LENGTH_OF_PACKED_GAME(var whichGame : PackedThorGame; whichLength : UInt8);                                                                                           EXTERNAL_NAME('SET_LENGTH_OF_PACKED_GAME');
procedure TraiteInterversionFormatThorCompile(var whichGame : PackedThorGame);                                                                                                      EXTERNAL_NAME('TraiteInterversionFormatThorCompile');
  function PChancesSurN(P,N : SInt32) : boolean;                                                                                                                                    EXTERNAL_NAME('PChancesSurN');
	procedure RandomizeTimer;                                                                                                                                                          EXTERNAL_NAME('RandomizeTimer');
function PartieNormalisee(var autreCoupQuatreDiag : boolean; interversions : boolean) : String255;                                                                                  EXTERNAL_NAME('PartieNormalisee');
  function UneChanceSur(N : SInt32) : boolean;                                                                                                                                      EXTERNAL_NAME('UneChanceSur');
function GetNiemeCoupPartieCourante(numeroDuCoup : SInt32) : SInt32;                                                                                                                EXTERNAL_NAME('GetNiemeCoupPartieCourante');
procedure PrepareTexteStatePourEcritCoupsBibl;                                                                                                                                      EXTERNAL_NAME('PrepareTexteStatePourEcritCoupsBibl');
procedure DessinePourcentage(square,n : SInt16);                                                                                                                                    EXTERNAL_NAME('DessinePourcentage');
function CassioEstEn3D : boolean;                                                                                                                                                   EXTERNAL_NAME('CassioEstEn3D');
function EnModeEntreeTranscript : boolean;                                                                                                                                          EXTERNAL_NAME('EnModeEntreeTranscript');
procedure PrepareTexteStatePourCommentaireOuverture;                                                                                                                                EXTERNAL_NAME('PrepareTexteStatePourCommentaireOuverture');
procedure EcritCommentaireOuverture(commentaire : String255);                                                                                                                       EXTERNAL_NAME('EcritCommentaireOuverture');
procedure EffaceCommentaireOuverture;                                                                                                                                               EXTERNAL_NAME('EffaceCommentaireOuverture');
procedure EffaceAideDebutant(avecDessinAutresInfosSurLesCases,effacageLarge : boolean; surQuellesCases : SquareSet; fonctionAppelante : String255);                                 EXTERNAL_NAME('EffaceAideDebutant');
procedure DessineAideDebutant(avecDessinAutresInfosSurLesCases : boolean; surQuellesCases : SquareSet);                                                                             EXTERNAL_NAME('DessineAideDebutant');
function GetAffichageProprietesOfCurrentNode : UInt32;                                                                                                                              EXTERNAL_NAME('GetAffichageProprietesOfCurrentNode');
	procedure DrawStringPourGNUPascal(const s : String255);                                                                                                                            EXTERNAL_NAME('DrawStringPourGNUPascal');
function EstUnePartieOthello(var s : String255; compacterPartie : boolean) : boolean;                                                                                               EXTERNAL_NAME('EstUnePartieOthello');
procedure RejouePartieOthello(s : String255; coupMax : SInt16; positionDepartStandart : boolean; platImpose : plateauOthello; traitImpose : SInt16; var gameNodeLePlusProfondGenere : GameTree; peutDetruireArbreDeJeu : boolean; avecNomsOuvertureDansArbre : boolean);      EXTERNAL_NAME('RejouePartieOthello');
	function TPCopy (source : String255; start, count: SInt32) : String255;                                                                                                            EXTERNAL_NAME('TPCopy');
  procedure EnleveEspacesDeGaucheSurPlace(var s : String255);                                                                                                                       EXTERNAL_NAME('EnleveEspacesDeGaucheSurPlace');
  procedure EnleveEspacesDeDroiteSurPlace(var s : String255);                                                                                                                       EXTERNAL_NAME('EnleveEspacesDeDroiteSurPlace');
procedure CompacterPartieAlphanumerique(var s : String255; modification : SInt16);                                                                                                  EXTERNAL_NAME('CompacterPartieAlphanumerique');
procedure Normalisation(var partie120 : String255; var autreCoupQuatreDiag : boolean; interversions : boolean);                                                                     EXTERNAL_NAME('Normalisation');
function CoupEnStringEnMajuscules(coup : SInt16) : String255;                                                                                                                       EXTERNAL_NAME('CoupEnStringEnMajuscules');
  function PourcentageEntierEnString(num : SInt32) : String255;                                                                                                                     EXTERNAL_NAME('PourcentageEntierEnString');
function GetScreenBounds : rect;                                                                                                                                                    EXTERNAL_NAME('GetScreenBounds');
	function MyNewCWindow( wStorage: UnivPtr; const boundsRect: Rect; const  title: String255; visible: Boolean; procID: SInt16; behind: WindowRef; goAwayFlag: Boolean; refCon: SInt32 ): WindowRef;                                                                            EXTERNAL_NAME('MyNewCWindow');
function FenetreFictiveAvantPlan : WindowPtr;                                                                                                                                       EXTERNAL_NAME('FenetreFictiveAvantPlan');
procedure SetPortByWindow(window : WindowPtr);                                                                                                                                      EXTERNAL_NAME('SetPortByWindow');
  procedure DeleteString( var s : String255; index, nb_chars_to_delete : SInt32);                                                                                                   EXTERNAL_NAME('DeleteString');
  procedure MyAppendMenu( menu: MenuRef; const data: String255 );                                                                                                                   EXTERNAL_NAME('MyAppendMenu');
  function EnleveEspacesDeGauche(const s : String255) : String255;                                                                                                                  EXTERNAL_NAME('EnleveEspacesDeGauche');
  function DeleteSpacesBefore(const s : String255; p : SInt16) : String255;                                                                                                         EXTERNAL_NAME('DeleteSpacesBefore');
procedure SetProgress(absoluteAmount : SInt32);                                                                                                                                     EXTERNAL_NAME('SetProgress');
	function MyTrunc(x : double_t) : SInt32;                                                                                                                                           EXTERNAL_NAME('MyTrunc');
	function ReadStringFromRessource(stringListID, index : SInt16) : String255;                                                                                                        EXTERNAL_NAME('ReadStringFromRessource');
function StringEnCoup(const s : String255) : SInt16;                                                                                                                                EXTERNAL_NAME('StringEnCoup');
  procedure ChaineToLongint(const s : String255; var theLongint : SInt32);                                                                                                          EXTERNAL_NAME('ChaineToLongint');
function FichierTexteExiste(nom : String255 ; vRefNum : SInt16; var fic : FichierTEXT) : OSErr;                                                                                     EXTERNAL_NAME('FichierTexteExiste');
function FichierTexteDeCassioExiste(nom : String255; var fic : FichierTEXT) : OSErr;                                                                                                EXTERNAL_NAME('FichierTexteDeCassioExiste');
  function ReplaceStringByStringInString(const pattern,replacement,s : String255) : String255;                                                                                      EXTERNAL_NAME('ReplaceStringByStringInString');
procedure InitProgressIndicator(whichWindow : WindowRef; r : rect; maximum : SInt32; PourKaleidoscope : boolean);                                                                   EXTERNAL_NAME('InitProgressIndicator');
	function MakeRect(left, top, right, bottom : SInt32) : Rect;                                                                                                                       EXTERNAL_NAME('MakeRect');
procedure SetDebuggageUnitFichiersTexte(flag : boolean);                                                                                                                            EXTERNAL_NAME('SetDebuggageUnitFichiersTexte');
	function ParamStr(s, p0, p1, p2, p3 : String255) : String255;                                                                                                                      EXTERNAL_NAME('ParamStr');
  procedure ShareTimeWithOtherProcesses(quantity : SInt32);                                                                                                                         EXTERNAL_NAME('ShareTimeWithOtherProcesses');
	procedure CenterString(h, v, w : SInt16; s : String255);                                                                                                                           EXTERNAL_NAME('CenterString');
function QDGetPortBound : rect;                                                                                                                                                     EXTERNAL_NAME('QDGetPortBound');
function OuvreFichierTexte(var fic : FichierTEXT) : OSErr;                                                                                                                          EXTERNAL_NAME('OuvreFichierTexte');
	procedure TerminateMenu(var theMenu : MenuRef; provientDUneResource : boolean);                                                                                                    EXTERNAL_NAME('TerminateMenu');
  function MyGetMenu(resourceID : SInt16) : MenuRef;                                                                                                                                EXTERNAL_NAME('MyGetMenu');
function EOFFichierTexte(var fic : FichierTEXT; var erreurES : OSErr) : boolean;                                                                                                    EXTERNAL_NAME('EOFFichierTexte');
function ReadlnDansFichierTexte(var fic : FichierTEXT; var s : String255) : OSErr;                                                                                                  EXTERNAL_NAME('ReadlnDansFichierTexte');
function FermeFichierTexte(var fic : FichierTEXT) : OSErr;                                                                                                                          EXTERNAL_NAME('FermeFichierTexte');
procedure EssaieSetPortWindowPlateau;                                                                                                                                               EXTERNAL_NAME('EssaieSetPortWindowPlateau');
