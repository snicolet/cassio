	function Min (a, b: SInt32) : SInt32;     external;
	function Max (a, b: SInt32) : SInt32;     external;
procedure WritelnDansRapport(s : String255);     external;
procedure WriteDansRapport(s : String255);     external;
procedure WritelnNumDansRapport(s : String255; num : SInt32);     external;
procedure WriteNumDansRapport(s : String255; num : SInt32);     external;
procedure WritelnStringAndBoolDansRapport(s : String255; b : boolean);     external;
procedure WriteStringAndBoolDansRapport(s : String255; b : boolean);     external;
procedure WritelnStringAndBooleenDansRapport(s : String255; b : boolean);     external;
procedure WriteStringAndBooleenDansRapport(s : String255; b : boolean);     external;
procedure WritelnStringAndBooleanDansRapport(s : String255; b : boolean);     external;
procedure WriteStringAndBooleanDansRapport(s : String255; b : boolean);     external;
procedure WritelnDansRapportThreadSafe(s : String255);     external;
procedure MemoryFillChar(bufferPtr : universal UnivPtr; byteCount: SInt32; caractere : char);     external;
function SetPositionTeteLectureFichierTexte(var fic : FichierTEXT; position : SInt32) : OSErr;     external;
function ReadBufferDansFichierTexte(var fic : FichierTEXT; buffPtr : Ptr; var count : SInt32) : OSErr;     external;
  function EnleveEspacesDeGauche(const s : String255) : String255;     external;
  function ReplaceStringOnce(const s, pattern, replacement : String255) : String255;     external;
function AllocateMemoryPtrClear(whichSize : SInt32) : Ptr;     external;
function MakeTranscriptFromPlateauOthello(coups : platValeur) : Transcript;     external;
procedure ChercherLesErreursDansCeTranscript(var myTranscript : Transcript; var analyse : AnalyseDeTranscript);     external;
function EstUnePartieOthelloAvecMiroir(var s : String255) : boolean;     external;
procedure DisposeMemoryPtr(var whichPtr : Ptr);     external;
function FSSpecToLongName(whichFile : fileInfo; var theLongName : String255) : OSErr;     external;
procedure AnnonceOuvertureFichierEnRougeDansRapport(nomFichier : String255);     external;
	function ReadStringFromRessource(stringListID, index : SInt16) : String255;     external;
procedure DoLectureJoueursEtTournoi(nomsCourts : boolean);     external;
function OuvreFichierTexte(var fic : FichierTEXT) : OSErr;     external;
function TrouverNomDeTournoiDansPath(path : String255; var numeroTournoi,annee : SInt32; nomDictionnaireDesPseudos : String255) : boolean;     external;
function EstUnePartieOthelloTerminee(var s : String255; compacterPartie : boolean; var nbPionsFinalNoirs,nbPionsFinalBlancs : SInt32) : boolean;     external;
procedure ChangeFontColorDansRapport(whichColor : SInt16);     external;
procedure TextNormalDansRapport;     external;
function TrouverNomsDesJoueursDansNomDeFichier(s : String255; var numeroJoueur1,numeroJoueur2 : SInt32; longueurMinimaleUnPseudo : SInt32; var qualiteSolution : double) : boolean;     external;
procedure SetAutorisationCalculsLongsSurListe(flag : boolean);     external;
procedure DoChangeSousSelectionActive;     external;
function AjouterPartieAlphaDansLaListe(partieEnAlpha : String255; theorique,numeroNoir,numeroBlanc,numeroTournoi,annee : SInt32; var partieRec : t_PartieRecNouveauFormat; var nroReferencePartieAjoutee : SInt32) : boolean;     external;
function FermeFichierTexte(var fic : FichierTEXT) : OSErr;     external;
procedure TrierListePartie(critereDeTri,algorithmeDeTri : SInt32);     external;
function AlgoDeTriOptimum(critereDeTri : SInt32) : SInt32;     external;
procedure CalculsEtAffichagePourBase(infosDejaCalculees : boolean; withCheckEvent : boolean);     external;
function GetNomJoueur(nroJoueur : SInt32) : String255;     external;
  function UpperCase(const s : String255; keepDiacritics : boolean) : String255;     external;
function ScoreFinalEnChaine(scorePourNoir : SInt16) : String255;     external;
	function TPCopy (source : String255; start, count: SInt32) : String255;     external;
function PositionEtTraitInitiauxStandard : PositionEtTraitRec;     external;
procedure FILL_PACKED_GAME_WITH_ZEROS(var game : PackedThorGame);     external;
procedure ADD_MOVE_TO_PACKED_GAME(var whichGame : PackedThorGame; whichSquare : UInt8);     external;
function GetTraitOfPosition(var position : PositionEtTraitRec) : SInt32;     external;
function UpdatePositionEtTrait(var positionEtTrait : PositionEtTraitRec; whichMove : SInt32) : boolean;     external;
function NbPionsDeCetteCouleurApresCeCoup(var game : PackedThorGame; couleur,numeroCoup : SInt16; var typeErreur : SInt32) : SInt16;     external;
function PositionEtTraitAfterMoveNumber(var game : PackedThorGame; numeroCoup : SInt32; var typeErreur : SInt32) : PositionEtTraitRec;     external;
function WriteBufferDansFichierTexte(var fic : FichierTEXT; buffPtr : Ptr; var count : SInt32) : OSErr;     external;
  procedure SafeSetCursor(myCursor : CursHandle);     external;
function GetPartieRecordParNroRefPartie(nroReference : SInt32) : t_PartieRecNouveauFormat;     external;
function PartieEstActiveEtSelectionnee(nroReferencePartie : SInt32) : boolean;     external;
procedure ExtraitPartieTableStockageParties(nroReference : SInt32; var partieStr : PackedThorGame);     external;
procedure TraductionThorEnAlphanumerique(const s : PackedThorGame; var result : String255);     external;
function EstUnePartieOthello(var s : String255; compacterPartie : boolean) : boolean;     external;
procedure RemettreLeCurseurNormalDeCassio;     external;
procedure AlerteSimple(texte : String255);     external;
procedure BeginDialog;     external;
  procedure SetNameOfSFReply(var reply : SFReply; const name : String255);     external;
function MakeFileName(var reply : SFReply; prompt : String255; var whichSpec : fileInfo) : boolean;     external;
procedure EndDialog;     external;
function FichierTexteExisteFSp(mySpec : fileInfo; var fic : FichierTEXT) : OSErr;     external;
function CreeFichierTexteFSp(mySpec : fileInfo; var fic : FichierTEXT) : OSErr;     external;
function SetEOFFichierTexte(var fic : FichierTEXT; posEOF : SInt32) : OSErr;     external;
procedure DoTrierListe(critereDeTri,algorithmeDeTri : SInt32);     external;
function GetAnneePartieParNroRefPartie(nroReference : SInt32) : SInt16;     external;
