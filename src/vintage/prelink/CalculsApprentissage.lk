	function Min (a, b: SInt32) : SInt32;     external;
	function Max (a, b: SInt32) : SInt32;     external;
procedure WritelnDansRapport(s : String255);     external;
procedure WriteDansRapport(s : String255);     external;
procedure WritelnNumDansRapport(s : String255; num : SInt32);     external;
procedure WriteNumDansRapport(s : String255; num : SInt32);     external;
procedure WritelnStringAndBoolDansRapport(s : String255; b : boolean);     external;
procedure WriteStringAndBoolDansRapport(s : String255; b : boolean);     external;
procedure WritelnStringAndBooleenDansRapport(s : String255; b : boolean);     external;
procedure WriteStringAndBooleenDansRapport(s : String255; b : boolean);     external;
procedure WritelnStringAndBooleanDansRapport(s : String255; b : boolean);     external;
procedure WriteStringAndBooleanDansRapport(s : String255; b : boolean);     external;
procedure WritelnDansRapportThreadSafe(s : String255);     external;
procedure LitCellule(var fichier : Graphe; numCellule : SInt32; var cellule : CelluleRec);     external;
function HasFils(var cellule : CelluleRec) : boolean;     external;
function GetFils(var cellule : CelluleRec) : SInt32;     external;
procedure LitEnsembleDesFils(var fichier : Graphe; numCellule : SInt32; var LesFils : ListeDeCellules);     external;
function GetValeurMinimax(var cellule : CelluleRec) : SInt16;     external;
function GetCouleur(var cellule : CelluleRec) : SInt16;     external;
procedure SetValeurMinimax(var cellule : CelluleRec; val : SInt16);     external;
procedure EcritCellule(var fichier : Graphe; numCellule : SInt32; var cellule : CelluleRec);     external;
function GetValeurDeviante(var cellule : CelluleRec; couleur : SInt16) : SInt16;     external;
function EstDansT(var cellule : CelluleRec) : boolean;     external;
procedure RaiseError(message : String255);     external;
procedure SetValeurDeviante(var cellule : CelluleRec; couleur : SInt16; val : SInt16);     external;
procedure LitOrbite(var fichier : Graphe; numCellule : SInt32; var orbite : ListeDeCellules);     external;
procedure LitEnsembleDesPeres(var fichier : Graphe; numCellule : SInt32; var Peres : ListeDeCellules);     external;
function AllocatePile(tailleDemandee : SInt32; var ok : boolean) : Pile;     external;
procedure Empiler(var whichPile : Pile; element : SInt32; var ok : boolean);     external;
function FileEstVide(whichPile : Pile) : boolean;     external;
function Defiler(var whichPile : Pile; var ok : boolean) : SInt32;     external;
procedure EmpilerSiPasDansPile(var whichPile : Pile; element : SInt32; var ok : boolean);     external;
procedure DisposePile(var whichPile : Pile);     external;
function GetTrait(var cellule : CelluleRec) : SInt16;     external;
function GetNiemeCoupDansListe(var fichier : Graphe; var L : ListeDeCellules; n : SInt16) : SInt16;     external;
function GetProofNumber(var cellule : CelluleRec; couleur : SInt16) : SInt16;     external;
function GetDisproofNumber(var cellule : CelluleRec; couleur : SInt16) : SInt16;     external;
function GetEsperanceDeGain(var cellule : CelluleRec; couleur : SInt16) : double_t;     external;
function EstUnePropositionHeuristique(var cellule : CelluleRec) : boolean;     external;
function GetFrere(var cellule : CelluleRec) : SInt32;     external;
function RepareListeDesFreres(var fichier : Graphe; numCellule : SInt32; var listeDesFreresReparee : ListeDeCellules; const fonctionAppelante : String255) : OSErr;     external;
function GrapheApprentissageExiste(var nomDuGraphe : String255; var fichier : Graphe; var grapheEtaitDejaOuvert : boolean) : boolean;     external;
procedure TraductionAlphanumeriqueEnThor(const s : String255; var result : PackedThorGame);     external;
function PositionEstDansLeGraphe(var fichier : Graphe; chemin60 : PackedThorGame; var suiteDesCellules : ListeDeCellules) : boolean;     external;
  function UneChanceSur(N : SInt32) : boolean;     external;
  function PChancesSurN(P,N : SInt32) : boolean;     external;
function AuMoinsUnFils(var fichier : Graphe; numCellule : SInt32) : boolean;     external;
function FermeGrapheApprentissage(var fichier : Graphe) : boolean;     external;
