	function Min (a, b: SInt32) : SInt32;     external;
	function Max (a, b: SInt32) : SInt32;     external;
	procedure AttendFrappeClavier;     external;
procedure WritelnDansRapport(s : String255);     external;
procedure WriteDansRapport(s : String255);     external;
procedure WritelnNumDansRapport(s : String255; num : SInt32);     external;
procedure WriteNumDansRapport(s : String255; num : SInt32);     external;
procedure WritelnStringAndBoolDansRapport(s : String255; b : boolean);     external;
procedure WriteStringAndBoolDansRapport(s : String255; b : boolean);     external;
procedure WritelnStringAndBooleenDansRapport(s : String255; b : boolean);     external;
procedure WriteStringAndBooleenDansRapport(s : String255; b : boolean);     external;
procedure WritelnStringAndBooleanDansRapport(s : String255; b : boolean);     external;
procedure WriteStringAndBooleanDansRapport(s : String255; b : boolean);     external;
procedure WritelnDansRapportThreadSafe(s : String255);     external;
function CassioEstEnModeTournoi : boolean;     external;
function GetNiemeCoupPartieCourante(numeroDuCoup : SInt32) : SInt32;     external;
procedure RetirerZebraBookOption(mask : SInt32);     external;
procedure EffaceAideDebutant(avecDessinAutresInfosSurLesCases,effacageLarge : boolean; surQuellesCases : SquareSet; fonctionAppelante : String255);     external;
procedure ViderNotesSurCases(origine : SInt32; effacer : boolean; surQuellesCases : SquareSet);     external;
function GetAvecAffichageNotesSurCases(origine : SInt32) : boolean;     external;
function CoupsLegauxEnSquareSet : SquareSet;     external;
function GetCouleurNiemeCoupPartieCourante(numeroDuCoup : SInt32) : SInt32;     external;
function AQuiDeJouer : SInt32;     external;
procedure DealWithEssai(whichSquare : SInt16; const position : PositionEtTraitRec; const fonctionAppelante : String255);     external;
function PositionEtTraitCourant : PositionEtTraitRec;     external;
procedure EffaceMeilleureSuiteSiNecessaire;     external;
function CassioEstEnModeSolitaire : boolean;     external;
procedure EcritCommentaireSolitaire;     external;
procedure LanceInterruptionSimpleConditionnelle(const fonctionAppelante : String255);     external;
procedure LanceInterruptionConditionnelle(typeInterruption : SInt16; const message : String255; value : SInt32; const fonctionAppelante : String255);     external;
function CalculePhasePartie(numeroCoup : SInt16) : SInt16;     external;
procedure FixeMarqueSurMenuMode(n : SInt16);     external;
procedure EssaieDisableForceCmd;     external;
procedure Heure(couleur : SInt16);     external;
procedure FlushWindow(theWindow : WindowRef);     external;
procedure AjusteCurseur;     external;
procedure EngineNewPosition;     external;
procedure SetPortByWindow(window : WindowPtr);     external;
procedure EffaceProprietesOfCurrentNode;     external;
function DerniereCaseJouee : SInt32;     external;
  function InRange(n, minimum, maximum : SInt32) : boolean;     external;
procedure EffaceNumeroCoup(square,n : SInt16; whichNode : GameTree);     external;
function GetCurrentNode : GameTree;     external;
function GetCouleurDernierCoup : SInt32;     external;
procedure DessinePion(square,valeurPion : SInt16);     external;
function ChangeCurrentNodeAfterNewMove(square,couleur : SInt16; const fonctionAppelante : String255) : OSErr;     external;
procedure MarquerCurrentNodeCommeReel(const fonctionAppelante : String255);     external;
function UpdateJeuCourant(whichMove : SInt32) : boolean;     external;
function GetCouleurOfSquareDansJeuCourant(whichSquare : SInt32) : SInt32;     external;
procedure TraceSegmentCourbe(numeroDuCoup : SInt32; coloration : typeColorationCourbe; fonctionAppelante : String255);     external;
procedure DessineSliderFenetreCourbe;     external;
procedure InitialiseDirectionsJouables;     external;
procedure CarteJouable(const plat : plateauOthello; var carte : plBool);     external;
function JeuCourant : plateauOthello;     external;
procedure TachesUsuellesPourGameOver;     external;
procedure MetTitreFenetrePlateau;     external;
function EnVieille3D : boolean;     external;
procedure Dessine3D(const position : plateauOthello; avecBruitage : boolean);     external;
procedure DessineNumeroCoup(square,n,couleurDesChiffres : SInt16; whichNode : GameTree);     external;
function EnModeEntreeTranscript : boolean;     external;
procedure EntrerPartieDansCurrentTranscript(jusqueQuelCoup : SInt16);     external;
procedure EcritLesInfosDApprentissage;     external;
procedure EnableItemPourCassio(whichMenu : MenuRef; whichItem : SInt16);     external;
procedure CarteMove(coul : SInt32; const plat : plateauOthello; var carte : plBool; var mobilite : SInt32);     external;
procedure CarteFrontiere(const plat : plateauOthello; var front : InfoFront);     external;
procedure Initialise_table_heuristique(jeu : plateauOthello; debug : boolean);     external;
procedure AfficheScore;     external;
procedure MyDisableItem(theMenu : MenuRef; item: MenuItemIndex);     external;
procedure AfficheDemandeCoup;     external;
procedure TraiteInterruptionBrutale(var coup,reponse : SInt32; fonctionAppelante : String255);     external;
procedure SetCoupEntete(square : SInt16);     external;
procedure AddRandomDeltaStoneToCurrentNode;     external;
procedure LanceDemandeAffichageZebraBook(const fonctionAppelante : String255);     external;
procedure AfficheProprietesOfCurrentNode(dessinerAideDebutantSiNecessaire : boolean; surQuellesCases : SquareSet; const fonctionAppelante : String255);     external;
function DoitAfficherBibliotheque : boolean;     external;
procedure EcritCoupsBibliotheque(surQuellesCases : SquareSet);     external;
procedure LanceCalculsRapidesPourBaseOuNouvelleDemande(infosDejaCalculees,withCheckEvent : boolean);     external;
procedure PartagerLeTempsMachineAvecLesAutresProcess(WNESleep : SInt32);     external;
procedure PlayZamfirSound(const fonctionAppelante : String255);     external;
function RetournementSpecialEnCours : boolean;     external;
function ValeurFutureDeCetteCaseDansRetournementSpecial(whichSquare : SInt32) : SInt32;     external;
procedure SetJeuCourant(jeu : plateauOthello; trait : SInt32);     external;
procedure ChangeCurrentNodeForBackMove;     external;
function LiveUndoEnCours : boolean;     external;
procedure EffaceCourbe(n,nfin : SInt32; coloration : typeColorationCourbe; fonctionAppelante : String255);     external;
function LiveUndoVaRejouerImmediatementUnAutreCoup : boolean;     external;
procedure GetNumerosPremiereEtDernierePartiesAffichees(var premierNumero,derniernumero : SInt32);     external;
procedure ExtraitPartieTableStockageParties(nroReference : SInt32; var partieStr : PackedThorGame);     external;
function PACKED_GAME_IS_A_DIAGONAL(const whichGame : PackedThorGame) : boolean;     external;
procedure ExtraitPremierCoup(var premierCoup : SInt16; var autreCoupQuatreDiag : boolean);     external;
procedure TransposePartiePourOrientation(var partie60 : PackedThorGame; autreCoupQuatreDiagonal : boolean; minCoupTranspose,maxCoupTranspose : SInt32);     external;
function PositionsSontEgales(const pos1,pos2 : plateauOthello) : boolean;     external;
function CalculePositionApres(numero : SInt16; partie60 : PackedThorGame) : plateauOthello;     external;
function TrouveSymetrieEgalisante(whichPos : plateauOthello; numeroCoup : SInt16; var s60 : PackedThorGame; var axe : SInt16) : boolean;     external;
procedure InvalidateNombrePartiesActivesDansLeCache(quelNroCoup : SInt16);     external;
function CaseSymetrique(whichSquare : SInt16; axeSymetrie : SInt32) : SInt16;     external;
function PartieDansLaListeIdentiqueAPartieCourante(nroReferencePartie, numeroDuCoup : SInt32; autreCoupQuatreDiagonal : boolean) : boolean;     external;
procedure SetCassioMustCheckDangerousEvents(newvalue : boolean; oldValue : BooleanPtr);     external;
procedure FILL_PACKED_GAME_WITH_ZEROS(var game : PackedThorGame);     external;
procedure SET_LENGTH_OF_PACKED_GAME(var whichGame : PackedThorGame; whichLength : UInt8);     external;
procedure MemoryFillChar(bufferPtr : universal UnivPtr; byteCount: SInt32; caractere : char);     external;
procedure SetPositionInitialeStandardDansGameTree;     external;
procedure SetCurrentNodeToGameRoot;     external;
function PeutJouerIci(couleur,a : SInt32; const plat : plateauOthello) : boolean;     external;
function JoueEnFictif(a,couleur : SInt16; JeuCourantFictif : plateauOthello; EmplJouableFictif : plBool; FrontiereCouranteFictive : InfoFront; nbBlancFictif,nbNoirFictif : SInt16; nbreCoupFictif : SInt16; doitAvancerDansArbreDeJeu : boolean; prendreMainVariationFromArbre : boolean; const fonctionAppelante : String255) : OSErr;     external;
function ModifPlat(a,coul : SInt32; var jeu : plateauOthello; var jouable : plBool; var nbbl,nbno : SInt32; var front : InfoFront) : boolean;     external;
procedure EffaceProprietes(G : GameTree);     external;
procedure EffacerTouteLaCourbe(fonctionAppelante : String255);     external;
procedure DessineCourbe(coloration : typeColorationCourbe; fonctionAppelante : String255);     external;
procedure DessineBoiteDeTaille(whichWindow : WindowPtr);     external;
procedure DoChangeCurrentNodeBackwardUntil(G : GameTree);     external;
procedure JoueCoupPartieSelectionnee(nroHilite : SInt32);     external;
function CassioEstEn3D : boolean;     external;
procedure DessineGarnitureAutourOthellierPourEcranStandard;     external;
procedure EcranStandard(clipRegion : RgnHandle; forcedErase : boolean);     external;
procedure DoChangeHumCtreHum;     external;
procedure InvalidateEvaluationPourCourbe(nroCoupMin,nroCoupMax : SInt32);     external;
procedure NoUpdateWindowPlateau;     external;
procedure DoDebut(ForceHumCtreHum : boolean);     external;
function CassioEstEnModeAnalyse : boolean;     external;
function  CoupSuivantPartieSelectionnee(nroHilite : SInt32) : SInt16;     external;
function GetNombreDePartiesActivesDansLeCachePourCeCoup(numeroDuCoup : SInt32) : SInt32;     external;
procedure EssaieSetPortWindowPlateau;     external;
  procedure WriteNumAt(s : String255; num : SInt32; h,v : SInt32);     external;
function PeutArreterAnalyseRetrograde : boolean;     external;
procedure BeginLiveUndo(coupsProteges : SquareSet; nbreDeTicksDeDelai : SInt32);     external;
function GetEnsembleDesCoupsDesFreresReels(G : GameTree) : SquareSet;     external;
