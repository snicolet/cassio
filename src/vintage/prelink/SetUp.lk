	function Min (a, b: SInt32) : SInt32;     external;
	function Max (a, b: SInt32) : SInt32;     external;
	procedure AttendFrappeClavier;     external;
procedure WritelnDansRapport(s : String255);     external;
procedure WriteDansRapport(s : String255);     external;
procedure WritelnNumDansRapport(s : String255; num : SInt32);     external;
procedure WriteNumDansRapport(s : String255; num : SInt32);     external;
procedure WritelnStringAndBoolDansRapport(s : String255; b : boolean);     external;
procedure WriteStringAndBoolDansRapport(s : String255; b : boolean);     external;
procedure WritelnStringAndBooleenDansRapport(s : String255; b : boolean);     external;
procedure WriteStringAndBooleenDansRapport(s : String255; b : boolean);     external;
procedure WritelnStringAndBooleanDansRapport(s : String255; b : boolean);     external;
procedure WriteStringAndBooleanDansRapport(s : String255; b : boolean);     external;
procedure WritelnDansRapportThreadSafe(s : String255);     external;
procedure ViderNotesSurCases(origine : SInt32; effacer : boolean; surQuellesCases : SquareSet);     external;
procedure InvalidateDessinEnTraceDeRayon(square : SInt16);     external;
function DerniereCaseJouee : SInt32;     external;
procedure ReInitialisePartieHdlPourNouvellePartie(DetruitArbreDeJeu : boolean);     external;
procedure SetMeilleureSuite(s : String255);     external;
procedure ViderValeursDeLaCourbe;     external;
function CalculePhasePartie(numeroCoup : SInt16) : SInt16;     external;
procedure MyDisableItem(theMenu : MenuRef; item: MenuItemIndex);     external;
procedure FixeMarqueSurMenuMode(n : SInt16);     external;
procedure CarteJouable(const plat : plateauOthello; var carte : plBool);     external;
procedure SetJeuCourant(jeu : plateauOthello; trait : SInt32);     external;
procedure SetCoupEntete(square : SInt16);     external;
function AQuiDeJouer : SInt32;     external;
procedure EffaceMeilleureSuite;     external;
procedure MetTitreFenetrePlateau;     external;
procedure InvalidateAnalyseDeFinaleSiNecessaire(mode : InvalidateMode);     external;
procedure EffaceProprietesOfCurrentNode;     external;
procedure SetPositionInitialeOfGameTree(position : plateauOthello; trait,nbBlancs,nbNoirs : SInt16);     external;
function JeuCourant : plateauOthello;     external;
procedure AddInfosStandardsFormatSGFDansArbre;     external;
procedure AjouteDescriptionPositionEtTraitACeNoeud(description : PositionEtTraitRec; G : GameTree);     external;
function PositionEtTraitCourant : PositionEtTraitRec;     external;
function GetRacineDeLaPartie : GameTree;     external;
procedure CarteMove(coul : SInt32; const plat : plateauOthello; var carte : plBool; var mobilite : SInt32);     external;
procedure CarteFrontiere(const plat : plateauOthello; var front : InfoFront);     external;
procedure Initialise_table_heuristique(jeu : plateauOthello; debug : boolean);     external;
procedure LanceInterruptionSimpleConditionnelle(const fonctionAppelante : String255);     external;
procedure LanceInterruptionConditionnelle(typeInterruption : SInt16; const message : String255; value : SInt32; const fonctionAppelante : String255);     external;
function EstLaPositionStandardDeDepart(const plat : plateauOthello) : boolean;     external;
procedure MemoryFillChar(bufferPtr : universal UnivPtr; byteCount: SInt32; caractere : char);     external;
procedure VideMeilleureSuiteInfos;     external;
procedure LireBibliothequeDeZebraPourCurrentNode(const fonctionAppelante : String255);     external;
procedure EssaieDisableForceCmd;     external;
procedure EcranStandard(clipRegion : RgnHandle; forcedErase : boolean);     external;
procedure NoUpdateWindowPlateau;     external;
procedure LanceCalculsRapidesPourBaseOuNouvelleDemande(infosDejaCalculees,withCheckEvent : boolean);     external;
procedure EffacerTouteLaCourbe(fonctionAppelante : String255);     external;
procedure DessineCourbe(coloration : typeColorationCourbe; fonctionAppelante : String255);     external;
procedure DessineSliderFenetreCourbe;     external;
procedure DessineBoiteDeTaille(whichWindow : WindowPtr);     external;
procedure AjusteCurseur;     external;
procedure RefletePositionCouranteDansPictureIconisation;     external;
procedure SetCassioMustCheckDangerousEvents(newvalue : boolean; oldValue : BooleanPtr);     external;
function EstLaPositionInitialeDeLaPartieEnCours(var whichPos : PositionEtTraitRec) : boolean;     external;
function GetTraitOfPosition(var position : PositionEtTraitRec) : SInt32;     external;
function NbCasesVidesDansPosition(var position : plateauOthello) : SInt32;     external;
procedure RejouePartieOthello(s : String255; coupMax : SInt16; positionDepartStandart : boolean; platImpose : plateauOthello; traitImpose : SInt16; var gameNodeLePlusProfondGenere : GameTree; peutDetruireArbreDeJeu : boolean; avecNomsOuvertureDansArbre : boolean);     external;
procedure PlaquerPositionEtPartieLegaleDansOthellierDeGauche(position : PositionEtTraitRec; partiePlaquee : String255);     external;
function PositionEtTraitInitiauxStandard : PositionEtTraitRec;     external;
procedure TachesUsuellesPourAffichageCourant;     external;
procedure DoChangeAfficheDernierCoup;     external;
procedure EraseRectDansWindowPlateau(whichRect : rect);     external;
function CassioEstEn3D : boolean;     external;
procedure DessineBordureDuPlateau2D(quellesBordures : SInt32);     external;
procedure DessinePion(square,valeurPion : SInt16);     external;
function GetValeurDessinEnTraceDeRayon(square : SInt16) : SInt16;     external;
	function MakePoint(h,v : SInt32) : Point;     external;
function GetBoundingRect3D(whichSquare : SInt16) : rect;     external;
function GetTailleCaseCourante : SInt32;     external;
procedure SetValeurDessinEnTraceDeRayon(square,valeur : SInt16);     external;
function GetBoutonRectParControlManager(left,top,bottom,marge : SInt16; title : String255) : rect;     external;
procedure DessineBoutonParControlManager(buttonState : ThemeDrawState; left,top,bottom,marge : SInt16; title : String255; var boutonRect : rect);     external;
	function ReadStringFromRessource(stringListID, index : SInt16) : String255;     external;
function GetWindowPortRect(window : WindowPtr) : rect;     external;
	function MakeRect(left, top, right, bottom : SInt32) : Rect;     external;
procedure SetPortByWindow(window : WindowPtr);     external;
procedure DessinePlateau3D(avecDessinFondNoir : boolean);     external;
procedure DessinePlateau2D(cases,tailleCase : SInt16; HG_h,HG_v : SInt16; avecDessinFondNoir : boolean);     external;
function AppuieBoutonParControlManager(titre : String255; boutonRect : rect; marge : SInt16; mouseLoc : Point) : boolean;     external;
function GetWindowVisibleRegion(theWindow : WindowRef; visible : RgnHandle) : RgnHandle;     external;
procedure DoGrowWindow(thisWindow : WindowPtr; event : eventRecord);     external;
function  PtInPlateau(loc : Point; var caseCliquee : SInt16) : boolean;     external;
  procedure ShareTimeWithOtherProcesses(quantity : SInt32);     external;
function PeutArreterAnalyseRetrograde : boolean;     external;
function VerificationConnexiteOK(jeu : plateauOthello) : boolean;     external;
function VerificationNbreMinimalDePions(jeu : plateauOthello; nbreMinimalDePions : SInt32) : boolean;     external;
function DoitPasser(coul : SInt32; const plat : plateauOthello; var jouable : plBool) : boolean;     external;
procedure Superviseur(n : SInt16);     external;
procedure Calcule_Valeurs_Tactiques(plat : plateauOthello; avecCalculCentre : boolean);     external;
function Evaluation(var position : plateauOthello; coulEvaluation,nbBlancs,nbNoirs : SInt32; var jouable : plBool; var front : InfoFront; afraidOfWipeOut : boolean; alpha,beta : SInt32; var nbEvaluationsRecursives : SInt32) : SInt32;     external;
function NoteEnString(note : SInt32; avecSignePlus : boolean; nbEspacesDevant,nbDecimales : SInt16) : String255;     external;
	procedure DrawStringPourGNUPascal(const s : String255);     external;
procedure TraiteOneEvenement;     external;
procedure InvalidateAllCasesDessinEnTraceDeRayon;     external;
procedure EffaceReflexion(effacerAussiLeRuban : boolean);     external;
function GetCouleurOfSquareDansJeuCourant(whichSquare : SInt32) : SInt32;     external;
procedure AjusteSleep;     external;
function HasGotEvent(myEventMask : EventMask; var whichEvent : eventRecord; sleep : UInt32; mouseRgn : RgnHandle) : boolean;     external;
	procedure EmuleToucheCommandeParControleDansEvent(var myEvent : eventRecord);     external;
procedure IncrementeCompteurDeMouseEvents;     external;
procedure CheckStreamEvents;     external;
procedure EnvoyerUnKeepAliveSiNecessaire;     external;
procedure GererTelechargementWThor;     external;
procedure PrepareTexteStatePourHeure;     external;
procedure SetPositionPlateau2D(nbrecases,tailleCase : SInt16; HG_h,HG_v : SInt16; fonctionAppelante : String255);     external;
procedure SetPositionsTextesWindowPlateau;     external;
procedure PlaquerPosition(plat : plateauOthello; trait : SInt16; flags : SInt32);     external;
procedure PlaquerPositionEtPartie(position : PositionEtTraitRec; partieAlphaCompactee : String255; flags : SInt32);     external;
procedure PlaquerPartieLegale(partieAlphaCompactee : String255; flags : SInt32);     external;
