	function Min (a, b: SInt32) : SInt32;     external;
	function Max (a, b: SInt32) : SInt32;     external;
	procedure AttendFrappeClavier;     external;
procedure WritelnDansRapport(s : String255);     external;
procedure WriteDansRapport(s : String255);     external;
procedure WritelnNumDansRapport(s : String255; num : SInt32);     external;
procedure WriteNumDansRapport(s : String255; num : SInt32);     external;
procedure WritelnStringAndBoolDansRapport(s : String255; b : boolean);     external;
procedure WriteStringAndBoolDansRapport(s : String255; b : boolean);     external;
procedure WritelnStringAndBooleenDansRapport(s : String255; b : boolean);     external;
procedure WriteStringAndBooleenDansRapport(s : String255; b : boolean);     external;
procedure WritelnStringAndBooleanDansRapport(s : String255; b : boolean);     external;
procedure WriteStringAndBooleanDansRapport(s : String255; b : boolean);     external;
procedure WritelnDansRapportThreadSafe(s : String255);     external;
procedure DessinePionSpecial(rectangle2D,dest : rect; quelleCase,valeurPion : SInt16; texte : String255; use3D : boolean);     external;
procedure AlerteSimple(texte : String255);     external;
  procedure DessineFleche(source,dest : Point; longueur_max_pointe : double);     external;
	function CentreDuRectangle(theRect : rect) : Point;     external;
	procedure DessineLigne(source,dest : Point);     external;
function GetPackedSquareSetOfProperty(prop : Property) : PackedSquareSet;     external;
function SquareInPackedSquareSet(whichSquare : SInt16; whichSet : PackedSquareSet) : boolean;     external;
function JeuCourant : plateauOthello;     external;
function GetRectOfSquare2DDansAireDeJeu(whichSquare,QuelGenreDeMarque : SInt16) : rect;     external;
function CassioEstEn3D : boolean;     external;
function GetRectAreteVisiblePion3DPourPionDelta(x,QuelGenreDeMarque : SInt16) : rect;     external;
function GetRectPionDessous3DPourPionDelta(x,QuelGenreDeMarque : SInt16) : rect;     external;
procedure InvalidateDessinEnTraceDeRayon(square : SInt16);     external;
procedure SetOthellierEstSale(square : SInt16; flag : boolean);     external;
function GetOthelloSquareOfProperty(prop : Property) : SInt16;     external;
function GetOthelloSquareOfPropertyAlpha(prop : Property) : SInt16;     external;
procedure GetSquareCoupleOfProperty(prop : Property; var square1,square2 : SInt16);     external;
procedure ForEachPropertyOfTheseTypesInNodeDo(G : GameTree; whichTypes : SetOfPropertyTypes ; DoWhat : PropertyProc);     external;
function GetCurrentNode : GameTree;     external;
procedure ForEachPropertyOfTheseTypesInNodeDoAvecResult(G : GameTree; whichTypes : SetOfPropertyTypes ; DoWhat : PropertyProcAvecResult; var result : SInt32);     external;
procedure SetPortByWindow(window : WindowPtr);     external;
function GetCouleurOfSquareDansJeuCourant(whichSquare : SInt32) : SInt32;     external;
procedure DessinePion3D(x,coul : SInt16);     external;
procedure DessinePion2D(square,valeurPion : SInt16);     external;
procedure DessineDessusPion3D(x,coul : SInt16);     external;
procedure ForEachSquareInPackedSetDo(ensemble : PackedSquareSet ; DoWhat : SquareSetIteratorProc);     external;
  function SegmentIntersecteRect(M1,M2 : Point; theRect : rect) : boolean;     external;
function GetBoundingRectOfSquare(whichSquare : SInt16) : rect;     external;
  function RandomEntreBornes(a, b : SInt16) : SInt16;     external;
function MakeSquareSetProperty(whichType : SInt16; whichSet : SquareSet) : Property;     external;
procedure AddPropertyToCurrentNode(prop : Property);     external;
procedure DisposePropertyStuff(var p : Property);     external;
function ExistsInPropertyList(prop : Property; L : PropertyList) : boolean;     external;
procedure AddPropertyToList(prop : Property; var L : PropertyList);     external;
procedure DeletePropertyFromList(prop : Property; var L : PropertyList);     external;
function InPropertyTypes(whichGenre : SInt16; whichSet : SetOfPropertyTypes) : boolean;     external;
function  PtInPlateau(loc : Point; var caseCliquee : SInt16) : boolean;     external;
	function NewMenuFlottant(whichID : SInt32; whichrect : Rect; whichItem : SInt16) : MenuFlottantRec;     external;
	function MakeRect(left, top, right, bottom : SInt32) : Rect;     external;
	procedure InstalleMenuFlottant(var whichMenuFlottant : MenuFlottantRec; whichWindow : WindowPtr);     external;
procedure GetPropertyListOfCurrentNode(var L : PropertyList);     external;
function GetTypesOfPropertyOnthatSquare(whichSquare : SInt16; L : PropertyList) : SetOfPropertyTypes;     external;
procedure WritelnStringAndPropertyListDansRapport(s : String255; L : PropertyList);     external;
function PeutJouerIci(couleur,a : SInt32; const plat : plateauOthello) : boolean;     external;
function AQuiDeJouer : SInt32;     external;
function ChangeCurrentNodeAfterThisMove(square,couleur : SInt16; const fonctionAppelante : String255; var isNew : boolean) : OSErr;     external;
procedure MarquerCeNoeudCommeVirtuel(G : GameTree);     external;
procedure SetCurrentNode(G : GameTree; const fonctionAppelante : String255);     external;
function CalculatePropertyTypes(L : PropertyList) : SetOfPropertyTypes;     external;
function  MyCountMenuItems(theMenu : MenuRef) : UInt16;     external;
procedure MyDisableItem(theMenu : MenuRef; item: MenuItemIndex);     external;
procedure MyCheckItem(theMenu : MenuRef; item: SInt16; checked: BOOLEAN);     external;
	function EventPopUpItemMenuFlottant(var whichMenuFlottant : MenuFlottantRec; drawChoice, checkChoiceBefore,checkChoiceAfter : Boolean) : boolean;     external;
procedure AjusteCurseur;     external;
procedure DeleteSonOfCurrentNode(var whichSon : GameTree);     external;
  procedure ShareTimeWithOtherProcesses(quantity : SInt32);     external;
function MakeSquareCoupleProperty(whichType : SInt16; whichSquare1,whichSquare2 : SInt16) : Property;     external;
function MakeEmptyProperty : Property;     external;
function MakeArgumentVideProperty(whichType : SInt16) : Property;     external;
	procedure DesinstalleMenuFlottant(var whichMenuFlottant : MenuFlottantRec);     external;
procedure SetPropertyListOfCurrentNode(L : PropertyList);     external;
  procedure PrintForEPSFile(s : String255);     external;
function CoupEnStringEnMajuscules(coup : SInt16) : String255;     external;
function PropertyToString(prop : Property) : String255;     external;
function GetStringInfoOfProperty(prop : Property) : String255;     external;
procedure SplitBy (s : String255; sub : char; var left, right: String255);     external;
function IsCriticalOrCrashingTree(G : GameTree) : boolean;     external;
procedure DoChangeAffichePierresDelta;     external;
