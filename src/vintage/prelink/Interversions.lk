	procedure AttendFrappeClavier;                                                                                                                                                     EXTERNAL_NAME('AttendFrappeClavier');
procedure WritelnDansRapport(s : String255);                                                                                                                                        EXTERNAL_NAME('WritelnDansRapport');
procedure WriteDansRapport(s : String255);                                                                                                                                          EXTERNAL_NAME('WriteDansRapport');
procedure WritelnNumDansRapport(s : String255; num : SInt32);                                                                                                                       EXTERNAL_NAME('WritelnNumDansRapport');
procedure WriteNumDansRapport(s : String255; num : SInt32);                                                                                                                         EXTERNAL_NAME('WriteNumDansRapport');
procedure WritelnStringAndBoolDansRapport(s : String255; b : boolean);                                                                                                              EXTERNAL_NAME('WritelnStringAndBoolDansRapport');
procedure WriteStringAndBoolDansRapport(s : String255; b : boolean);                                                                                                                EXTERNAL_NAME('WriteStringAndBoolDansRapport');
procedure WritelnStringAndBooleenDansRapport(s : String255; b : boolean);                                                                                                           EXTERNAL_NAME('WritelnStringAndBooleenDansRapport');
procedure WriteStringAndBooleenDansRapport(s : String255; b : boolean);                                                                                                             EXTERNAL_NAME('WriteStringAndBooleenDansRapport');
procedure WritelnStringAndBooleanDansRapport(s : String255; b : boolean);                                                                                                           EXTERNAL_NAME('WritelnStringAndBooleanDansRapport');
procedure WriteStringAndBooleanDansRapport(s : String255; b : boolean);                                                                                                             EXTERNAL_NAME('WriteStringAndBooleanDansRapport');
procedure WritelnDansRapportThreadSafe(s : String255);                                                                                                                              EXTERNAL_NAME('WritelnDansRapportThreadSafe');
function MakeEmptyPositionEtTraitSet : PositionEtTraitSet;                                                                                                                          EXTERNAL_NAME('MakeEmptyPositionEtTraitSet');
procedure DisposePositionEtTraitSet(var S : PositionEtTraitSet);                                                                                                                    EXTERNAL_NAME('DisposePositionEtTraitSet');
function CardinalOfPositionEtTraitSet(S : PositionEtTraitSet) : SInt32;                                                                                                             EXTERNAL_NAME('CardinalOfPositionEtTraitSet');
	function ReadStringFromRessource(stringListID, index : SInt16) : String255;                                                                                                        EXTERNAL_NAME('ReadStringFromRessource');
  procedure SetNameOfSFReply(var reply : SFReply; const name : String255);                                                                                                          EXTERNAL_NAME('SetNameOfSFReply');
function MakeFileName(var reply : SFReply; prompt : String255; var whichSpec : FSSpec) : boolean;                                                                                   EXTERNAL_NAME('MakeFileName');
	function GetNameOfSFReply(const reply : SFReply) : String255;                                                                                                                      EXTERNAL_NAME('GetNameOfSFReply');
function FichierTexteExisteFSp(mySpec : FSSpec; var fic : FichierTEXT) : OSErr;                                                                                                     EXTERNAL_NAME('FichierTexteExisteFSp');
	function MyMakeFSSpec(vrn : SInt16; dirID : SInt32; name : String255) : FSSpec;                                                                                                    EXTERNAL_NAME('MyMakeFSSpec');
function CreeFichierTexteFSp(mySpec : FSSpec; var fic : FichierTEXT) : OSErr;                                                                                                       EXTERNAL_NAME('CreeFichierTexteFSp');
function OuvreFichierTexte(var fic : FichierTEXT) : OSErr;                                                                                                                          EXTERNAL_NAME('OuvreFichierTexte');
function VideFichierTexte(var fic : FichierTEXT) : OSErr;                                                                                                                           EXTERNAL_NAME('VideFichierTexte');
procedure AlerteSimpleFichierTexte(nomFichier : String255; erreurES : SInt32);                                                                                                      EXTERNAL_NAME('AlerteSimpleFichierTexte');
function FermeFichierTexte(var fic : FichierTEXT) : OSErr;                                                                                                                          EXTERNAL_NAME('FermeFichierTexte');
procedure COPY_STR60_TO_PACKED_GAME(const s60 : String255; var result : PackedThorGame);                                                                                            EXTERNAL_NAME('COPY_STR60_TO_PACKED_GAME');
procedure TraductionThorEnAlphanumerique(const s : PackedThorGame; var result : String255);                                                                                         EXTERNAL_NAME('TraductionThorEnAlphanumerique');
function WriteDansFichierTexte(var fic : FichierTEXT; s : String255) : OSErr;                                                                                                       EXTERNAL_NAME('WriteDansFichierTexte');
function WritelnDansFichierTexte(var fic : FichierTEXT; s : String255) : OSErr;                                                                                                     EXTERNAL_NAME('WritelnDansFichierTexte');
procedure SetFileCreatorFichierTexte(var fic : FichierTEXT; quelType : OSType);                                                                                                     EXTERNAL_NAME('SetFileCreatorFichierTexte');
procedure SetFileTypeFichierTexte(var fic : FichierTEXT; quelType : OSType);                                                                                                        EXTERNAL_NAME('SetFileTypeFichierTexte');
  procedure WriteNumAt(s : String255; num : SInt32; h,v : SInt32);                                                                                                                  EXTERNAL_NAME('WriteNumAt');
  function NumEnString(num : SInt32) : String255;                                                                                                                                   EXTERNAL_NAME('NumEnString');
function PositionEtTraitInitiauxStandard : PositionEtTraitRec;                                                                                                                      EXTERNAL_NAME('PositionEtTraitInitiauxStandard');
function UpdatePositionEtTrait(var positionEtTrait : PositionEtTraitRec; whichMove : SInt32) : boolean;                                                                             EXTERNAL_NAME('UpdatePositionEtTrait');
function SamePositionEtTrait(var pos1,pos2 : PositionEtTraitRec) : boolean;                                                                                                         EXTERNAL_NAME('SamePositionEtTrait');
procedure SHORTEN_PACKED_GAME(var whichGame : PackedThorGame; whichLength : UInt8);                                                                                                 EXTERNAL_NAME('SHORTEN_PACKED_GAME');
procedure Normalisation(var partie120 : String255; var autreCoupQuatreDiag : boolean; interversions : boolean);                                                                     EXTERNAL_NAME('Normalisation');
procedure CalculePositionFinale(const ligne : String255; var plat : plateauOthello; var ligneLegale : boolean; var nbCoupsLegaux : SInt32);                                         EXTERNAL_NAME('CalculePositionFinale');
function PositionsEgales(var plat1,plat2 : plateauOthello) : boolean;                                                                                                               EXTERNAL_NAME('PositionsEgales');
procedure ApprendInterversionAlaVoleeDansGraphe(const ligne1,ligne2 : typePartiePourGraphe; annonceDansRapport : boolean);                                                          EXTERNAL_NAME('ApprendInterversionAlaVoleeDansGraphe');
function GetCurrentNode : GameTree;                                                                                                                                                 EXTERNAL_NAME('GetCurrentNode');
procedure AddTranspositionPropertyToCurrentNode(var texte : String255);                                                                                                             EXTERNAL_NAME('AddTranspositionPropertyToCurrentNode');
procedure AddTranspositionPropertyToGameTree(var texte : String255; var G : GameTree);                                                                                              EXTERNAL_NAME('AddTranspositionPropertyToGameTree');
procedure COPY_PACKED_GAME_TO_STR60(const game : PackedThorGame; var result60 : String255);                                                                                         EXTERNAL_NAME('COPY_PACKED_GAME_TO_STR60');
	function TPCopy (source : String255; start, count: SInt32) : String255;                                                                                                            EXTERNAL_NAME('TPCopy');
function EnModeEntreeTranscript : boolean;                                                                                                                                          EXTERNAL_NAME('EnModeEntreeTranscript');
procedure MyParamText( const (*var*) param0: String255; const (*var*) param1: String255; const (*var*) param2: String255; const (*var*) param3: String255 );                        EXTERNAL_NAME('MyParamText');
procedure DialogueSimple(dialogueID : SInt16{; s1,s2,s3,s4 : String255});                                                                                                           EXTERNAL_NAME('DialogueSimple');
procedure GetCurrentScript(var currentScript : SInt32);                                                                                                                             EXTERNAL_NAME('GetCurrentScript');
procedure DisableKeyboardScriptSwitch;                                                                                                                                              EXTERNAL_NAME('DisableKeyboardScriptSwitch');
procedure FinRapport;                                                                                                                                                               EXTERNAL_NAME('FinRapport');
procedure TextNormalDansRapport;                                                                                                                                                    EXTERNAL_NAME('TextNormalDansRapport');
procedure EnableKeyboardScriptSwitch;                                                                                                                                               EXTERNAL_NAME('EnableKeyboardScriptSwitch');
procedure SetCurrentScript(whichScript : SInt32);                                                                                                                                   EXTERNAL_NAME('SetCurrentScript');
procedure SwitchToRomanScript;                                                                                                                                                      EXTERNAL_NAME('SwitchToRomanScript');
procedure SetEcritToutDansRapportLog(flag : boolean);                                                                                                                               EXTERNAL_NAME('SetEcritToutDansRapportLog');
procedure TraductionAlphanumeriqueEnThor(const s : String255; var result : PackedThorGame);                                                                                         EXTERNAL_NAME('TraductionAlphanumeriqueEnThor');
function PileEstPleine(whichPile : Pile) : boolean;                                                                                                                                 EXTERNAL_NAME('PileEstPleine');
function GetTraitOfPosition(var position : PositionEtTraitRec) : SInt32;                                                                                                            EXTERNAL_NAME('GetTraitOfPosition');
function GenericHash(data : Ptr; tailleData : SInt32) : SInt32;                                                                                                                     EXTERNAL_NAME('GenericHash');
function ABRSearch(x : ABR; whichKey : ABRKey) : ABR;                                                                                                                               EXTERNAL_NAME('ABRSearch');
procedure AddPositionEtTraitToSet(var position : PositionEtTraitRec; data : SInt32; var S : PositionEtTraitSet);                                                                    EXTERNAL_NAME('AddPositionEtTraitToSet');
procedure Empiler(var whichPile : Pile; element : SInt32; var ok : boolean);                                                                                                        EXTERNAL_NAME('Empiler');
function NbElementsDansPile(whichPile : Pile) : SInt32;                                                                                                                             EXTERNAL_NAME('NbElementsDansPile');
function PileEstVide(whichPile : Pile) : boolean;                                                                                                                                   EXTERNAL_NAME('PileEstVide');
function PositionEtTraitSetEstVide(S : PositionEtTraitSet) : boolean;                                                                                                               EXTERNAL_NAME('PositionEtTraitSetEstVide');
function Depiler(var whichPile : Pile; var ok : boolean) : SInt32;                                                                                                                  EXTERNAL_NAME('Depiler');
procedure SupprimerDansABR(var arbre : ABR; var element : ABR);                                                                                                                     EXTERNAL_NAME('SupprimerDansABR');
function CoupEnStringEnMajuscules(coup : SInt16) : String255;                                                                                                                       EXTERNAL_NAME('CoupEnStringEnMajuscules');
procedure WriteStringDansRapport(s : String255);                                                                                                                                    EXTERNAL_NAME('WriteStringDansRapport');
function MemberOfPositionEtTraitSet(var position : PositionEtTraitRec; var data : SInt32; S : PositionEtTraitSet) : boolean;                                                        EXTERNAL_NAME('MemberOfPositionEtTraitSet');
procedure MemoryFillChar(bufferPtr : universal UnivPtr; byteCount: SInt32; caractere : char);                                                                                       EXTERNAL_NAME('MemoryFillChar');
function NbPionsDeCetteCouleurDansPosition(couleur : SInt32; var position : plateauOthello) : SInt32;                                                                               EXTERNAL_NAME('NbPionsDeCetteCouleurDansPosition');
function PositionDansStringAlphaEnCoup(const s : String255; positionDansChaine : SInt16) : SInt16;                                                                                  EXTERNAL_NAME('PositionDansStringAlphaEnCoup');
function ABRHauteur(x : ABR) : SInt32;                                                                                                                                              EXTERNAL_NAME('ABRHauteur');
procedure WritelnStringDansRapport(s : String255);                                                                                                                                  EXTERNAL_NAME('WritelnStringDansRapport');
function EstUnePartieOthello(var s : String255; compacterPartie : boolean) : boolean;                                                                                               EXTERNAL_NAME('EstUnePartieOthello');
function PositionEtTraitAfterMoveNumber(var game : PackedThorGame; numeroCoup : SInt32; var typeErreur : SInt32) : PositionEtTraitRec;                                              EXTERNAL_NAME('PositionEtTraitAfterMoveNumber');
function GetAutoVidageDuRapport : boolean;                                                                                                                                          EXTERNAL_NAME('GetAutoVidageDuRapport');
function GetEcritToutDansRapportLog : boolean;                                                                                                                                      EXTERNAL_NAME('GetEcritToutDansRapportLog');
procedure SetAutoVidageDuRapport(flag : boolean);                                                                                                                                   EXTERNAL_NAME('SetAutoVidageDuRapport');
function AllocatePile(tailleDemandee : SInt32; var ok : boolean) : Pile;                                                                                                            EXTERNAL_NAME('AllocatePile');
function StringEnCoup(const s : String255) : SInt16;                                                                                                                                EXTERNAL_NAME('StringEnCoup');
procedure DisposePile(var whichPile : Pile);                                                                                                                                        EXTERNAL_NAME('DisposePile');
function GameTreeHasStandardInitialPosition : boolean;                                                                                                                              EXTERNAL_NAME('GameTreeHasStandardInitialPosition');
function ExisteDansHashTableInterversions(var positionEtTrait : PositionEtTraitRec; var GameTreeInterversion : GameTree; var hashIndex : InterversionHashIndexRec) : boolean;       EXTERNAL_NAME('ExisteDansHashTableInterversions');
procedure MetDansHashTableInterversions(G : GameTree; var positionEtTrait : PositionEtTraitRec; hashIndex : InterversionHashIndexRec);                                              EXTERNAL_NAME('MetDansHashTableInterversions');
function CreatePartieEnAlphaJusqua(G : GameTree; var partieAlpha : String255; var positionTerminale : PositionEtTraitRec) : boolean;                                                EXTERNAL_NAME('CreatePartieEnAlphaJusqua');
procedure FusionOrbitesInterversions(var G1,G2 : GameTree);                                                                                                                         EXTERNAL_NAME('FusionOrbitesInterversions');
function CoupsDuCheminJusquauNoeudEnString(G : GameTree) : String255;                                                                                                               EXTERNAL_NAME('CoupsDuCheminJusquauNoeudEnString');
procedure SetNbCollisionsInterversions(n : SInt32);                                                                                                                                 EXTERNAL_NAME('SetNbCollisionsInterversions');
function GetNbCollisionsInterversions : SInt32;                                                                                                                                     EXTERNAL_NAME('GetNbCollisionsInterversions');
function GetPositionEtTraitACeNoeud(G : GameTree; var position : PositionEtTraitRec; const fonctionAppelante : String255) : boolean;                                                EXTERNAL_NAME('GetPositionEtTraitACeNoeud');
function SAME_PACKED_GAMES(const game1, game2 : PackedThorGame) : boolean;                                                                                                          EXTERNAL_NAME('SAME_PACKED_GAMES');
procedure ExtraitPremierCoup(var premierCoup : SInt16; var autreCoupQuatreDiag : boolean);                                                                                          EXTERNAL_NAME('ExtraitPremierCoup');
procedure AlerteSimple(texte : String255);                                                                                                                                          EXTERNAL_NAME('AlerteSimple');
function COMPARE_PACKED_GAMES(const game1, game2 : PackedThorGame) : SInt32;                                                                                                        EXTERNAL_NAME('COMPARE_PACKED_GAMES');
procedure GeneralQuickSort(lo,up : SInt32; lecture : LectureTableauProc; affectation : AffectationProc; ordre : OrdreProc);                                                         EXTERNAL_NAME('GeneralQuickSort');
function InterversionDansLeGrapheApprentissage(const whichGame : String255; listerInterDansRapport : boolean; tableLignes : TableParties60Ptr) : boolean;                           EXTERNAL_NAME('InterversionDansLeGrapheApprentissage');
procedure SymetriserPartieFormatThor(var s60 : PackedThorGame; axeSymetrie : SInt32; debut,fin : SInt32);                                                                           EXTERNAL_NAME('SymetriserPartieFormatThor');
procedure SetCassioMustCheckDangerousEvents(newvalue : boolean; oldValue : BooleanPtr);                                                                                             EXTERNAL_NAME('SetCassioMustCheckDangerousEvents');
function PositionEtTraitAfterMoveNumberAlpha(game : String255; numeroCoup : SInt32; var typeErreur : SInt32) : PositionEtTraitRec;                                                  EXTERNAL_NAME('PositionEtTraitAfterMoveNumberAlpha');
procedure RejouePartieOthello(s : String255; coupMax : SInt16; positionDepartStandart : boolean; platImpose : plateauOthello; traitImpose : SInt16; var gameNodeLePlusProfondGenere : GameTree; peutDetruireArbreDeJeu : boolean; avecNomsOuvertureDansArbre : boolean);      EXTERNAL_NAME('RejouePartieOthello');
function MakeCoupleLongintProperty(whichType : SInt16; whichLongint1,whichLongint2 : SInt32) : Property;                                                                            EXTERNAL_NAME('MakeCoupleLongintProperty');
procedure OverWritePropertyToGameTree(prop : Property; var G : GameTree; var changed : boolean);                                                                                    EXTERNAL_NAME('OverWritePropertyToGameTree');
procedure DisposePropertyStuff(var p : Property);                                                                                                                                   EXTERNAL_NAME('DisposePropertyStuff');
function GetAffichageProprietesOfCurrentNode : UInt32;                                                                                                                              EXTERNAL_NAME('GetAffichageProprietesOfCurrentNode');
procedure EffaceNoeudDansFenetreArbreDeJeu;                                                                                                                                         EXTERNAL_NAME('EffaceNoeudDansFenetreArbreDeJeu');
procedure LireBibliothequeDeZebraPourCurrentNode(const fonctionAppelante : String255);                                                                                              EXTERNAL_NAME('LireBibliothequeDeZebraPourCurrentNode');
procedure EcritCurrentNodeDansFenetreArbreDeJeu(avecEcritureDesFils, doitEffacerPremiereLigneDeLaFenetre : boolean);                                                                EXTERNAL_NAME('EcritCurrentNodeDansFenetreArbreDeJeu');
procedure WritelnPositionEtTraitDansRapport(const position : plateauOthello; trait : SInt32);                                                                                       EXTERNAL_NAME('WritelnPositionEtTraitDansRapport');
procedure MoveMemory(sourcePtr,destPtr: Ptr; byteCount: SInt32);                                                                                                                    EXTERNAL_NAME('MoveMemory');
function GET_ADRESS_OF_FIRST_MOVE(var whichGame : PackedThorGame) : Ptr;                                                                                                            EXTERNAL_NAME('GET_ADRESS_OF_FIRST_MOVE');
