	function Min (a, b: SInt32) : SInt32;     external;
	function Max (a, b: SInt32) : SInt32;     external;
procedure WritelnDansRapport(s : String255);     external;
procedure WriteDansRapport(s : String255);     external;
procedure WritelnNumDansRapport(s : String255; num : SInt32);     external;
procedure WriteNumDansRapport(s : String255; num : SInt32);     external;
procedure WritelnStringAndBoolDansRapport(s : String255; b : boolean);     external;
procedure WriteStringAndBoolDansRapport(s : String255; b : boolean);     external;
procedure WritelnStringAndBooleenDansRapport(s : String255; b : boolean);     external;
procedure WriteStringAndBooleenDansRapport(s : String255; b : boolean);     external;
procedure WritelnStringAndBooleanDansRapport(s : String255; b : boolean);     external;
procedure WriteStringAndBooleanDansRapport(s : String255; b : boolean);     external;
procedure WritelnDansRapportThreadSafe(s : String255);     external;
	function IsLower(ch : char) : boolean;     external;
  function CharInRange(ch : char; min,max : char) : boolean;     external;
function EstUnePartieOthelloAvecMiroir(var s : String255) : boolean;     external;
function PeutArreterAnalyseRetrograde : boolean;     external;
procedure PlaquerPartieLegale(partieAlphaCompactee : String255; flags : SInt32);     external;
function CassioEstEnModeAnalyse : boolean;     external;
procedure DoChangeHumCtreHum;     external;
function AllocateMemoryHdl(whichSize : SInt32) : handle;     external;
function MyGetScrap(destination: Handle; flavorType : ScrapFlavorType; VAR offset : SInt32) : SInt32;     external;
procedure AlerteSimple(texte : String255);     external;
procedure DisposeMemoryHdl(var whichHandle : handle);     external;
	procedure RandomizeTimer;     external;
  function RandomLongint : SInt32;     external;
function CreeFichierTexteDeCassio(nom : String255; var fic : basicfile) : OSErr;     external;
function OpenFile(var fic : basicfile) : OSErr;     external;
function Write(var fic : basicfile; buffPtr : Ptr; var count : SInt32) : OSErr;     external;
function CloseFile(var fic : basicfile) : OSErr;     external;
function MyZeroScrap : OSStatus;     external;
function MyPutScrap(sourceBufferByteCount : SInt32; flavorType: ScrapFlavorType; sourceBuffer: UnivPtr) : OSStatus;     external;
function PositionEtTraitCourant : PositionEtTraitRec;     external;
function PositionEtTraitEnString(var positionEtTrait : PositionEtTraitRec) : String255;     external;
procedure FinRapport;     external;
function GetTailleRapport : SInt32;     external;
function CreateStandardOutputAsFile(var fic : basicfile) : OSErr;     external;
function MakeFichierAbstraitFichier(nomFichier : String255 ; vRefNum : SInt16) : FichierAbstrait;     external;
function FichierAbstraitEstCorrect(const theFile : FichierAbstrait) : boolean;     external;
function WritePositionEtTraitPageWebFFODansFichierAbstrait(position : PositionEtTraitRec; legende : String255; var theFile : FichierAbstrait) : OSErr;     external;
procedure DisposeFichierAbstrait(var theFile : FichierAbstrait);     external;
procedure SetDebutSelectionRapport(debut : SInt32);     external;
procedure SetFinSelectionRapport(fin : SInt32);     external;
function CopierFromRapport : boolean;     external;
function EvaluationPourCourbeProvientDeLaFinale(nroDuCoup : SInt32) : boolean;     external;
function GetEvaluationPourNoirDansCourbe(nroDuCoup : SInt32) : SInt32;     external;
function CoupEnStringEnMajuscules(coup : SInt16) : String255;     external;
  function ReelEnStringAvecDecimales(unreel : double; nbChiffresSignificatifs : SInt16) : String255;     external;
function GetScrapSize(flavor : ScrapFlavorType) : SInt32;     external;
function GetNiemeCoupPartieCourante(numeroDuCoup : SInt32) : SInt32;     external;
procedure GetPositionInitialeOfGameTree(var position : plateauOthello; var numeroPremierCoup,trait,nbBlancs,nbNoirs : SInt32);     external;
function GetCouleurOfSquareDansJeuCourant(whichSquare : SInt32) : SInt32;     external;
procedure MemoryFillChar(bufferPtr : universal UnivPtr; byteCount: SInt32; caractere : char);     external;
function GetScrapFlavors(var count : UInt32; var flavors : String255) : OSStatus;     external;
function GetFileSize(var fic : basicfile; var taille : SInt32) : OSErr;     external;
function AllocateMemoryPtr(whichSize : SInt32) : Ptr;     external;
procedure DisposeMemoryPtr(var whichPtr : Ptr);     external;
function FichierTexteDeCassioExiste(nom : String255; var fic : basicfile) : OSErr;     external;
function Read(var fic : basicfile; buffPtr : Ptr; var count : SInt32) : OSErr;     external;
procedure InsereTexteDansRapport(text : Ptr; length : SInt32);     external;
procedure Wait(secondes : double);     external;
