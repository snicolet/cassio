	function Min (a, b: SInt32) : SInt32;     external;
	function Max (a, b: SInt32) : SInt32;     external;
procedure WritelnDansRapport(s : String255);     external;
procedure WriteDansRapport(s : String255);     external;
procedure WritelnNumDansRapport(s : String255; num : SInt32);     external;
procedure WriteNumDansRapport(s : String255; num : SInt32);     external;
procedure WritelnStringAndBoolDansRapport(s : String255; b : boolean);     external;
procedure WriteStringAndBoolDansRapport(s : String255; b : boolean);     external;
procedure WritelnStringAndBooleenDansRapport(s : String255; b : boolean);     external;
procedure WriteStringAndBooleenDansRapport(s : String255; b : boolean);     external;
procedure WritelnStringAndBooleanDansRapport(s : String255; b : boolean);     external;
procedure WriteStringAndBooleanDansRapport(s : String255; b : boolean);     external;
procedure WritelnDansRapportThreadSafe(s : String255);     external;
procedure InitUnitPagesDeGameTree;     external;
procedure InitUnitPagesDeGameTreeList;     external;
procedure DisposePropertyList(var L : PropertyList);     external;
procedure DisposeToutesLesPagesDeGameTree;     external;
procedure DisposeToutesLesPagesDeGameTreeList;     external;
function AllocateMemoryPtr(whichSize : SInt32) : Ptr;     external;
function NewGameTreeListPaginee : GameTreeList;     external;
procedure DisposeMemoryPtr(var whichPtr : Ptr);     external;
procedure DisposeGameTreeListPaginee(L : GameTreeList);     external;
procedure AlerteSimple(texte : String255);     external;
procedure ForEachPropertyInListDoAvecResult(L : PropertyList ; DoWhat : PropertyProcAvecResult; var result : SInt32);     external;
function ExtractPropertiesOfTypes(whichTypes : SetOfPropertyTypes; L : PropertyList) : PropertyList;     external;
procedure ForEachPropertyInListDo(L : PropertyList ; DoWhat : PropertyProc);     external;
function ExistsInPropertyList(prop : Property; L : PropertyList) : boolean;     external;
function NewGameTreePaginee : GameTree;     external;
	function NewMagicCookie : SInt32;     external;
  function NumEnString(num : SInt32) : String255;     external;
procedure DisposeGameTreePaginee(G : GameTree);     external;
procedure CompacterPropertyList(var L : PropertyList);     external;
function PropertyListEstVide(L : PropertyList) : boolean;     external;
function DuplicatePropertyList(var L : PropertyList) : PropertyList;     external;
function PropertyEstVide(prop : Property) : boolean;     external;
function CreateOneElementPropertyList(prop : Property) : PropertyList;     external;
function PropertyEstValide(prop : Property) : boolean;     external;
procedure AddPropertyToList(prop : Property; var L : PropertyList);     external;
procedure AddPropertyToListSansDuplication(prop : Property; var L : PropertyList);     external;
function MakeStringProperty(whichType : SInt16; whichString : String255) : Property;     external;
procedure DisposePropertyStuff(var p : Property);     external;
procedure DeletePropertyFromList(prop : Property; var L : PropertyList);     external;
procedure DeletePropertiesOfThisTypeInList(whichType : SInt16; var L : PropertyList);     external;
procedure DeletePropertiesOfTheseTypesInList(whichTypes : SetOfPropertyTypes; var L : PropertyList);     external;
procedure OverWritePropertyToList(prop : Property; var L : PropertyList; var changed : boolean);     external;
function SelectFirstPropertyOfTypes(whichTypes : SetOfPropertyTypes; L : PropertyList) : PropertyPtr;     external;
function PropertyListHasNoMoreThanTheseTypes(whichTypes : SetOfPropertyTypes; L : PropertyList) : boolean;     external;
function CoupEnStringEnMajuscules(coup : SInt16) : String255;     external;
function MakeOthelloSquareProperty(whichType : SInt16; whichSquare : SInt16) : Property;     external;
function MakeEmptyProperty : Property;     external;
procedure GetCommentaireDeCeNoeud(G : GameTree; var texte : Ptr; var longueur : SInt32);     external;
  function MyUpperString(const s : String255; keepDiacritics : boolean) : String255;     external;
function GetOthelloSquareOfProperty(prop : Property) : SInt16;     external;
function GetRacineDeLaPartie : GameTree;     external;
procedure WritelnStringAndPropertyListDansRapport(s : String255; L : PropertyList);     external;
function CoupEnString(coup : SInt16; enMajuscules : boolean) : String255;     external;
procedure EffectueSymetrieOnProperty(var prop : Property; var axeSymetrie : SInt32; var continuer : boolean);     external;
function GetTraitOfPosition(var position : PositionEtTraitRec) : SInt32;     external;
function GenericHash(data : Ptr; tailleData : SInt32) : SInt32;     external;
function GetTripleOfProperty(prop : Property) : Triple;     external;
function MakeTripleProperty(whichType : SInt16; whichTriple : Triple) : Property;     external;
function MakeTriple(n : SInt32) : Triple;     external;
function PropertyListLength(L : PropertyList) : SInt32;     external;
function GetCurrentNode : GameTree;     external;
procedure GetOthelloValueOfProperty(prop : Property; var whichColor,whichSign,whichIntegerValue,centiemes : SInt16);     external;
procedure AddScorePropertyToListSansDuplication(prop : Property; var L : PropertyList);     external;
function GenreDeReflexionInSet(genre : SInt16; whichSet : ReflexionTypesSet) : boolean;     external;
function MakeScoringProperty(quelGenreDeReflexion,scorePourNoir : SInt32) : Property;     external;
function GetPositionEtTraitACeNoeud(G : GameTree; var position : PositionEtTraitRec; const fonctionAppelante : String255) : boolean;     external;
function SamePositionEtTrait(var pos1,pos2 : PositionEtTraitRec) : boolean;     external;
function NbCasesVidesDansPosition(var position : plateauOthello) : SInt32;     external;
function NewPropertyList : PropertyList;     external;
function PlayMoveProperty(prop : Property; var positionEtTrait : PositionEtTraitRec) : boolean;     external;
procedure WritelnPositionEtTraitDansRapport(const position : plateauOthello; trait : SInt32);     external;
