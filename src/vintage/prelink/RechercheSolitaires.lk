	procedure AttendFrappeClavier;     external;
procedure WritelnDansRapport(s : String255);     external;
procedure WriteDansRapport(s : String255);     external;
procedure WritelnNumDansRapport(s : String255; num : SInt32);     external;
procedure WriteNumDansRapport(s : String255; num : SInt32);     external;
procedure WritelnStringAndBoolDansRapport(s : String255; b : boolean);     external;
procedure WriteStringAndBoolDansRapport(s : String255; b : boolean);     external;
procedure WritelnStringAndBooleenDansRapport(s : String255; b : boolean);     external;
procedure WriteStringAndBooleenDansRapport(s : String255; b : boolean);     external;
procedure WritelnStringAndBooleanDansRapport(s : String255; b : boolean);     external;
procedure WriteStringAndBooleanDansRapport(s : String255; b : boolean);     external;
procedure WritelnDansRapportThreadSafe(s : String255);     external;
procedure EssaieSetPortWindowPlateau;     external;
procedure PrepareTexteStatePourMeilleureSuite;     external;
  procedure WriteNumAt(s : String255; num : SInt32; h,v : SInt32);     external;
  procedure WriteStringAt(s : String255; h,v : SInt32);     external;
  function NumEnString(num : SInt32) : String255;     external;
  function SecondesEnJoursHeuresSecondes(secondes : SInt32) : String255;     external;
function EstUnSolitaire(var meilleurX,bstdef : SInt32; couleur,MFprof,nbBl,nbNo : SInt32; const jeu : plateauOthello; var empl : plBool; var frontiere : InfoFront; var score,nbreMeilleurs : SInt32; pourVraimentJouer : boolean; var causeRejet : SInt32; traitement,scoreaatteindre : SInt32) : boolean;     external;
function GetAnneePartieParNroRefPartie(nroReference : SInt32) : SInt16;     external;
function GetNumeroTournoiDansFichierParNroRefPartie(nroReference : SInt32) : SInt32;     external;
function GetNumeroJoueurNoirDansFichierParNroRefPartie(nroReference : SInt32) : SInt32;     external;
function GetNumeroJoueurBlancDansFichierParNroRefPartie(nroReference : SInt32) : SInt32;     external;
procedure GetScoresTheoriqueEtReelParNroRefPartie(nroReference : SInt32; var theorique,reel : SInt16);     external;
procedure ExtraitCoupTableStockagePartie(nroReference, nroCoup : SInt32; var coup : SInt32);     external;
function MakeSolitaireRecNouveauFormat(annee : SInt16; nroTournoi : SInt16; nroJoueurNoir : SInt32; nroJoueurBlanc : SInt32; plat : plateauOthello; trait : SInt16; {pionNoir,pionBlanc} score : SInt16; coupSolution : SInt16; scoreReelDeLaPartie : SInt16; coup25dansLaBase : SInt16) : t_SolitaireRecNouveauFormat;     external;
function FabriqueCommentaireSolitaireNouveauFormat(whichSolitaire : t_SolitaireRecNouveauFormat) : String255;     external;
function AjouterSolitaireNouveauFormatSurDisque(nbreCasesVides : SInt16; theSolitaire : t_SolitaireRecNouveauFormat) : OSErr;     external;
procedure ForEachPositionInGameDo(partie60 : PackedThorGame; DoWhat : MilieuDePartieProc; var result : SInt32);     external;
function GetEcritToutDansRapportLog : boolean;     external;
function GetAutoVidageDuRapport : boolean;     external;
procedure SetEcritToutDansRapportLog(flag : boolean);     external;
procedure SetAutoVidageDuRapport(flag : boolean);     external;
procedure ForEachGameInListDo(FiltreNumRef : FiltreNumRefProc; FiltreGame : FiltreGameProc; DoWhat : GameInListProc; var result : SInt32);     external;
function bidFiltreGameProc(var partie60 : PackedThorGame; numeroRefPartie : SInt32; var result : SInt32) : boolean;     external;
function PackedOthelloPositionToPlOth(const packedBoard : PackedOthelloPosition) : plateauOthello;     external;
function MakePositionEtTrait(var plat : plateauOthello; trait : SInt32) : PositionEtTraitRec;     external;
function PositionEtTraitInitiauxStandard : PositionEtTraitRec;     external;
procedure WritelnPositionEtTraitDansRapport(const position : plateauOthello; trait : SInt32);     external;
procedure ExtraitPartieTableStockageParties(nroReference : SInt32; var partieStr : PackedThorGame);     external;
function PositionEtTraitAfterMoveNumber(var game : PackedThorGame; numeroCoup : SInt32; var typeErreur : SInt32) : PositionEtTraitRec;     external;
function SamePositionEtTrait(var pos1,pos2 : PositionEtTraitRec) : boolean;     external;
function OuvreFichierSolitaireNouveauFormat(nbreCasesVides : SInt16) : OSErr;     external;
function GetNumeroFichierSolitaireNouveauFormat(nbreCasesVides : SInt16; var numeroFichier : SInt16) : boolean;     external;
function NbSolitairesDansFichierSolitairesNouveauFormat(numeroFichier : SInt16) : SInt32;     external;
function LitSolitaireNouveauFormat(refnum : SInt16; nroSolitaire : SInt32; var theSolitaire : t_SolitaireRecNouveauFormat) : OSErr;     external;
function GetScoreReelParNroRefPartie(nroReference : SInt32) : SInt16;     external;
function EcritSolitaireNouveauFormat(refnum : SInt16; nroSolitaire : SInt32; theSolitaire : t_SolitaireRecNouveauFormat) : OSErr;     external;
function FermeFichierSolitaireNouveauFormat(nbreCasesVides : SInt16) : OSErr;     external;
function CassioEstEnRechercheSolitaire : boolean;     external;
procedure LanceInterruption(typeInterruption : SInt16; const fonctionAppelante : String255);     external;
procedure WritelnInterruptionDansRapport(uneInterruption : SInt16);     external;
	function MyTrunc(x : double) : SInt32;     external;
procedure DoChangeHumCtreHum;     external;
procedure DoChangeCouleur;     external;
