	function Min (a, b: SInt32) : SInt32;     external;
	function Max (a, b: SInt32) : SInt32;     external;
procedure WritelnDansRapport(s : String255);     external;
procedure WriteDansRapport(s : String255);     external;
procedure WritelnNumDansRapport(s : String255; num : SInt32);     external;
procedure WriteNumDansRapport(s : String255; num : SInt32);     external;
procedure WritelnStringAndBoolDansRapport(s : String255; b : boolean);     external;
procedure WriteStringAndBoolDansRapport(s : String255; b : boolean);     external;
procedure WritelnStringAndBooleenDansRapport(s : String255; b : boolean);     external;
procedure WriteStringAndBooleenDansRapport(s : String255; b : boolean);     external;
procedure WritelnStringAndBooleanDansRapport(s : String255; b : boolean);     external;
procedure WriteStringAndBooleanDansRapport(s : String255; b : boolean);     external;
procedure WritelnDansRapportThreadSafe(s : String255);     external;
procedure AnnihileVecteurEval(var vecteur : VectNewEval);     external;
procedure AnnihileVecteurEvalInteger(var vecteur : VectNewEvalInteger);     external;
  function InterpolationLineaire(x, x1, y1, x2, y2 : SInt32) : SInt32;     external;
procedure AlloueVecteurEval(var vecteur : VectNewEval);     external;
procedure AlloueVecteurEvalInteger(var vecteur : VectNewEvalInteger);     external;
procedure DisposeVecteurEval(var vecteur : VectNewEval);     external;
procedure DisposeVecteurEvalInteger(var vecteur : VectNewEvalInteger);     external;
function EvaluationEdmondEstDisponible : boolean;     external;
function LireFichierEvalEdmondSurLeDisque : OSErr;     external;
procedure SetEvaluationEdmondEstDisponible(flag : boolean);     external;
function FichierTexteDeCassioExiste(nom : String255; var fic : FichierTEXT) : OSErr;     external;
function Evaluation(var position : plateauOthello; coulEvaluation,nbBlancs,nbNoirs : SInt32; var jouable : plBool; var front : InfoFront; afraidOfWipeOut : boolean; alpha,beta : SInt32; var nbEvaluationsRecursives : SInt32) : SInt32;     external;
function LitVecteurEvaluationIntegerSurLeDisque(nomFichier : String255; var whichEval : VectNewEvalInteger) : OSErr;     external;
  function NumEnString(num : SInt32) : String255;     external;
function MobiliteSemiTranquilleAvecCasesC(coul : SInt32; var plat : plateauOthello; var jouable : plBool; var frontiere : InfoFront; var ListeDesCoupsTranquilles : ListeDeCases; seuil_coupure : SInt32) : SInt32;     external;
procedure WritelnPositionEtTraitDansRapport(const position : plateauOthello; trait : SInt32);     external;
procedure WritelnStringAndReelDansRapport(s : String255; x : double; nbDecimales : SInt16);     external;
function GetScoreTheoriqueParNroRefPartie(nroReference : SInt32) : SInt16;     external;
procedure GetScoresTheoriqueEtReelParNroRefPartie(nroReference : SInt32; var theorique,reel : SInt16);     external;
procedure WriteStringAndReelDansRapport(s : String255; x : double; nbDecimales : SInt16);     external;
function EvaluationEdmond(var position : plateauOthello; var frontiere : InfoFront; nbNoir,nbBlanc,trait : SInt32) : SInt32;     external;
function AQuiDeJouer : SInt32;     external;
function SymmetricalMappingEdge2X(n : SInt32) : SInt32;     external;
function SymmetricalMappingLongSquaresLine(n,length : SInt32) : SInt32;     external;
function SymmetricalMapping13SquaresCorner(n : SInt32) : SInt32;     external;
procedure ForEachPositionInGameDo(partie60 : PackedThorGame; DoWhat : MilieuDePartieProc; var result : SInt32);     external;
procedure ForEachGameInListDo(FiltreNumRef : FiltreNumRefProc; FiltreGame : FiltreGameProc; DoWhat : GameInListProc; var result : SInt32);     external;
function bidFiltreGameProc(var partie60 : PackedThorGame; numeroRefPartie : SInt32; var result : SInt32) : boolean;     external;
procedure ExtraitPartieTableStockageParties(nroReference : SInt32; var partieStr : PackedThorGame);     external;
  function RandomLongintEntreBornes(a, b : SInt32) : SInt32;     external;
procedure TrierPointMultidiemnsionnel(var p : PointMultidimensionnel; var rankingTable : PointMultidimensionnel);     external;
  function ReelEnStringAvecDecimales(unreel : double; nbChiffresSignificatifs : SInt16) : String255;     external;
