procedure WritelnDansRapport(s : String255);     external;
procedure WriteDansRapport(s : String255);     external;
procedure WritelnNumDansRapport(s : String255; num : SInt32);     external;
procedure WriteNumDansRapport(s : String255; num : SInt32);     external;
procedure WritelnStringAndBoolDansRapport(s : String255; b : boolean);     external;
procedure WriteStringAndBoolDansRapport(s : String255; b : boolean);     external;
procedure WritelnStringAndBooleenDansRapport(s : String255; b : boolean);     external;
procedure WriteStringAndBooleenDansRapport(s : String255; b : boolean);     external;
procedure WritelnStringAndBooleanDansRapport(s : String255; b : boolean);     external;
procedure WriteStringAndBooleanDansRapport(s : String255; b : boolean);     external;
procedure WritelnDansRapportThreadSafe(s : String255);     external;
function NewGameTree : GameTree;     external;
procedure CreeTableHachageInterversions;     external;
procedure VideTableHashageInterversions;     external;
procedure SetNbCollisionsInterversions(n : SInt32);     external;
procedure DisposeGameTree(var G : GameTree);     external;
procedure DisposeTableHachageInterversions;     external;
procedure WritelnSoldesCreationsPropertiesDansRapport(prefixe : String255);     external;
procedure AlerteSimple(texte : String255);     external;
function GetTraitOfPosition(var position : PositionEtTraitRec) : SInt32;     external;
function GetOthelloSquareOfProperty(prop : Property) : SInt16;     external;
function UpdatePositionEtTrait(var positionEtTrait : PositionEtTraitRec; whichMove : SInt32) : boolean;     external;
function GameTreeEstVide(G : GameTree) : boolean;     external;
function MakeGameTreeFromPropertyList(L : PropertyList) : GameTree;     external;
procedure AddPropertyToGameTree(prop : Property; var G : GameTree);     external;
procedure AddPropertyToGameTreeSansDuplication(prop : Property; var G : GameTree);     external;
procedure AddScorePropertyToGameTreeSansDuplication(prop : Property; var G : GameTree);     external;
procedure DeletePropertyFromGameNode(prop : Property; var G : GameTree);     external;
procedure DeletePropertiesOfTheseTypeFromGameNode(whichType : SInt16; var G : GameTree);     external;
procedure DeletePropertiesOfTheseTypesFromGameNode(whichTypes : SetOfPropertyTypes; var G : GameTree);     external;
function SelectFirstPropertyOfTypes(whichTypes : SetOfPropertyTypes; L : PropertyList) : PropertyPtr;     external;
function SelectInPropertList(L : PropertyList; choice : PropertyPredicate; var result : SInt32) : PropertyPtr;     external;
function ExtractPropertiesOfTypes(whichTypes : SetOfPropertyTypes; L : PropertyList) : PropertyList;     external;
procedure ForEachPropertyInListDo(L : PropertyList ; DoWhat : PropertyProc);     external;
procedure DisposePropertyList(var L : PropertyList);     external;
function NumberOfSons(G : GameTree) : SInt16;     external;
function GetSons(G : GameTree) : GameTreeList;     external;
procedure SetSons(var G : GameTree; whichSons : GameTreeList);     external;
procedure DeleteThisSon(var G : GameTree; var whichSon : GameTree);     external;
procedure DeleteAllSons(var G : GameTree);     external;
procedure BringToFrontInGameTreeList(whichTree : GameTree; var L : GameTreeList);     external;
procedure BringToPositionNInGameTreeList(whichTree : GameTree; N : SInt16; var L : GameTreeList);     external;
function  DeleteSonsOfThatColor(var G : GameTree; couleur : SInt16) : SInt16;     external;
function GetCouleurOfMoveInNode(G : GameTree) : SInt32;     external;
function GetBrothers(G : GameTree) : GameTreeList;     external;
procedure WritelnPropertyListDansRapport(var L : PropertyList);     external;
function CoupEnStringEnMajuscules(coup : SInt16) : String255;     external;
function GetEnsembleDesCoupsDesFils(couleur : SInt16; G : GameTree) : SquareSet;     external;
function MakeOthelloSquareProperty(whichType : SInt16; whichSquare : SInt16) : Property;     external;
function MakeEmptyProperty : Property;     external;
procedure WritelnStringAndPropertyDansRapport(s : String255; var prop : Property);     external;
procedure DisposePropertyStuff(var p : Property);     external;
function SquareSetEnString(ensemble : SquareSet) : String255;     external;
function SelectFirstSubtreeWithThisProperty(prop : Property; G : GameTree) : GameTree;     external;
function MakeGameTreeFromProperty(prop : Property) : GameTree;     external;
procedure AddSonToGameTree(fils,G : GameTree);     external;
procedure EffectueSymetrieOnGameTree(G : GameTree; axeSymetrie : SInt32);     external;
function MakePositionEtTrait(var plat : plateauOthello; trait : SInt32) : PositionEtTraitRec;     external;
function EstLaPositionInitialeStandard(var position : PositionEtTraitRec) : boolean;     external;
procedure WritelnPositionEtTraitDansRapport(const position : plateauOthello; trait : SInt32);     external;
procedure OthellierEtPionsDeDepart(var plat : plateauOthello; var nBla,nNoi : SInt32);     external;
function SamePositionEtTrait(var pos1,pos2 : PositionEtTraitRec) : boolean;     external;
function EstLaPositionInitialeStandardInversee(var position : PositionEtTraitRec) : boolean;     external;
procedure VideOthellier(var plat : plateauOthello);     external;
function GetSquareSetOfProperty(prop : Property) : SquareSet;     external;
function GetCharOfProperty(prop : Property) : char;     external;
function MakeSquareSetProperty(whichType : SInt16; whichSet : SquareSet) : Property;     external;
procedure AddPropertyToList(prop : Property; var L : PropertyList);     external;
function MakeCharProperty(whichType : SInt16; whichChar : char) : Property;     external;
procedure DeletePropertyFromList(prop : Property; var L : PropertyList);     external;
procedure OverWritePropertyToGameTree(prop : Property; var G : GameTree; var changed : boolean);     external;
function MakeLongintProperty(whichType : SInt16; whichLong : SInt32) : Property;     external;
function SelectFirstPropertyOfTypesInGameTree(whichTypes : SetOfPropertyTypes; G : GameTree) : PropertyPtr;     external;
function MakeStringProperty(whichType : SInt16; whichString : String255) : Property;     external;
function VersionDeCassioEnString : String255;     external;
function GetCadence : SInt32;     external;
function CoupsOfMainLineInGameTreeEnString(G : GameTree) : String255;     external;
function GetStringInfoOfProperty(prop : Property) : String255;     external;
	function TPCopy (source : String255; start, count: SInt32) : String255;     external;
function MakePropertyFromString(s : String255) : Property;     external;
function PropertyEstValide(prop : Property) : boolean;     external;
function PropertyEstVide(prop : Property) : boolean;     external;
	function ReadStringFromRessource(stringListID, index : SInt16) : String255;     external;
procedure ChangeFontFaceDansRapport(whichStyle : StyleParameter);     external;
function PropertyToString(prop : Property) : String255;     external;
procedure TextNormalDansRapport;     external;
function ExistsInPropertyList(prop : Property; L : PropertyList) : boolean;     external;
procedure WritelnStringAndPropertyListDansRapport(s : String255; L : PropertyList);     external;
function MakeTexteProperty(whichType : SInt16; texte : Ptr; longueur : SInt32) : Property;     external;
function GetArbreDeJeuWindow : WindowPtr;     external;
function TEGetTextLength(text : TEHandle) : SInt32;     external;
  function FindStringInBuffer(const s : String255; buffer : Ptr; bufferLength,from,direction : SInt32; var positionTrouvee : SInt32) : boolean;     external;
  function BufferToPascalString(buffer : Ptr; indexDepart,indexFin : SInt32) : String255;     external;
  procedure Parser2(s : String255; var s1,s2,reste : String255);     external;
procedure AlerteDouble(texte,explication : String255);     external;
  function MyUpperString(const s : String255; keepDiacritics : boolean) : String255;     external;
procedure SetLastStringSearchedInGameTree(s : String255);     external;
procedure SetTexteFenetreArbreDeJeuFromArbreDeJeu(G : GameTree; redessineCommentaires : boolean; var commentaireChange : boolean);     external;
procedure EffacePremiereLigneFenetreArbreDeJeu;     external;
procedure DrawContents(whichWindow : WindowPtr);     external;
procedure AddPropertyInFrontOfList(prop : Property; var L : PropertyList);     external;
function DuplicatePropertyList(var L : PropertyList) : PropertyList;     external;
function PositionEtTraitInitiauxStandard : PositionEtTraitRec;     external;
function NbCasesVidesDansPosition(var position : plateauOthello) : SInt32;     external;
function GenreDeReflexionInSet(genre : SInt16; whichSet : ReflexionTypesSet) : boolean;     external;
function MakeScoringProperty(quelGenreDeReflexion,scorePourNoir : SInt32) : Property;     external;
  function EnleveEspacesDeDroite(const s : String255) : String255;     external;
  procedure EnleveEspacesDeGaucheSurPlace(var s : String255);     external;
function ScannerStringPourTrouverCoup(debutScan : SInt16; const s : String255; var positionDuCoupDansChaine : SInt16) : SInt16;     external;
procedure WritelnPropertyDansRapport(var prop : Property);     external;
function GetCouleurOfMoveProperty(prop : Property) : SInt32;     external;
function GetEndgameValuesInHashTableFromThisNode(plat : PositionEtTraitRec; G : GameTree; deltaFinale : SInt32; var valMinPourNoir,valMaxPourNoir : SInt32) : boolean;     external;
function ScoreFinalEstConfirmeParValeursHashExacte(genreReflexion,scoreDeNoir,vMinPourNoir,vMaxPourNoir : SInt32) : boolean;     external;
function ScoreFinalEstFaiblementConfirmeParValeursHashExacte(genreReflexion,scoreDeNoir,vMinPourNoir,vMaxPourNoir : SInt32) : boolean;     external;
function MakeTripleProperty(whichType : SInt16; whichTriple : Triple) : Property;     external;
function MakeTriple(n : SInt32) : Triple;     external;
procedure PromeutParmiSesFreres(G : GameTree);     external;
procedure WriteStringAndPropertyDansRapport(s : String255; var prop : Property);     external;
procedure AjoutePropertyValeurDeCoupDansGameTree(quelGenreDeReflexion,scorePourNoir : SInt32; G : GameTree);     external;
function SelectScorePropertyOfNode(G : GameTree) : PropertyPtr;     external;
procedure MarquerCeNoeudCommeVirtuel(G : GameTree);     external;
procedure MarquerCeNoeudCommeReel(G : GameTree);     external;
procedure PlaquerPositionEtPartie(position : PositionEtTraitRec; partieAlphaCompactee : String255; flags : SInt32);     external;
function NextNodePourParcoursEnProfondeurArbre(G : GameTree) : GameTree;     external;
function FindNodeInGameTree(G : GameTree; whichPredicate : GameTreePredicate; var parametre : SInt32) : GameTree;     external;
function FindUpperStringWithoutDiacriticsInNode(var G : GameTree; var whichStringPtr : SInt32) : boolean;     external;
function FindStringInNode(var G : GameTree; var whichStringPtr : SInt32) : boolean;     external;
function GameNodeHasTooManySons(var G : GameTree; var nbreMinDeFils : SInt32) : boolean;     external;
function SuiteParfaiteEstConnueDansGameTree : boolean;     external;
function ConnaitValeurDuNoeud(G : GameTree; deltaFinale : SInt32; var vmin,vmax : SInt32) : boolean;     external;
function EstLaPositionCourante(var position : PositionEtTraitRec) : boolean;     external;
function PeutCalculerFinaleDansGameTree(G : GameTree; position : PositionEtTraitRec; var listeDesCoups : PropertyList; var vmin,vmax : SInt32) : boolean;     external;
function PositionEtTraitCourant : PositionEtTraitRec;     external;
function NewPropertyList : PropertyList;     external;
procedure SetSuiteParfaiteEstConnueDansGameTree(flag : boolean);     external;
function ReplaceStringOnce(const pattern,replacement,s : String255) : String255;     external;
procedure SplitBy (s : String255; sub : char; var left, right: String255);     external;
function TypesPierresDelta : SetOfPropertyTypes;     external;
