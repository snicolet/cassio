167:   LITID         /* multiple character literal */       ^	110: error in definition417: (* Lexical analyzer (implemented in Turbo Pascal for maximum efficiency): *)     ^	111: error in rule420:   function end_of_input : boolean;       ^	111: error in rule422:       end_of_input := (cno>length(line)) and eof(yyin)           ^	111: error in rule424:   procedure scan;       ^	111: error in rule425:     (* scan for nonempty character, skip comments *)         ^	111: error in rule425:     (* scan for nonempty character, skip comments *)                                       ^	111: error in rule425:     (* scan for nonempty character, skip comments *)                                                       ^	111: error in rule427:       var p : integer;           ^	111: error in rule429:         p := pos('*/ ', copy(line, cno, length(line)));             ^	111: error in rule430:         if p>0 then             ^	111: error in rule430:         if p>0 then                 ^	111: error in rule437:                 inc(lno);                     ^	111: error in rule437:                 inc(lno);                        ^	111: error in rule437:                 inc(lno);                            ^	111: error in rule440:             if p=0 then                 ^	111: error in rule443:                 error(open_comment_at_eof);                     ^	111: error in rule443:                 error(open_comment_at_eof);                          ^	111: error in rule443:                 error(open_comment_at_eof);                                              ^	111: error in rule445:             else                 ^	111: error in rule450:       while not end_of_input do           ^	111: error in rule451:         if cno<=length(line) then                   ^	111: error in rule454:             '/' :                 ^	111: error in rule454:             '/' :                     ^	111: error in rule455:               if (cno<length(line)) and (line[succ(cno)]='*') then                      ^	111: error in rule455:               if (cno<length(line)) and (line[succ(cno)]='*') then                          ^	111: error in rule455:               if (cno<length(line)) and (line[succ(cno)]='*') then                                 ^	111: error in rule455:               if (cno<length(line)) and (line[succ(cno)]='*') then                                      ^	111: error in rule455:               if (cno<length(line)) and (line[succ(cno)]='*') then                                             ^	111: error in rule455:               if (cno<length(line)) and (line[succ(cno)]='*') then                                                  ^	111: error in rule455:               if (cno<length(line)) and (line[succ(cno)]='*') then                                                       ^	111: error in rule455:               if (cno<length(line)) and (line[succ(cno)]='*') then                                                           ^	111: error in rule459:                 end                     ^	111: error in rule467:             readln(yyin, line);                       ^	111: error in rule467:             readln(yyin, line);                            ^	111: error in rule467:             readln(yyin, line);                                  ^	111: error in rule468:             inc(lno); cno := 1;                 ^	111: error in rule468:             inc(lno); cno := 1;                    ^	111: error in rule468:             inc(lno); cno := 1;                        ^	111: error in rule470:     end(*scan*);         ^	111: error in rule470:     end(*scan*);            ^	111: error in rule470:     end(*scan*);                  ^	111: error in rule471:   function scan_ident : integer;       ^	111: error in rule472:     (* scan an identifier *)         ^	111: error in rule472:     (* scan an identifier *)                               ^	111: error in rule476:       idstr := line[cno];           ^	111: error in rule477:       inc(cno);           ^	111: error in rule477:       inc(cno);              ^	111: error in rule477:       inc(cno);                  ^	111: error in rule478:       while (cno<=length(line)) and (           ^	111: error in rule478:       while (cno<=length(line)) and (                 ^	111: error in rule478:       while (cno<=length(line)) and (                     ^	111: error in rule485:       inc(cno)           ^	111: error in rule485:       inc(cno)              ^	111: error in rule485:       inc(cno)                  ^	111: error in rule488:       scan;           ^	111: error in rule489:       if not end_of_input and (line[cno]=':') then           ^	111: error in rule489:       if not end_of_input and (line[cno]=':') then                                   ^	111: error in rule489:       if not end_of_input and (line[cno]=':') then                                        ^	111: error in rule489:       if not end_of_input and (line[cno]=':') then                                            ^	111: error in rule494:   function scan_literal: integer;       ^	111: error in rule495:     (* scan a literal, i.e. string *)         ^	111: error in rule495:     (* scan a literal, i.e. string *)                          ^	111: error in rule495:     (* scan a literal, i.e. string *)                                        ^	111: error in rule500:       idstr := line[cno];           ^	111: error in rule501:       inc(cno);           ^	111: error in rule501:       inc(cno);              ^	111: error in rule501:       inc(cno);                  ^	111: error in rule502:       while (cno<=length(line)) and (line[cno]<>idstr[1]) do           ^	111: error in rule502:       while (cno<=length(line)) and (line[cno]<>idstr[1]) do                 ^	111: error in rule502:       while (cno<=length(line)) and (line[cno]<>idstr[1]) do                     ^	111: error in rule507:               case line[cno] of                   ^	111: error in rule507:               case line[cno] of                            ^	111: error in rule507:               case line[cno] of                                ^	111: error in rule508:                 'n' :                         ^	111: error in rule511:                     inc(cno)                         ^	111: error in rule511:                     inc(cno)                            ^	111: error in rule511:                     inc(cno)                                ^	111: error in rule513:                 'r' :                     ^	111: error in rule513:                 'r' :                         ^	111: error in rule516:                     inc(cno)                         ^	111: error in rule516:                     inc(cno)                            ^	111: error in rule516:                     inc(cno)                                ^	111: error in rule518:                 't' :                     ^	111: error in rule518:                 't' :                         ^	111: error in rule521:                     inc(cno)                         ^	111: error in rule521:                     inc(cno)                            ^	111: error in rule521:                     inc(cno)                                ^	111: error in rule523:                 'b' :                     ^	111: error in rule523:                 'b' :                         ^	111: error in rule526:                     inc(cno)                         ^	111: error in rule526:                     inc(cno)                            ^	111: error in rule526:                     inc(cno)                                ^	111: error in rule528:                 'f' :                     ^	111: error in rule528:                 'f' :                         ^	111: error in rule531:                     inc(cno)                         ^	111: error in rule531:                     inc(cno)                            ^	111: error in rule531:                     inc(cno)                                ^	111: error in rule533:                 '0'..'7' :                     ^	111: error in rule533:                 '0'..'7' :                        ^	111: error in rule533:                 '0'..'7' :                              ^	111: error in rule536:                     inc(cno);                         ^	111: error in rule536:                     inc(cno);                            ^	111: error in rule536:                     inc(cno);                                ^	111: error in rule537:                     while (cno<=length(line)) and                         ^	111: error in rule537:                     while (cno<=length(line)) and                               ^	111: error in rule537:                     while (cno<=length(line)) and                                   ^	111: error in rule542:                         inc(cno)                             ^	111: error in rule542:                         inc(cno)                                ^	111: error in rule542:                         inc(cno)                                    ^	111: error in rule549:                     inc(cno)                         ^	111: error in rule549:                     inc(cno)                            ^	111: error in rule549:                     inc(cno)                                ^	111: error in rule554:             inc(cno)                    ^	111: error in rule554:             inc(cno)                        ^	111: error in rule558:             inc(cno)                 ^	111: error in rule558:             inc(cno)                    ^	111: error in rule558:             inc(cno)                        ^	111: error in rule560:       if cno>length(line) then           ^	111: error in rule560:       if cno>length(line) then                 ^	111: error in rule560:       if cno>length(line) then                        ^	111: error in rule560:       if cno>length(line) then                             ^	111: error in rule561:         error(missing_string_terminator)                  ^	111: error in rule561:         error(missing_string_terminator)                                            ^	111: error in rule563:         inc(cno);                ^	111: error in rule563:         inc(cno);                    ^	111: error in rule564:       if length(idstr)=2 then           ^	111: error in rule564:       if length(idstr)=2 then                    ^	111: error in rule564:       if length(idstr)=2 then                          ^	111: error in rule569:       else if length(idstr)>1 then           ^	111: error in rule569:       else if length(idstr)>1 then                         ^	111: error in rule569:       else if length(idstr)>1 then                               ^	111: error in rule574:       else           ^	111: error in rule576:     end(*scan_literal*);         ^	111: error in rule576:     end(*scan_literal*);            ^	111: error in rule576:     end(*scan_literal*);                          ^	111: error in rule577:   function scan_num : integer;       ^	111: error in rule578:     (* scan an unsigned integer *)         ^	111: error in rule578:     (* scan an unsigned integer *)                                     ^	111: error in rule583:       numstr := line[cno];           ^	111: error in rule584:       inc(cno);           ^	111: error in rule584:       inc(cno);              ^	111: error in rule584:       inc(cno);                  ^	111: error in rule585:       while (cno<=length(line)) and           ^	111: error in rule585:       while (cno<=length(line)) and                 ^	111: error in rule585:       while (cno<=length(line)) and                     ^	111: error in rule589:           inc(cno)               ^	111: error in rule589:           inc(cno)                  ^	111: error in rule589:           inc(cno)                      ^	111: error in rule591:       val(numstr, yylval, code);           ^	111: error in rule591:       val(numstr, yylval, code);              ^	111: error in rule591:       val(numstr, yylval, code);                     ^	111: error in rule591:       val(numstr, yylval, code);                             ^	111: error in rule591:       val(numstr, yylval, code);                                   ^	111: error in rule592:       if code=0 then           ^	111: error in rule596:     end(*scan_num*);         ^	111: error in rule596:     end(*scan_num*);            ^	111: error in rule596:     end(*scan_num*);                      ^	111: error in rule597:   function scan_keyword : integer;       ^	111: error in rule598:     (* scan %xy *)         ^	111: error in rule598:     (* scan %xy *)                 ^	111: error in rule599:     function lookup(key : String; var tok : integer) : boolean;                        ^	111: error in rule599:     function lookup(key : String; var tok : integer) : boolean;                                       ^	111: error in rule599:     function lookup(key : String; var tok : integer) : boolean;                                                        ^	111: error in rule600:       (* table of Yacc keywords (unstropped): *)           ^	111: error in rule600:       (* table of Yacc keywords (unstropped): *)                                     ^	111: error in rule600:       (* table of Yacc keywords (unstropped): *)                                                ^	111: error in rule603:         max_entry_length = 8;             ^	111: error in rule604:         keys : array [1..no_of_entries] of String[max_entry_length] = (                          ^	111: error in rule604:         keys : array [1..no_of_entries] of String[max_entry_length] = (                                           ^	111: error in rule604:         keys : array [1..no_of_entries] of String[max_entry_length] = (                                                      ^	111: error in rule604:         keys : array [1..no_of_entries] of String[max_entry_length] = (                                                                       ^	111: error in rule607:         toks : array [1..no_of_entries] of integer = (                          ^	111: error in rule607:         toks : array [1..no_of_entries] of integer = (                                           ^	111: error in rule610:       var m, n, k : integer;           ^	111: error in rule610:       var m, n, k : integer;                ^	111: error in rule610:       var m, n, k : integer;                   ^	111: error in rule612:         (* binary search: *)             ^	111: error in rule612:         (* binary search: *)             ^	111: error in rule612:         (* binary search: *)                               ^	111: error in rule615:         while m<=n do             ^	111: error in rule615:         while m<=n do                    ^	111: error in rule618:             if key=keys[k] then                 ^	111: error in rule622:               end                   ^	111: error in rule623:             else if key>keys[k] then                            ^	111: error in rule623:             else if key>keys[k] then                                 ^	111: error in rule623:             else if key>keys[k] then                                   ^	111: error in rule631:       keywstr : String;           ^	111: error in rule634:       inc(cno);           ^	111: error in rule634:       inc(cno);              ^	111: error in rule634:       inc(cno);                  ^	111: error in rule635:       if cno<=length(line) then           ^	111: error in rule635:       if cno<=length(line) then                 ^	111: error in rule640:               inc(cno)                   ^	111: error in rule640:               inc(cno)                      ^	111: error in rule640:               inc(cno)                          ^	111: error in rule642:           '>' :               ^	111: error in rule642:           '>' :                   ^	111: error in rule645:               inc(cno)                   ^	111: error in rule645:               inc(cno)                      ^	111: error in rule645:               inc(cno)                          ^	111: error in rule647:           '=' :               ^	111: error in rule647:           '=' :                   ^	111: error in rule650:               inc(cno)                   ^	111: error in rule650:               inc(cno)                      ^	111: error in rule650:               inc(cno)                          ^	111: error in rule652:           '%', '\' :               ^	111: error in rule652:           '%', '\' :                  ^	111: error in rule652:           '%', '\' :                         ^	102: missing string terminator655:               inc(cno)                   ^	111: error in rule655:               inc(cno)                      ^	111: error in rule655:               inc(cno)                          ^	111: error in rule657:           '{' :               ^	111: error in rule657:           '{' :                   ^	111: error in rule660:               inc(cno)                   ^	111: error in rule660:               inc(cno)                      ^	111: error in rule660:               inc(cno)                          ^	111: error in rule662:           '}' :               ^	111: error in rule662:           '}' :                   ^	111: error in rule665:               inc(cno)                   ^	111: error in rule665:               inc(cno)                      ^	111: error in rule665:               inc(cno)                          ^	111: error in rule667:           'A'..'Z', 'a'..'z', '0'..'9' :               ^	111: error in rule667:           'A'..'Z', 'a'..'z', '0'..'9' :                  ^	111: error in rule667:           'A'..'Z', 'a'..'z', '0'..'9' :                       ^	111: error in rule667:           'A'..'Z', 'a'..'z', '0'..'9' :                            ^	111: error in rule667:           'A'..'Z', 'a'..'z', '0'..'9' :                                 ^	111: error in rule667:           'A'..'Z', 'a'..'z', '0'..'9' :                                      ^	111: error in rule667:           'A'..'Z', 'a'..'z', '0'..'9' :                                            ^	111: error in rule670:               inc(cno);                   ^	111: error in rule670:               inc(cno);                      ^	111: error in rule670:               inc(cno);                          ^	111: error in rule671:               while (cno<=length(line)) and (                   ^	111: error in rule671:               while (cno<=length(line)) and (                         ^	111: error in rule671:               while (cno<=length(line)) and (                             ^	111: error in rule676:                   inc(cno)                       ^	111: error in rule676:                   inc(cno)                          ^	111: error in rule676:                   inc(cno)                              ^	111: error in rule678:               if lookup(keywstr, tok) then                   ^	111: error in rule678:               if lookup(keywstr, tok) then                            ^	111: error in rule678:               if lookup(keywstr, tok) then                                    ^	111: error in rule678:               if lookup(keywstr, tok) then                                         ^	111: error in rule683:           else scan_keyword := ILLEGAL               ^	111: error in rule687:     end(*scan_keyword*);         ^	111: error in rule687:     end(*scan_keyword*);            ^	111: error in rule687:     end(*scan_keyword*);                          ^	111: error in rule688:   function scan_char : integer;       ^	111: error in rule689:     (* scan any single character *)         ^	111: error in rule689:     (* scan any single character *)                                      ^	111: error in rule692:       inc(cno)           ^	111: error in rule692:       inc(cno)              ^	111: error in rule692:       inc(cno)                  ^	111: error in rule693:     end(*scan_char*);            ^	111: error in rule693:     end(*scan_char*);                       ^	111: error in rule694:   var lno0, cno0 : integer;       ^	111: error in rule694:   var lno0, cno0 : integer;               ^	111: error in rule696:     tokleng := 0;         ^	111: error in rule697:     scan;         ^	111: error in rule699:     if end_of_input then         ^	111: error in rule704:   '''', '"' : yylex := scan_literal;       ^	111: error in rule704:   '''', '"' : yylex := scan_literal;                 ^	111: error in rule705:   '0'..'9' : yylex := scan_num;       ^	111: error in rule705:   '0'..'9' : yylex := scan_num;          ^	111: error in rule705:   '0'..'9' : yylex := scan_num;                ^	111: error in rule706:   '%', '\' : yylex := scan_keyword;       ^	111: error in rule706:   '%', '\' : yylex := scan_keyword;          ^	111: error in rule706:   '%', '\' : yylex := scan_keyword;                                        ^	102: missing string terminator707:         '=' :                 ^	111: error in rule708:           if (cno<length(line)) and (line[succ(cno)]='{') then                  ^	111: error in rule708:           if (cno<length(line)) and (line[succ(cno)]='{') then                      ^	111: error in rule708:           if (cno<length(line)) and (line[succ(cno)]='{') then                             ^	111: error in rule708:           if (cno<length(line)) and (line[succ(cno)]='{') then                                  ^	111: error in rule708:           if (cno<length(line)) and (line[succ(cno)]='{') then                                         ^	111: error in rule708:           if (cno<length(line)) and (line[succ(cno)]='{') then                                              ^	111: error in rule708:           if (cno<length(line)) and (line[succ(cno)]='{') then                                                   ^	111: error in rule708:           if (cno<length(line)) and (line[succ(cno)]='{') then                                                       ^	111: error in rule715:   else yylex := scan_char;       ^	111: error in rule716:       end;           ^	111: error in rule717:     if lno=lno0 then         ^	111: error in rule721: (* Main program: *)     ^	111: error in rule721: (* Main program: *)                      ^	111: error in rule726: {$ifdef linux}     ^	111: error in rule726: {$ifdef linux}       ^	112: syntax error728: {$else}     ^	111: error in rule728: {$else}       ^	112: syntax error730: {$endif}     ^	111: error in rule730: {$endif}       ^	112: syntax error732:   (* sign-on: *)       ^	111: error in rule732:   (* sign-on: *)              ^	111: error in rule732:   (* sign-on: *)                   ^	111: error in rule734:   writeln(sign_on);              ^	111: error in rule734:   writeln(sign_on);                      ^	111: error in rule736:   (* parse command line: *)       ^	111: error in rule736:   (* parse command line: *)                              ^	111: error in rule741:       writeln(options);           ^	111: error in rule741:       writeln(options);                  ^	111: error in rule741:       writeln(options);                          ^	111: error in rule742:       halt(0);           ^	111: error in rule742:       halt(0);               ^	111: error in rule743:     end;         ^	111: error in rule748:   for i := 1 to paramCount do       ^	111: error in rule757:           halt(1);               ^	111: error in rule757:           halt(1);                   ^	111: error in rule759:     else if yfilename='' then         ^	111: error in rule766:         halt(1);             ^	111: error in rule766:         halt(1);                 ^	111: error in rule767:       end;           ^	111: error in rule769:   if yfilename='' then       ^	111: error in rule772:       halt(1);           ^	111: error in rule772:       halt(1);               ^	111: error in rule773:     end;         ^	111: error in rule775:   if pasfilename='' then pasfilename := root(yfilename)+'.pas';       ^	111: error in rule778:   (* open files: *)       ^	111: error in rule778:   (* open files: *)                      ^	111: error in rule780:   assign(yyin, yfilename);             ^	111: error in rule780:   assign(yyin, yfilename);                  ^	111: error in rule780:   assign(yyin, yfilename);                             ^	111: error in rule781:   assign(yyout, pasfilename);       ^	111: error in rule781:   assign(yyout, pasfilename);             ^	111: error in rule781:   assign(yyout, pasfilename);                   ^	111: error in rule781:   assign(yyout, pasfilename);                                ^	111: error in rule782:   assign(yylst, lstfilename);       ^	111: error in rule782:   assign(yylst, lstfilename);             ^	111: error in rule782:   assign(yylst, lstfilename);                   ^	111: error in rule782:   assign(yylst, lstfilename);                                ^	111: error in rule784:   reset(yyin);    if ioresult<>0 then fatal(cannot_open_file+yfilename);       ^	111: error in rule784:   reset(yyin);    if ioresult<>0 then fatal(cannot_open_file+yfilename);            ^	111: error in rule784:   reset(yyin);    if ioresult<>0 then fatal(cannot_open_file+yfilename);                 ^	111: error in rule784:   reset(yyin);    if ioresult<>0 then fatal(cannot_open_file+yfilename);                       ^	111: error in rule784:   reset(yyin);    if ioresult<>0 then fatal(cannot_open_file+yfilename);                                  ^	111: error in rule784:   reset(yyin);    if ioresult<>0 then fatal(cannot_open_file+yfilename);                                                ^	111: error in rule784:   reset(yyin);    if ioresult<>0 then fatal(cannot_open_file+yfilename);                                                                 ^	111: error in rule784:   reset(yyin);    if ioresult<>0 then fatal(cannot_open_file+yfilename);                                                                           ^	111: error in rule785:   rewrite(yyout); if ioresult<>0 then fatal(cannot_open_file+pasfilename);       ^	111: error in rule785:   rewrite(yyout); if ioresult<>0 then fatal(cannot_open_file+pasfilename);              ^	111: error in rule785:   rewrite(yyout); if ioresult<>0 then fatal(cannot_open_file+pasfilename);                    ^	111: error in rule785:   rewrite(yyout); if ioresult<>0 then fatal(cannot_open_file+pasfilename);                       ^	111: error in rule785:   rewrite(yyout); if ioresult<>0 then fatal(cannot_open_file+pasfilename);                                  ^	111: error in rule785:   rewrite(yyout); if ioresult<>0 then fatal(cannot_open_file+pasfilename);                                                ^	111: error in rule785:   rewrite(yyout); if ioresult<>0 then fatal(cannot_open_file+pasfilename);                                                                 ^	111: error in rule785:   rewrite(yyout); if ioresult<>0 then fatal(cannot_open_file+pasfilename);                                                                             ^	111: error in rule786:   rewrite(yylst); if ioresult<>0 then fatal(cannot_open_file+lstfilename);       ^	111: error in rule786:   rewrite(yylst); if ioresult<>0 then fatal(cannot_open_file+lstfilename);              ^	111: error in rule786:   rewrite(yylst); if ioresult<>0 then fatal(cannot_open_file+lstfilename);                    ^	111: error in rule786:   rewrite(yylst); if ioresult<>0 then fatal(cannot_open_file+lstfilename);                       ^	111: error in rule786:   rewrite(yylst); if ioresult<>0 then fatal(cannot_open_file+lstfilename);                                  ^	111: error in rule786:   rewrite(yylst); if ioresult<>0 then fatal(cannot_open_file+lstfilename);                                                ^	111: error in rule786:   rewrite(yylst); if ioresult<>0 then fatal(cannot_open_file+lstfilename);                                                                 ^	111: error in rule786:   rewrite(yylst); if ioresult<>0 then fatal(cannot_open_file+lstfilename);                                                                             ^	111: error in rule788:   (* search code template in current directory, then on path where Yacc       ^	111: error in rule788:   (* search code template in current directory, then on path where Yacc                                                   ^	111: error in rule789:      was executed from: *)                             ^	111: error in rule791:   assign(yycod, codfilename);       ^	111: error in rule791:   assign(yycod, codfilename);             ^	111: error in rule791:   assign(yycod, codfilename);                   ^	111: error in rule791:   assign(yycod, codfilename);                                ^	111: error in rule792:   reset(yycod);       ^	111: error in rule792:   reset(yycod);            ^	111: error in rule792:   reset(yycod);                  ^	111: error in rule793:   if ioresult<>0 then       ^	111: error in rule793:   if ioresult<>0 then                  ^	111: error in rule796:       assign(yycod, codfilename);           ^	111: error in rule796:       assign(yycod, codfilename);                 ^	111: error in rule796:       assign(yycod, codfilename);                       ^	111: error in rule796:       assign(yycod, codfilename);                                    ^	111: error in rule797:       reset(yycod);           ^	111: error in rule797:       reset(yycod);                ^	111: error in rule797:       reset(yycod);                      ^	111: error in rule798:       if ioresult<>0 then fatal(cannot_open_file+codfilename);           ^	111: error in rule798:       if ioresult<>0 then fatal(cannot_open_file+codfilename);                      ^	111: error in rule798:       if ioresult<>0 then fatal(cannot_open_file+codfilename);                                    ^	111: error in rule798:       if ioresult<>0 then fatal(cannot_open_file+codfilename);                                                     ^	111: error in rule798:       if ioresult<>0 then fatal(cannot_open_file+codfilename);                                                                 ^	111: error in rule799:     end;         ^	111: error in rule801:   (* parse source grammar: *)       ^	111: error in rule801:   (* parse source grammar: *)                                ^	111: error in rule803:   write('parse ... ');            ^	111: error in rule803:   write('parse ... ');                         ^	111: error in rule807:   next_section;       ^	111: error in rule808:   if debug then writeln(yyout, '{$define yydebug}');       ^	111: error in rule808:   if debug then writeln(yyout, '{$define yydebug}');                            ^	111: error in rule808:   if debug then writeln(yyout, '{$define yydebug}');                                  ^	111: error in rule808:   if debug then writeln(yyout, '{$define yydebug}');                                                       ^	111: error in rule810:   if yyparse=0 then       ^	111: error in rule817:   if errors=0 then writeln('DONE');       ^	111: error in rule819:   (* close files: *)       ^	111: error in rule819:   (* close files: *)                       ^	111: error in rule821:   close(yyin); close(yyout); close(yylst); close(yycod);            ^	111: error in rule821:   close(yyin); close(yyout); close(yylst); close(yycod);                 ^	111: error in rule821:   close(yyin); close(yyout); close(yylst); close(yycod);                    ^	111: error in rule821:   close(yyin); close(yyout); close(yylst); close(yycod);                         ^	111: error in rule821:   close(yyin); close(yyout); close(yylst); close(yycod);                               ^	111: error in rule821:   close(yyin); close(yyout); close(yylst); close(yycod);                                  ^	111: error in rule821:   close(yyin); close(yyout); close(yylst); close(yycod);                                       ^	111: error in rule821:   close(yyin); close(yyout); close(yylst); close(yycod);                                             ^	111: error in rule821:   close(yyin); close(yyout); close(yylst); close(yycod);                                                ^	111: error in rule821:   close(yyin); close(yyout); close(yylst); close(yycod);                                                     ^	111: error in rule821:   close(yyin); close(yyout); close(yylst); close(yycod);                                                           ^	111: error in rule823:   (* print statistics: *)       ^	111: error in rule823:   (* print statistics: *)                            ^	111: error in rule825:   if errors>0 then                ^	111: error in rule826:     writeln( lno, ' lines, ',                ^	111: error in rule826:     writeln( lno, ' lines, ',                     ^	111: error in rule826:     writeln( lno, ' lines, ',                                 ^	111: error in rule827:              errors, ' errors found.' )                        ^	111: error in rule827:              errors, ' errors found.' )                                           ^	111: error in rule830:       writeln( lno, ' lines, ',                  ^	111: error in rule830:       writeln( lno, ' lines, ',                       ^	111: error in rule830:       writeln( lno, ' lines, ',                                   ^	111: error in rule831:                n_rules-1, '/', max_rules-1, ' rules, ',                           ^	111: error in rule831:                n_rules-1, '/', max_rules-1, ' rules, ',                                  ^	111: error in rule831:                n_rules-1, '/', max_rules-1, ' rules, ',                                             ^	111: error in rule831:                n_rules-1, '/', max_rules-1, ' rules, ',                                                           ^	111: error in rule832:                n_states, '/', max_states, ' s, ',                            ^	111: error in rule832:                n_states, '/', max_states, ' s, ',                                 ^	111: error in rule832:                n_states, '/', max_states, ' s, ',                                             ^	111: error in rule832:                n_states, '/', max_states, ' s, ',                                                     ^	111: error in rule833:                n_items, '/', max_items, ' i, ',                           ^	111: error in rule833:                n_items, '/', max_items, ' i, ',                                ^	111: error in rule833:                n_items, '/', max_items, ' i, ',                                           ^	111: error in rule833:                n_items, '/', max_items, ' i, ',                                                   ^	111: error in rule834:                n_trans, '/', max_trans, ' t, ',                           ^	111: error in rule834:                n_trans, '/', max_trans, ' t, ',                                ^	111: error in rule834:                n_trans, '/', max_trans, ' t, ',                                           ^	111: error in rule834:                n_trans, '/', max_trans, ' t, ',                                                   ^	111: error in rule835:                n_redns, '/', max_redns, ' r.');                           ^	111: error in rule835:                n_redns, '/', max_redns, ' r.');                                ^	111: error in rule835:                n_redns, '/', max_redns, ' r.');                                           ^	111: error in rule835:                n_redns, '/', max_redns, ' r.');                                                  ^	111: error in rule836:       if shift_reduce>0 then           ^	111: error in rule836:       if shift_reduce>0 then                          ^	111: error in rule837:         writeln(shift_reduce, ' shift/reduce conflicts.');                    ^	111: error in rule837:         writeln(shift_reduce, ' shift/reduce conflicts.');                                 ^	111: error in rule837:         writeln(shift_reduce, ' shift/reduce conflicts.');                                                             ^	111: error in rule838:       if reduce_reduce>0 then           ^	111: error in rule838:       if reduce_reduce>0 then                           ^	111: error in rule839:         writeln(reduce_reduce, ' reduce/reduce conflicts.');                    ^	111: error in rule839:         writeln(reduce_reduce, ' reduce/reduce conflicts.');                                  ^	111: error in rule839:         writeln(reduce_reduce, ' reduce/reduce conflicts.');                                                               ^	111: error in rule840:       if never_reduced>0 then           ^	111: error in rule840:       if never_reduced>0 then                           ^	111: error in rule841:         writeln(never_reduced, ' rules never reduced.');                    ^	111: error in rule841:         writeln(never_reduced, ' rules never reduced.');                                  ^	111: error in rule841:         writeln(never_reduced, ' rules never reduced.');                                                           ^	111: error in rule842:     end;         ^	111: error in rule844:   if warnings>0 then writeln(warnings, ' warnings.');       ^	111: error in rule844:   if warnings>0 then writeln(warnings, ' warnings.');                  ^	111: error in rule844:   if warnings>0 then writeln(warnings, ' warnings.');                                 ^	111: error in rule844:   if warnings>0 then writeln(warnings, ' warnings.');                                          ^	111: error in rule844:   if warnings>0 then writeln(warnings, ' warnings.');                                                        ^	111: error in rule846: {$ifndef fpc}     ^	111: error in rule846: {$ifndef fpc}       ^	112: syntax error847: {$IFNDEF Win32}       ^	112: syntax error848:   writeln( n_bytes, '/', max_bytes, ' bytes of memory used.');              ^	111: error in rule848:   writeln( n_bytes, '/', max_bytes, ' bytes of memory used.');                       ^	111: error in rule848:   writeln( n_bytes, '/', max_bytes, ' bytes of memory used.');                            ^	111: error in rule848:   writeln( n_bytes, '/', max_bytes, ' bytes of memory used.');                                       ^	111: error in rule