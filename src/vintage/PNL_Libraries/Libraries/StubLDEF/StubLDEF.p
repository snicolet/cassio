unit StubLDEF;interface	uses		Types, Lists;		{$main}	procedure Main (message: integer; select: boolean; var r: Rect; c: Cell; dataOffset, dataLen: integer; lh: ListHandle);implementation{$setc use_gestalt := 0}{$ifc use_gestalt}	uses		GestaltEqu;			const		gestaltOurLDEFAttr = 'Ldef';{$endc}	procedure CallProc (message: integer; select: boolean; var r: Rect; c: Cell; dataOffset, dataLen: integer; lh: ListHandle; proc: procPtr);	inline		$205F, $4E90;	procedure Main (message: integer; select: boolean; var r: Rect; c: Cell; dataOffset, dataLen: integer; lh: ListHandle);		var			proc: ProcPtr;{$ifc use_gestalt}			gv: longint;{$endc}	begin{$ifc use_gestalt}		if Gestalt( gestaltOurLDEFAttr, gv ) = noErr then begin			proc := ProcPtr(gv);		end else begin			proc := nil;		end;{$elsec}		proc := ProcPtr(lh^^.refCon);{$endc}		if proc <> nil then begin			CallProc(message, select, r, c, dataOffset, dataLen, lh, proc);		end;	end;end.