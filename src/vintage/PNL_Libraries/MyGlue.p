unit MyGlue;interfaceimplementation{$Z+}	procedure UpperString (var theString: Str255; diacSensitive: BOOLEAN);	begin		UprString(theString, diacSensitive);	end;	procedure DialogCut (theDialog: DialogPtr);	begin		DlgCut(theDialog);	end;	procedure DialogPaste (theDialog: DialogPtr);	begin		DlgPaste(theDialog);	end;	procedure DialogCopy (theDialog: DialogPtr);	begin		DlgCopy(theDialog);	end;	procedure DialogDelete (theDialog: DialogPtr);	begin		DlgDelete(theDialog);	end;	function RawFindFolder (vRefNum: INTEGER; folderType: OSType; createFolder: BOOLEAN; var foundVRefNum: INTEGER; var foundDirID: LONGINT): OSErr;	inline		$7000, $A823;	function FindFolder (vRefNum: INTEGER; folderType: OSType; createFolder: BOOLEAN; var foundVRefNum: INTEGER; var foundDirID: LONGINT): OSErr;		var			oe: OSErr;			gv: longint;			sysenv: sysEnvRec;			procID: longint;	begin		if (Gestalt(gestaltFindFolderAttr, gv) = noErr) & BTST(gv, gestaltFindFolderPresent) then begin			oe := RawFindFolder(vRefNum, folderType, createFolder, foundVRefNum, foundDirID);		end		else begin			oe := SysEnvirons(1, sysEnv);			if oe = noErr then begin				oe := GetWDInfo(sysEnv.sysVRefNum, foundVRefNum, foundDirID, procID);			end;		end;		FindFolder := oe;	end;	procedure DateToSeconds (var d: DateTimeRec; var secs: LONGINT);	begin		Date2Secs(d, secs);	end;	procedure TESetWordBreak (wBrkProc: ProcPtr; hTE: TEHandle);	begin		SetWordBreak(wBrkProc, hTE);	end;end.