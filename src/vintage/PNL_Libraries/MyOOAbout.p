unit MyOOAbout;interface	uses		Types, 		MyOOMainLoop;	const		agwtAbout = '¥About';	type		AboutObject = object(DObject)				procedure Create (id: integer);				override;				procedure DoItem (item: integer);				override;				function GetString (index: integer): Str255;				procedure DrawUserItem( item: integer );				override;			end;	var		about_click_count: longint;	procedure StartupAbout;	procedure ConfigureAbout (obj: AboutObject);	procedure UpdateAboutBox;	procedure OpenAboutBox;	procedure CloseAboutBox;implementation	uses		Memory, Fonts, TextEdit, Resources, Icons,Quickdraw, Windows, TextUtils, Dialogs, AppleEvents,		MyMenus, MyDialogs, MyStrings, MyVersionResource, MySystemGlobals, MyWindows, MyAssertions,		MyFMenus, AERegistry, MyAEUtils, AEObjects, MyStrh, MyUtils, MyTypes, MyStartup, MyOOMenus, 		MyRecordedMenuCommands,		BaseGlobals;	const		about_dialog_ID = 128;		about_strh_id = 928;	var		about_object: AboutObject;	procedure AboutObject.DoItem (item: integer);		var			r: Rect;	begin		about_click_count := about_click_count + 1;		GetDItemRect(window, item, r);		SetPort(window);		InvalRect(r);	end;	function AboutObject.GetString (index: integer): Str255;		var			vers: versionRecord;	begin		GetVersion(vers);		case index of			0: 				GetString := vers.longVersion;			1: 				GetString := vers.shortVersion;			2: 				GetString := vers.name;			otherwise begin				GetString := '???';			end;		end;	end;	procedure AboutObject.DrawUserItem( item: integer );		var			s, t: Str255;			i, n: integer;	begin		GetIndString(s, about_strh_id, item);		if s <> '' then begin			i := 1;			while (i < length(s)) do begin				if s[i] = '^' then begin					n := ord(s[i+1])-48;					if n>= 10 then begin						n := n-7;					end;					t := GetString(n);					Delete(s, i, 2);					Insert(t, s, i);					i := i + length(t);				end else begin					i := i + 1;				end;			end;			DisplayStyledString( window, item, s );		end else begin			inherited DrawUserItem( item );		end;	end;	procedure AboutObject.Create (id: integer);		var			s: Str255;			vers: versionRecord;	begin		UseResFile(app_resfile);		inherited Create(id);		SetPort(window);		close_hides_window := true;		AppleGuideWindowType := agwtAbout;		about_click_count := 0;		SetMyFont(MFT_Geneva12);		GetWTitle(window, s);		GetVersion(vers);		SPrintS3(s, s, vers.name, '', '');		SetWTitle(window, s);		HandleAllUserItems;	end;	procedure DoAbout;	begin		about_click_count := about_click_count + 1;		if GetWindowVisible(about_object.window) then begin			if FrontWindow <> about_object.window then begin				SelectWindow(about_object.window);			end;		end else begin			SelectWindow(about_object.window);			ShowWindow(about_object.window);		end;	end;	function AboutEnabled: boolean;	begin		AboutEnabled := not IsWObjectFront(about_object);	end;		procedure UpdateAboutBox;	begin		SetPort(about_object.window);		InvalRect(about_object.window^.portRect);	end;	procedure CloseAboutBox;	begin		about_object.DoClose;	end;	procedure OpenAboutBox;	begin		DoAbout;		SetPort(about_object.window);		DrawDialog(about_object.window);		ValidRect(about_object.window^.portRect);	end;	function InitAbout(var msg: integer): OSStatus;	begin{$unused(msg)}		SetRecordedMenuCommand( kAECoreSuite, kAEAbout, Cabout, AboutEnabled, DoAbout );		about_object.Create(about_dialog_ID);		InitAbout := noErr;	end;	procedure ConfigureAbout (obj: AboutObject);	begin		StartupAbout;		Assert(obj <> nil);		Assert(obj.resid <> about_dialog_ID); { Hack - ensure that the about box was not already created like it used to be }		about_object := obj;	end;		procedure StartupAbout;	begin		StartupDialogs;		StartupFMenus;		StartupMainLoop;		StartupOOMenus;		StartupRecordedMenuCommands;		SetStartup(InitAbout, nil, 0, nil);	end;	end.