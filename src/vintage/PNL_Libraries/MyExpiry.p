unit MyExpiry;interface	uses		Types;	function ExpiredVersion (cs:longint; notify, expire: integer): boolean;{ Pass it compdate, and the number of months until it notifies/expires }implementation	uses		OSUtils, MyStrings, MyVersionResource, MyEmergencyNotifier, MyUtils, MyTypes;	function ExpiredVersion (cs:longint; notify, expire: integer): boolean;		var			date: UInt32;			diff: longint;			vers: versionRecord;	begin		ExpiredVersion := false;		GetVersion(vers);		if vers.numericVersion.stage <> $80 then begin			GetDateTime(date);			if compsecs > cs then begin				cs := compsecs;			end;			diff := (date - cs) div (31*day_in_seconds);			if diff >= expire then begin				EmergencyNotify('This developmental version has expired.  Set your clock back, or get a new version');				ExpiredVersion := true;			end else if diff >= notify then begin				EmergencyNotify('This developmental version has expired.  It will work for a while, and then stop working forever.  Get a new version');			end;		end;	end;end.