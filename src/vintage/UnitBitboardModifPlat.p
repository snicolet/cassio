UNIT UnitBitboardModifPlat;

INTERFACE







 USES UnitDefCassio;





function ModifPlatBitboard(coup,vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32; var resultat : bitboard; var diffPions : SInt32) : SInt32;    ATTRIBUTE_NAME('ModifPlatBitboard')


function ModifPlatBitboard_a1(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32; var resultat : bitboard; var diffPions : SInt32) : SInt32;      ATTRIBUTE_NAME('ModifPlatBitboard_a1')
function ModifPlatBitboard_b1(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32; var resultat : bitboard; var diffPions : SInt32) : SInt32;      ATTRIBUTE_NAME('ModifPlatBitboard_b1')
function ModifPlatBitboard_c1(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32; var resultat : bitboard; var diffPions : SInt32) : SInt32;      ATTRIBUTE_NAME('ModifPlatBitboard_c1')
function ModifPlatBitboard_d1(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32; var resultat : bitboard; var diffPions : SInt32) : SInt32;      ATTRIBUTE_NAME('ModifPlatBitboard_d1')
function ModifPlatBitboard_e1(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32; var resultat : bitboard; var diffPions : SInt32) : SInt32;      ATTRIBUTE_NAME('ModifPlatBitboard_e1')
function ModifPlatBitboard_f1(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32; var resultat : bitboard; var diffPions : SInt32) : SInt32;      ATTRIBUTE_NAME('ModifPlatBitboard_f1')
function ModifPlatBitboard_g1(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32; var resultat : bitboard; var diffPions : SInt32) : SInt32;      ATTRIBUTE_NAME('ModifPlatBitboard_g1')
function ModifPlatBitboard_h1(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32; var resultat : bitboard; var diffPions : SInt32) : SInt32;      ATTRIBUTE_NAME('ModifPlatBitboard_h1')
function ModifPlatBitboard_a2(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32; var resultat : bitboard; var diffPions : SInt32) : SInt32;      ATTRIBUTE_NAME('ModifPlatBitboard_a2')
function ModifPlatBitboard_b2(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32; var resultat : bitboard; var diffPions : SInt32) : SInt32;      ATTRIBUTE_NAME('ModifPlatBitboard_b2')
function ModifPlatBitboard_c2(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32; var resultat : bitboard; var diffPions : SInt32) : SInt32;      ATTRIBUTE_NAME('ModifPlatBitboard_c2')
function ModifPlatBitboard_d2(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32; var resultat : bitboard; var diffPions : SInt32) : SInt32;      ATTRIBUTE_NAME('ModifPlatBitboard_d2')
function ModifPlatBitboard_e2(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32; var resultat : bitboard; var diffPions : SInt32) : SInt32;      ATTRIBUTE_NAME('ModifPlatBitboard_e2')
function ModifPlatBitboard_f2(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32; var resultat : bitboard; var diffPions : SInt32) : SInt32;      ATTRIBUTE_NAME('ModifPlatBitboard_f2')
function ModifPlatBitboard_g2(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32; var resultat : bitboard; var diffPions : SInt32) : SInt32;      ATTRIBUTE_NAME('ModifPlatBitboard_g2')
function ModifPlatBitboard_h2(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32; var resultat : bitboard; var diffPions : SInt32) : SInt32;      ATTRIBUTE_NAME('ModifPlatBitboard_h2')
function ModifPlatBitboard_a3(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32; var resultat : bitboard; var diffPions : SInt32) : SInt32;      ATTRIBUTE_NAME('ModifPlatBitboard_a3')
function ModifPlatBitboard_b3(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32; var resultat : bitboard; var diffPions : SInt32) : SInt32;      ATTRIBUTE_NAME('ModifPlatBitboard_b3')
function ModifPlatBitboard_c3(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32; var resultat : bitboard; var diffPions : SInt32) : SInt32;      ATTRIBUTE_NAME('ModifPlatBitboard_c3')
function ModifPlatBitboard_d3(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32; var resultat : bitboard; var diffPions : SInt32) : SInt32;      ATTRIBUTE_NAME('ModifPlatBitboard_d3')
function ModifPlatBitboard_e3(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32; var resultat : bitboard; var diffPions : SInt32) : SInt32;      ATTRIBUTE_NAME('ModifPlatBitboard_e3')
function ModifPlatBitboard_f3(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32; var resultat : bitboard; var diffPions : SInt32) : SInt32;      ATTRIBUTE_NAME('ModifPlatBitboard_f3')
function ModifPlatBitboard_g3(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32; var resultat : bitboard; var diffPions : SInt32) : SInt32;      ATTRIBUTE_NAME('ModifPlatBitboard_g3')
function ModifPlatBitboard_h3(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32; var resultat : bitboard; var diffPions : SInt32) : SInt32;      ATTRIBUTE_NAME('ModifPlatBitboard_h3')
function ModifPlatBitboard_a4(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32; var resultat : bitboard; var diffPions : SInt32) : SInt32;      ATTRIBUTE_NAME('ModifPlatBitboard_a4')
function ModifPlatBitboard_b4(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32; var resultat : bitboard; var diffPions : SInt32) : SInt32;      ATTRIBUTE_NAME('ModifPlatBitboard_b4')
function ModifPlatBitboard_c4(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32; var resultat : bitboard; var diffPions : SInt32) : SInt32;      ATTRIBUTE_NAME('ModifPlatBitboard_c4')
function ModifPlatBitboard_d4(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32; var resultat : bitboard; var diffPions : SInt32) : SInt32;      ATTRIBUTE_NAME('ModifPlatBitboard_d4')
function ModifPlatBitboard_e4(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32; var resultat : bitboard; var diffPions : SInt32) : SInt32;      ATTRIBUTE_NAME('ModifPlatBitboard_e4')
function ModifPlatBitboard_f4(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32; var resultat : bitboard; var diffPions : SInt32) : SInt32;      ATTRIBUTE_NAME('ModifPlatBitboard_f4')
function ModifPlatBitboard_g4(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32; var resultat : bitboard; var diffPions : SInt32) : SInt32;      ATTRIBUTE_NAME('ModifPlatBitboard_g4')
function ModifPlatBitboard_h4(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32; var resultat : bitboard; var diffPions : SInt32) : SInt32;      ATTRIBUTE_NAME('ModifPlatBitboard_h4')
function ModifPlatBitboard_a5(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32; var resultat : bitboard; var diffPions : SInt32) : SInt32;      ATTRIBUTE_NAME('ModifPlatBitboard_a5')
function ModifPlatBitboard_b5(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32; var resultat : bitboard; var diffPions : SInt32) : SInt32;      ATTRIBUTE_NAME('ModifPlatBitboard_b5')
function ModifPlatBitboard_c5(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32; var resultat : bitboard; var diffPions : SInt32) : SInt32;      ATTRIBUTE_NAME('ModifPlatBitboard_c5')
function ModifPlatBitboard_d5(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32; var resultat : bitboard; var diffPions : SInt32) : SInt32;      ATTRIBUTE_NAME('ModifPlatBitboard_d5')
function ModifPlatBitboard_e5(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32; var resultat : bitboard; var diffPions : SInt32) : SInt32;      ATTRIBUTE_NAME('ModifPlatBitboard_e5')
function ModifPlatBitboard_f5(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32; var resultat : bitboard; var diffPions : SInt32) : SInt32;      ATTRIBUTE_NAME('ModifPlatBitboard_f5')
function ModifPlatBitboard_g5(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32; var resultat : bitboard; var diffPions : SInt32) : SInt32;      ATTRIBUTE_NAME('ModifPlatBitboard_g5')
function ModifPlatBitboard_h5(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32; var resultat : bitboard; var diffPions : SInt32) : SInt32;      ATTRIBUTE_NAME('ModifPlatBitboard_h5')
function ModifPlatBitboard_a6(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32; var resultat : bitboard; var diffPions : SInt32) : SInt32;      ATTRIBUTE_NAME('ModifPlatBitboard_a6')
function ModifPlatBitboard_b6(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32; var resultat : bitboard; var diffPions : SInt32) : SInt32;      ATTRIBUTE_NAME('ModifPlatBitboard_b6')
function ModifPlatBitboard_c6(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32; var resultat : bitboard; var diffPions : SInt32) : SInt32;      ATTRIBUTE_NAME('ModifPlatBitboard_c6')
function ModifPlatBitboard_d6(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32; var resultat : bitboard; var diffPions : SInt32) : SInt32;      ATTRIBUTE_NAME('ModifPlatBitboard_d6')
function ModifPlatBitboard_e6(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32; var resultat : bitboard; var diffPions : SInt32) : SInt32;      ATTRIBUTE_NAME('ModifPlatBitboard_e6')
function ModifPlatBitboard_f6(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32; var resultat : bitboard; var diffPions : SInt32) : SInt32;      ATTRIBUTE_NAME('ModifPlatBitboard_f6')
function ModifPlatBitboard_g6(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32; var resultat : bitboard; var diffPions : SInt32) : SInt32;      ATTRIBUTE_NAME('ModifPlatBitboard_g6')
function ModifPlatBitboard_h6(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32; var resultat : bitboard; var diffPions : SInt32) : SInt32;      ATTRIBUTE_NAME('ModifPlatBitboard_h6')
function ModifPlatBitboard_a7(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32; var resultat : bitboard; var diffPions : SInt32) : SInt32;      ATTRIBUTE_NAME('ModifPlatBitboard_a7')
function ModifPlatBitboard_b7(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32; var resultat : bitboard; var diffPions : SInt32) : SInt32;      ATTRIBUTE_NAME('ModifPlatBitboard_b7')
function ModifPlatBitboard_c7(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32; var resultat : bitboard; var diffPions : SInt32) : SInt32;      ATTRIBUTE_NAME('ModifPlatBitboard_c7')
function ModifPlatBitboard_d7(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32; var resultat : bitboard; var diffPions : SInt32) : SInt32;      ATTRIBUTE_NAME('ModifPlatBitboard_d7')
function ModifPlatBitboard_e7(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32; var resultat : bitboard; var diffPions : SInt32) : SInt32;      ATTRIBUTE_NAME('ModifPlatBitboard_e7')
function ModifPlatBitboard_f7(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32; var resultat : bitboard; var diffPions : SInt32) : SInt32;      ATTRIBUTE_NAME('ModifPlatBitboard_f7')
function ModifPlatBitboard_g7(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32; var resultat : bitboard; var diffPions : SInt32) : SInt32;      ATTRIBUTE_NAME('ModifPlatBitboard_g7')
function ModifPlatBitboard_h7(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32; var resultat : bitboard; var diffPions : SInt32) : SInt32;      ATTRIBUTE_NAME('ModifPlatBitboard_h7')
function ModifPlatBitboard_a8(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32; var resultat : bitboard; var diffPions : SInt32) : SInt32;      ATTRIBUTE_NAME('ModifPlatBitboard_a8')
function ModifPlatBitboard_b8(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32; var resultat : bitboard; var diffPions : SInt32) : SInt32;      ATTRIBUTE_NAME('ModifPlatBitboard_b8')
function ModifPlatBitboard_c8(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32; var resultat : bitboard; var diffPions : SInt32) : SInt32;      ATTRIBUTE_NAME('ModifPlatBitboard_c8')
function ModifPlatBitboard_d8(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32; var resultat : bitboard; var diffPions : SInt32) : SInt32;      ATTRIBUTE_NAME('ModifPlatBitboard_d8')
function ModifPlatBitboard_e8(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32; var resultat : bitboard; var diffPions : SInt32) : SInt32;      ATTRIBUTE_NAME('ModifPlatBitboard_e8')
function ModifPlatBitboard_f8(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32; var resultat : bitboard; var diffPions : SInt32) : SInt32;      ATTRIBUTE_NAME('ModifPlatBitboard_f8')
function ModifPlatBitboard_g8(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32; var resultat : bitboard; var diffPions : SInt32) : SInt32;      ATTRIBUTE_NAME('ModifPlatBitboard_g8')
function ModifPlatBitboard_h8(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32; var resultat : bitboard; var diffPions : SInt32) : SInt32;      ATTRIBUTE_NAME('ModifPlatBitboard_h8')




IMPLEMENTATION


{BEGIN_USE_CLAUSE}



{END_USE_CLAUSE}
















function ModifPlatBitboard(coup,vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32; var resultat : bitboard; var diffPions : SInt32) : SInt32;
var nbprise : SInt32;

begin
  with resultat do
    begin
      nbprise := 0;

		  case coup of
        11 :    { A1 }
          begin
            if BAnd(opp_bits_low,$00000002) <> 0 then { if plat[B1] = adversaire then }
              begin
                if BAnd(opp_bits_low,$00000004) <> 0 then { if plat[C1] = adversaire then }
                  begin
                    if BAnd(opp_bits_low,$00000008) <> 0 then { if plat[D1] = adversaire then }
                      begin
                        if BAnd(opp_bits_low,$00000010) <> 0 then { if plat[E1] = adversaire then }
                          begin
                            if BAnd(opp_bits_low,$00000020) <> 0 then { if plat[F1] = adversaire then }
                              begin
                                if BAnd(opp_bits_low,$00000040) <> 0 then { if plat[G1] = adversaire then }
                                  begin
                                    if BAnd(my_bits_low,$00000080) <> 0 then { if plat[H1] = couleur then }
                                      begin
                                        nbprise := nbprise + 12;
                                        my_bits_low := BOr(my_bits_low,$0000007E);
                                        opp_bits_low := BXOr(opp_bits_low,$0000007E);
                                      end;
                                  end
                                else
                                if BAnd(my_bits_low,$00000040) <> 0 then { if plat[G1] = couleur then }
                                  begin
                                    nbprise := nbprise + 10;
                                    my_bits_low := BOr(my_bits_low,$0000003E);
                                    opp_bits_low := BXOr(opp_bits_low,$0000003E);
                                  end;
                              end
                            else
                            if BAnd(my_bits_low,$00000020) <> 0 then { if plat[F1] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$0000001E);
                                opp_bits_low := BXOr(opp_bits_low,$0000001E);
                              end;
                          end
                        else
                        if BAnd(my_bits_low,$00000010) <> 0 then { if plat[E1] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$0000000E);
                            opp_bits_low := BXOr(opp_bits_low,$0000000E);
                          end;
                      end
                    else
                    if BAnd(my_bits_low,$00000008) <> 0 then { if plat[D1] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$00000006);
                        opp_bits_low := BXOr(opp_bits_low,$00000006);
                      end;
                  end
                else
                if BAnd(my_bits_low,$00000004) <> 0 then { if plat[C1] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00000002);
                    opp_bits_low := BXOr(opp_bits_low,$00000002);
                  end;
              end;
            if BAnd(opp_bits_low,$00000200) <> 0 then { if plat[B2] = adversaire then }
              begin
                if BAnd(opp_bits_low,$00040000) <> 0 then { if plat[C3] = adversaire then }
                  begin
                    if BAnd(opp_bits_low,$08000000) <> 0 then { if plat[D4] = adversaire then }
                      begin
                        if BAnd(opp_bits_high,$00000010) <> 0 then { if plat[E5] = adversaire then }
                          begin
                            if BAnd(opp_bits_high,$00002000) <> 0 then { if plat[F6] = adversaire then }
                              begin
                                if BAnd(opp_bits_high,$00400000) <> 0 then { if plat[G7] = adversaire then }
                                  begin
                                    if BAnd(my_bits_high,$80000000) <> 0 then { if plat[H8] = couleur then }
                                      begin
                                        nbprise := nbprise + 12;
                                        my_bits_low := BOr(my_bits_low,$08040200);
                                        opp_bits_low := BXOr(opp_bits_low,$08040200);
                                        my_bits_high := BOr(my_bits_high,$00402010);
                                        opp_bits_high := BXOr(opp_bits_high,$00402010);
                                      end;
                                  end
                                else
                                if BAnd(my_bits_high,$00400000) <> 0 then { if plat[G7] = couleur then }
                                  begin
                                    nbprise := nbprise + 10;
                                    my_bits_low := BOr(my_bits_low,$08040200);
                                    opp_bits_low := BXOr(opp_bits_low,$08040200);
                                    my_bits_high := BOr(my_bits_high,$00002010);
                                    opp_bits_high := BXOr(opp_bits_high,$00002010);
                                  end;
                              end
                            else
                            if BAnd(my_bits_high,$00002000) <> 0 then { if plat[F6] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$08040200);
                                opp_bits_low := BXOr(opp_bits_low,$08040200);
                                my_bits_high := BOr(my_bits_high,$00000010);
                                opp_bits_high := BXOr(opp_bits_high,$00000010);
                              end;
                          end
                        else
                        if BAnd(my_bits_high,$00000010) <> 0 then { if plat[E5] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$08040200);
                            opp_bits_low := BXOr(opp_bits_low,$08040200);
                          end;
                      end
                    else
                    if BAnd(my_bits_low,$08000000) <> 0 then { if plat[D4] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$00040200);
                        opp_bits_low := BXOr(opp_bits_low,$00040200);
                      end;
                  end
                else
                if BAnd(my_bits_low,$00040000) <> 0 then { if plat[C3] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00000200);
                    opp_bits_low := BXOr(opp_bits_low,$00000200);
                  end;
              end;
            if BAnd(opp_bits_low,$00000100) <> 0 then { if plat[A2] = adversaire then }
              begin
                if BAnd(opp_bits_low,$00010000) <> 0 then { if plat[A3] = adversaire then }
                  begin
                    if BAnd(opp_bits_low,$01000000) <> 0 then { if plat[A4] = adversaire then }
                      begin
                        if BAnd(opp_bits_high,$00000001) <> 0 then { if plat[A5] = adversaire then }
                          begin
                            if BAnd(opp_bits_high,$00000100) <> 0 then { if plat[A6] = adversaire then }
                              begin
                                if BAnd(opp_bits_high,$00010000) <> 0 then { if plat[A7] = adversaire then }
                                  begin
                                    if BAnd(my_bits_high,$01000000) <> 0 then { if plat[A8] = couleur then }
                                      begin
                                        nbprise := nbprise + 12;
                                        my_bits_low := BOr(my_bits_low,$01010100);
                                        opp_bits_low := BXOr(opp_bits_low,$01010100);
                                        my_bits_high := BOr(my_bits_high,$00010101);
                                        opp_bits_high := BXOr(opp_bits_high,$00010101);
                                      end;
                                  end
                                else
                                if BAnd(my_bits_high,$00010000) <> 0 then { if plat[A7] = couleur then }
                                  begin
                                    nbprise := nbprise + 10;
                                    my_bits_low := BOr(my_bits_low,$01010100);
                                    opp_bits_low := BXOr(opp_bits_low,$01010100);
                                    my_bits_high := BOr(my_bits_high,$00000101);
                                    opp_bits_high := BXOr(opp_bits_high,$00000101);
                                  end;
                              end
                            else
                            if BAnd(my_bits_high,$00000100) <> 0 then { if plat[A6] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$01010100);
                                opp_bits_low := BXOr(opp_bits_low,$01010100);
                                my_bits_high := BOr(my_bits_high,$00000001);
                                opp_bits_high := BXOr(opp_bits_high,$00000001);
                              end;
                          end
                        else
                        if BAnd(my_bits_high,$00000001) <> 0 then { if plat[A5] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$01010100);
                            opp_bits_low := BXOr(opp_bits_low,$01010100);
                          end;
                      end
                    else
                    if BAnd(my_bits_low,$01000000) <> 0 then { if plat[A4] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$00010100);
                        opp_bits_low := BXOr(opp_bits_low,$00010100);
                      end;
                  end
                else
                if BAnd(my_bits_low,$00010000) <> 0 then { if plat[A3] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00000100);
                    opp_bits_low := BXOr(opp_bits_low,$00000100);
                  end;
              end;
            if (nbPrise <> 0)
              then
                begin
                  diffPions := succ(diffPions+nbprise);
                  ModifPlatBitboard := BXOr(vecteurParite,$00000001);
                  my_bits_low := BOr(my_bits_low,$00000001);  { place the disc in A1 }
                  g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
                  g_my_bits_high  := opp_bits_high;
                  g_opp_bits_low  := my_bits_low;
                  g_opp_bits_high := my_bits_high;
                end
              else
                ModifPlatBitboard := vecteurParite;
          end;
        12 :    { B1 }
          begin
            if BAnd(opp_bits_low,$00000004) <> 0 then { if plat[C1] = adversaire then }
              begin
                if BAnd(opp_bits_low,$00000008) <> 0 then { if plat[D1] = adversaire then }
                  begin
                    if BAnd(opp_bits_low,$00000010) <> 0 then { if plat[E1] = adversaire then }
                      begin
                        if BAnd(opp_bits_low,$00000020) <> 0 then { if plat[F1] = adversaire then }
                          begin
                            if BAnd(opp_bits_low,$00000040) <> 0 then { if plat[G1] = adversaire then }
                              begin
                                if BAnd(my_bits_low,$00000080) <> 0 then { if plat[H1] = couleur then }
                                  begin
                                    nbprise := nbprise + 10;
                                    my_bits_low := BOr(my_bits_low,$0000007C);
                                    opp_bits_low := BXOr(opp_bits_low,$0000007C);
                                  end;
                              end
                            else
                            if BAnd(my_bits_low,$00000040) <> 0 then { if plat[G1] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$0000003C);
                                opp_bits_low := BXOr(opp_bits_low,$0000003C);
                              end;
                          end
                        else
                        if BAnd(my_bits_low,$00000020) <> 0 then { if plat[F1] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$0000001C);
                            opp_bits_low := BXOr(opp_bits_low,$0000001C);
                          end;
                      end
                    else
                    if BAnd(my_bits_low,$00000010) <> 0 then { if plat[E1] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$0000000C);
                        opp_bits_low := BXOr(opp_bits_low,$0000000C);
                      end;
                  end
                else
                if BAnd(my_bits_low,$00000008) <> 0 then { if plat[D1] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00000004);
                    opp_bits_low := BXOr(opp_bits_low,$00000004);
                  end;
              end;
            if BAnd(opp_bits_low,$00000400) <> 0 then { if plat[C2] = adversaire then }
              begin
                if BAnd(opp_bits_low,$00080000) <> 0 then { if plat[D3] = adversaire then }
                  begin
                    if BAnd(opp_bits_low,$10000000) <> 0 then { if plat[E4] = adversaire then }
                      begin
                        if BAnd(opp_bits_high,$00000020) <> 0 then { if plat[F5] = adversaire then }
                          begin
                            if BAnd(opp_bits_high,$00004000) <> 0 then { if plat[G6] = adversaire then }
                              begin
                                if BAnd(my_bits_high,$00800000) <> 0 then { if plat[H7] = couleur then }
                                  begin
                                    nbprise := nbprise + 10;
                                    my_bits_low := BOr(my_bits_low,$10080400);
                                    opp_bits_low := BXOr(opp_bits_low,$10080400);
                                    my_bits_high := BOr(my_bits_high,$00004020);
                                    opp_bits_high := BXOr(opp_bits_high,$00004020);
                                  end;
                              end
                            else
                            if BAnd(my_bits_high,$00004000) <> 0 then { if plat[G6] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$10080400);
                                opp_bits_low := BXOr(opp_bits_low,$10080400);
                                my_bits_high := BOr(my_bits_high,$00000020);
                                opp_bits_high := BXOr(opp_bits_high,$00000020);
                              end;
                          end
                        else
                        if BAnd(my_bits_high,$00000020) <> 0 then { if plat[F5] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$10080400);
                            opp_bits_low := BXOr(opp_bits_low,$10080400);
                          end;
                      end
                    else
                    if BAnd(my_bits_low,$10000000) <> 0 then { if plat[E4] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$00080400);
                        opp_bits_low := BXOr(opp_bits_low,$00080400);
                      end;
                  end
                else
                if BAnd(my_bits_low,$00080000) <> 0 then { if plat[D3] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00000400);
                    opp_bits_low := BXOr(opp_bits_low,$00000400);
                  end;
              end;
            if BAnd(opp_bits_low,$00000200) <> 0 then { if plat[B2] = adversaire then }
              begin
                if BAnd(opp_bits_low,$00020000) <> 0 then { if plat[B3] = adversaire then }
                  begin
                    if BAnd(opp_bits_low,$02000000) <> 0 then { if plat[B4] = adversaire then }
                      begin
                        if BAnd(opp_bits_high,$00000002) <> 0 then { if plat[B5] = adversaire then }
                          begin
                            if BAnd(opp_bits_high,$00000200) <> 0 then { if plat[B6] = adversaire then }
                              begin
                                if BAnd(opp_bits_high,$00020000) <> 0 then { if plat[B7] = adversaire then }
                                  begin
                                    if BAnd(my_bits_high,$02000000) <> 0 then { if plat[B8] = couleur then }
                                      begin
                                        nbprise := nbprise + 12;
                                        my_bits_low := BOr(my_bits_low,$02020200);
                                        opp_bits_low := BXOr(opp_bits_low,$02020200);
                                        my_bits_high := BOr(my_bits_high,$00020202);
                                        opp_bits_high := BXOr(opp_bits_high,$00020202);
                                      end;
                                  end
                                else
                                if BAnd(my_bits_high,$00020000) <> 0 then { if plat[B7] = couleur then }
                                  begin
                                    nbprise := nbprise + 10;
                                    my_bits_low := BOr(my_bits_low,$02020200);
                                    opp_bits_low := BXOr(opp_bits_low,$02020200);
                                    my_bits_high := BOr(my_bits_high,$00000202);
                                    opp_bits_high := BXOr(opp_bits_high,$00000202);
                                  end;
                              end
                            else
                            if BAnd(my_bits_high,$00000200) <> 0 then { if plat[B6] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$02020200);
                                opp_bits_low := BXOr(opp_bits_low,$02020200);
                                my_bits_high := BOr(my_bits_high,$00000002);
                                opp_bits_high := BXOr(opp_bits_high,$00000002);
                              end;
                          end
                        else
                        if BAnd(my_bits_high,$00000002) <> 0 then { if plat[B5] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$02020200);
                            opp_bits_low := BXOr(opp_bits_low,$02020200);
                          end;
                      end
                    else
                    if BAnd(my_bits_low,$02000000) <> 0 then { if plat[B4] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$00020200);
                        opp_bits_low := BXOr(opp_bits_low,$00020200);
                      end;
                  end
                else
                if BAnd(my_bits_low,$00020000) <> 0 then { if plat[B3] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00000200);
                    opp_bits_low := BXOr(opp_bits_low,$00000200);
                  end;
              end;
            if (nbPrise <> 0)
              then
                begin
                  diffPions := succ(diffPions+nbprise);
                  ModifPlatBitboard := BXOr(vecteurParite,$00000001);
                  my_bits_low := BOr(my_bits_low,$00000002);  { place the disc in B1 }
                  g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
                  g_my_bits_high  := opp_bits_high;
                  g_opp_bits_low  := my_bits_low;
                  g_opp_bits_high := my_bits_high;
                end
              else
                ModifPlatBitboard := vecteurParite;
          end;
        13 :    { C1 }
          begin
            if BAnd(opp_bits_low,$00000008) <> 0 then { if plat[D1] = adversaire then }
              begin
                if BAnd(opp_bits_low,$00000010) <> 0 then { if plat[E1] = adversaire then }
                  begin
                    if BAnd(opp_bits_low,$00000020) <> 0 then { if plat[F1] = adversaire then }
                      begin
                        if BAnd(opp_bits_low,$00000040) <> 0 then { if plat[G1] = adversaire then }
                          begin
                            if BAnd(my_bits_low,$00000080) <> 0 then { if plat[H1] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$00000078);
                                opp_bits_low := BXOr(opp_bits_low,$00000078);
                              end;
                          end
                        else
                        if BAnd(my_bits_low,$00000040) <> 0 then { if plat[G1] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$00000038);
                            opp_bits_low := BXOr(opp_bits_low,$00000038);
                          end;
                      end
                    else
                    if BAnd(my_bits_low,$00000020) <> 0 then { if plat[F1] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$00000018);
                        opp_bits_low := BXOr(opp_bits_low,$00000018);
                      end;
                  end
                else
                if BAnd(my_bits_low,$00000010) <> 0 then { if plat[E1] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00000008);
                    opp_bits_low := BXOr(opp_bits_low,$00000008);
                  end;
              end;
            if BAnd(opp_bits_low,$00000800) <> 0 then { if plat[D2] = adversaire then }
              begin
                if BAnd(opp_bits_low,$00100000) <> 0 then { if plat[E3] = adversaire then }
                  begin
                    if BAnd(opp_bits_low,$20000000) <> 0 then { if plat[F4] = adversaire then }
                      begin
                        if BAnd(opp_bits_high,$00000040) <> 0 then { if plat[G5] = adversaire then }
                          begin
                            if BAnd(my_bits_high,$00008000) <> 0 then { if plat[H6] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$20100800);
                                opp_bits_low := BXOr(opp_bits_low,$20100800);
                                my_bits_high := BOr(my_bits_high,$00000040);
                                opp_bits_high := BXOr(opp_bits_high,$00000040);
                              end;
                          end
                        else
                        if BAnd(my_bits_high,$00000040) <> 0 then { if plat[G5] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$20100800);
                            opp_bits_low := BXOr(opp_bits_low,$20100800);
                          end;
                      end
                    else
                    if BAnd(my_bits_low,$20000000) <> 0 then { if plat[F4] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$00100800);
                        opp_bits_low := BXOr(opp_bits_low,$00100800);
                      end;
                  end
                else
                if BAnd(my_bits_low,$00100000) <> 0 then { if plat[E3] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00000800);
                    opp_bits_low := BXOr(opp_bits_low,$00000800);
                  end;
              end;
            if BAnd(opp_bits_low,$00000400) <> 0 then { if plat[C2] = adversaire then }
              begin
                if BAnd(opp_bits_low,$00040000) <> 0 then { if plat[C3] = adversaire then }
                  begin
                    if BAnd(opp_bits_low,$04000000) <> 0 then { if plat[C4] = adversaire then }
                      begin
                        if BAnd(opp_bits_high,$00000004) <> 0 then { if plat[C5] = adversaire then }
                          begin
                            if BAnd(opp_bits_high,$00000400) <> 0 then { if plat[C6] = adversaire then }
                              begin
                                if BAnd(opp_bits_high,$00040000) <> 0 then { if plat[C7] = adversaire then }
                                  begin
                                    if BAnd(my_bits_high,$04000000) <> 0 then { if plat[C8] = couleur then }
                                      begin
                                        nbprise := nbprise + 12;
                                        my_bits_low := BOr(my_bits_low,$04040400);
                                        opp_bits_low := BXOr(opp_bits_low,$04040400);
                                        my_bits_high := BOr(my_bits_high,$00040404);
                                        opp_bits_high := BXOr(opp_bits_high,$00040404);
                                      end;
                                  end
                                else
                                if BAnd(my_bits_high,$00040000) <> 0 then { if plat[C7] = couleur then }
                                  begin
                                    nbprise := nbprise + 10;
                                    my_bits_low := BOr(my_bits_low,$04040400);
                                    opp_bits_low := BXOr(opp_bits_low,$04040400);
                                    my_bits_high := BOr(my_bits_high,$00000404);
                                    opp_bits_high := BXOr(opp_bits_high,$00000404);
                                  end;
                              end
                            else
                            if BAnd(my_bits_high,$00000400) <> 0 then { if plat[C6] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$04040400);
                                opp_bits_low := BXOr(opp_bits_low,$04040400);
                                my_bits_high := BOr(my_bits_high,$00000004);
                                opp_bits_high := BXOr(opp_bits_high,$00000004);
                              end;
                          end
                        else
                        if BAnd(my_bits_high,$00000004) <> 0 then { if plat[C5] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$04040400);
                            opp_bits_low := BXOr(opp_bits_low,$04040400);
                          end;
                      end
                    else
                    if BAnd(my_bits_low,$04000000) <> 0 then { if plat[C4] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$00040400);
                        opp_bits_low := BXOr(opp_bits_low,$00040400);
                      end;
                  end
                else
                if BAnd(my_bits_low,$00040000) <> 0 then { if plat[C3] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00000400);
                    opp_bits_low := BXOr(opp_bits_low,$00000400);
                  end;
              end;
            if BAnd(opp_bits_low,$00000200) <> 0 then { if plat[B2] = adversaire then }
              begin
                if BAnd(my_bits_low,$00010000) <> 0 then { if plat[A3] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00000200);
                    opp_bits_low := BXOr(opp_bits_low,$00000200);
                  end;
              end;
            if BAnd(opp_bits_low,$00000002) <> 0 then { if plat[B1] = adversaire then }
              begin
                if BAnd(my_bits_low,$00000001) <> 0 then { if plat[A1] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00000002);
                    opp_bits_low := BXOr(opp_bits_low,$00000002);
                  end;
              end;
            if (nbPrise <> 0)
              then
                begin
                  diffPions := succ(diffPions+nbprise);
                  ModifPlatBitboard := BXOr(vecteurParite,$00000001);
                  my_bits_low := BOr(my_bits_low,$00000004);  { place the disc in C1 }
                  g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
                  g_my_bits_high  := opp_bits_high;
                  g_opp_bits_low  := my_bits_low;
                  g_opp_bits_high := my_bits_high;
                end
              else
                ModifPlatBitboard := vecteurParite;
          end;
        14 :    { D1 }
          begin
            if BAnd(opp_bits_low,$00000010) <> 0 then { if plat[E1] = adversaire then }
              begin
                if BAnd(opp_bits_low,$00000020) <> 0 then { if plat[F1] = adversaire then }
                  begin
                    if BAnd(opp_bits_low,$00000040) <> 0 then { if plat[G1] = adversaire then }
                      begin
                        if BAnd(my_bits_low,$00000080) <> 0 then { if plat[H1] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$00000070);
                            opp_bits_low := BXOr(opp_bits_low,$00000070);
                          end;
                      end
                    else
                    if BAnd(my_bits_low,$00000040) <> 0 then { if plat[G1] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$00000030);
                        opp_bits_low := BXOr(opp_bits_low,$00000030);
                      end;
                  end
                else
                if BAnd(my_bits_low,$00000020) <> 0 then { if plat[F1] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00000010);
                    opp_bits_low := BXOr(opp_bits_low,$00000010);
                  end;
              end;
            if BAnd(opp_bits_low,$00001000) <> 0 then { if plat[E2] = adversaire then }
              begin
                if BAnd(opp_bits_low,$00200000) <> 0 then { if plat[F3] = adversaire then }
                  begin
                    if BAnd(opp_bits_low,$40000000) <> 0 then { if plat[G4] = adversaire then }
                      begin
                        if BAnd(my_bits_high,$00000080) <> 0 then { if plat[H5] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$40201000);
                            opp_bits_low := BXOr(opp_bits_low,$40201000);
                          end;
                      end
                    else
                    if BAnd(my_bits_low,$40000000) <> 0 then { if plat[G4] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$00201000);
                        opp_bits_low := BXOr(opp_bits_low,$00201000);
                      end;
                  end
                else
                if BAnd(my_bits_low,$00200000) <> 0 then { if plat[F3] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00001000);
                    opp_bits_low := BXOr(opp_bits_low,$00001000);
                  end;
              end;
            if BAnd(opp_bits_low,$00000800) <> 0 then { if plat[D2] = adversaire then }
              begin
                if BAnd(opp_bits_low,$00080000) <> 0 then { if plat[D3] = adversaire then }
                  begin
                    if BAnd(opp_bits_low,$08000000) <> 0 then { if plat[D4] = adversaire then }
                      begin
                        if BAnd(opp_bits_high,$00000008) <> 0 then { if plat[D5] = adversaire then }
                          begin
                            if BAnd(opp_bits_high,$00000800) <> 0 then { if plat[D6] = adversaire then }
                              begin
                                if BAnd(opp_bits_high,$00080000) <> 0 then { if plat[D7] = adversaire then }
                                  begin
                                    if BAnd(my_bits_high,$08000000) <> 0 then { if plat[D8] = couleur then }
                                      begin
                                        nbprise := nbprise + 12;
                                        my_bits_low := BOr(my_bits_low,$08080800);
                                        opp_bits_low := BXOr(opp_bits_low,$08080800);
                                        my_bits_high := BOr(my_bits_high,$00080808);
                                        opp_bits_high := BXOr(opp_bits_high,$00080808);
                                      end;
                                  end
                                else
                                if BAnd(my_bits_high,$00080000) <> 0 then { if plat[D7] = couleur then }
                                  begin
                                    nbprise := nbprise + 10;
                                    my_bits_low := BOr(my_bits_low,$08080800);
                                    opp_bits_low := BXOr(opp_bits_low,$08080800);
                                    my_bits_high := BOr(my_bits_high,$00000808);
                                    opp_bits_high := BXOr(opp_bits_high,$00000808);
                                  end;
                              end
                            else
                            if BAnd(my_bits_high,$00000800) <> 0 then { if plat[D6] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$08080800);
                                opp_bits_low := BXOr(opp_bits_low,$08080800);
                                my_bits_high := BOr(my_bits_high,$00000008);
                                opp_bits_high := BXOr(opp_bits_high,$00000008);
                              end;
                          end
                        else
                        if BAnd(my_bits_high,$00000008) <> 0 then { if plat[D5] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$08080800);
                            opp_bits_low := BXOr(opp_bits_low,$08080800);
                          end;
                      end
                    else
                    if BAnd(my_bits_low,$08000000) <> 0 then { if plat[D4] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$00080800);
                        opp_bits_low := BXOr(opp_bits_low,$00080800);
                      end;
                  end
                else
                if BAnd(my_bits_low,$00080000) <> 0 then { if plat[D3] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00000800);
                    opp_bits_low := BXOr(opp_bits_low,$00000800);
                  end;
              end;
            if BAnd(opp_bits_low,$00000400) <> 0 then { if plat[C2] = adversaire then }
              begin
                if BAnd(opp_bits_low,$00020000) <> 0 then { if plat[B3] = adversaire then }
                  begin
                    if BAnd(my_bits_low,$01000000) <> 0 then { if plat[A4] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$00020400);
                        opp_bits_low := BXOr(opp_bits_low,$00020400);
                      end;
                  end
                else
                if BAnd(my_bits_low,$00020000) <> 0 then { if plat[B3] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00000400);
                    opp_bits_low := BXOr(opp_bits_low,$00000400);
                  end;
              end;
            if BAnd(opp_bits_low,$00000004) <> 0 then { if plat[C1] = adversaire then }
              begin
                if BAnd(opp_bits_low,$00000002) <> 0 then { if plat[B1] = adversaire then }
                  begin
                    if BAnd(my_bits_low,$00000001) <> 0 then { if plat[A1] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$00000006);
                        opp_bits_low := BXOr(opp_bits_low,$00000006);
                      end;
                  end
                else
                if BAnd(my_bits_low,$00000002) <> 0 then { if plat[B1] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00000004);
                    opp_bits_low := BXOr(opp_bits_low,$00000004);
                  end;
              end;
            if (nbPrise <> 0)
              then
                begin
                  diffPions := succ(diffPions+nbprise);
                  ModifPlatBitboard := BXOr(vecteurParite,$00000001);
                  my_bits_low := BOr(my_bits_low,$00000008);  { place the disc in D1 }
                  g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
                  g_my_bits_high  := opp_bits_high;
                  g_opp_bits_low  := my_bits_low;
                  g_opp_bits_high := my_bits_high;
                end
              else
                ModifPlatBitboard := vecteurParite;
          end;
        15 :    { E1 }
          begin
            if BAnd(opp_bits_low,$00000020) <> 0 then { if plat[F1] = adversaire then }
              begin
                if BAnd(opp_bits_low,$00000040) <> 0 then { if plat[G1] = adversaire then }
                  begin
                    if BAnd(my_bits_low,$00000080) <> 0 then { if plat[H1] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$00000060);
                        opp_bits_low := BXOr(opp_bits_low,$00000060);
                      end;
                  end
                else
                if BAnd(my_bits_low,$00000040) <> 0 then { if plat[G1] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00000020);
                    opp_bits_low := BXOr(opp_bits_low,$00000020);
                  end;
              end;
            if BAnd(opp_bits_low,$00002000) <> 0 then { if plat[F2] = adversaire then }
              begin
                if BAnd(opp_bits_low,$00400000) <> 0 then { if plat[G3] = adversaire then }
                  begin
                    if BAnd(my_bits_low,$80000000) <> 0 then { if plat[H4] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$00402000);
                        opp_bits_low := BXOr(opp_bits_low,$00402000);
                      end;
                  end
                else
                if BAnd(my_bits_low,$00400000) <> 0 then { if plat[G3] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00002000);
                    opp_bits_low := BXOr(opp_bits_low,$00002000);
                  end;
              end;
            if BAnd(opp_bits_low,$00001000) <> 0 then { if plat[E2] = adversaire then }
              begin
                if BAnd(opp_bits_low,$00100000) <> 0 then { if plat[E3] = adversaire then }
                  begin
                    if BAnd(opp_bits_low,$10000000) <> 0 then { if plat[E4] = adversaire then }
                      begin
                        if BAnd(opp_bits_high,$00000010) <> 0 then { if plat[E5] = adversaire then }
                          begin
                            if BAnd(opp_bits_high,$00001000) <> 0 then { if plat[E6] = adversaire then }
                              begin
                                if BAnd(opp_bits_high,$00100000) <> 0 then { if plat[E7] = adversaire then }
                                  begin
                                    if BAnd(my_bits_high,$10000000) <> 0 then { if plat[E8] = couleur then }
                                      begin
                                        nbprise := nbprise + 12;
                                        my_bits_low := BOr(my_bits_low,$10101000);
                                        opp_bits_low := BXOr(opp_bits_low,$10101000);
                                        my_bits_high := BOr(my_bits_high,$00101010);
                                        opp_bits_high := BXOr(opp_bits_high,$00101010);
                                      end;
                                  end
                                else
                                if BAnd(my_bits_high,$00100000) <> 0 then { if plat[E7] = couleur then }
                                  begin
                                    nbprise := nbprise + 10;
                                    my_bits_low := BOr(my_bits_low,$10101000);
                                    opp_bits_low := BXOr(opp_bits_low,$10101000);
                                    my_bits_high := BOr(my_bits_high,$00001010);
                                    opp_bits_high := BXOr(opp_bits_high,$00001010);
                                  end;
                              end
                            else
                            if BAnd(my_bits_high,$00001000) <> 0 then { if plat[E6] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$10101000);
                                opp_bits_low := BXOr(opp_bits_low,$10101000);
                                my_bits_high := BOr(my_bits_high,$00000010);
                                opp_bits_high := BXOr(opp_bits_high,$00000010);
                              end;
                          end
                        else
                        if BAnd(my_bits_high,$00000010) <> 0 then { if plat[E5] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$10101000);
                            opp_bits_low := BXOr(opp_bits_low,$10101000);
                          end;
                      end
                    else
                    if BAnd(my_bits_low,$10000000) <> 0 then { if plat[E4] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$00101000);
                        opp_bits_low := BXOr(opp_bits_low,$00101000);
                      end;
                  end
                else
                if BAnd(my_bits_low,$00100000) <> 0 then { if plat[E3] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00001000);
                    opp_bits_low := BXOr(opp_bits_low,$00001000);
                  end;
              end;
            if BAnd(opp_bits_low,$00000800) <> 0 then { if plat[D2] = adversaire then }
              begin
                if BAnd(opp_bits_low,$00040000) <> 0 then { if plat[C3] = adversaire then }
                  begin
                    if BAnd(opp_bits_low,$02000000) <> 0 then { if plat[B4] = adversaire then }
                      begin
                        if BAnd(my_bits_high,$00000001) <> 0 then { if plat[A5] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$02040800);
                            opp_bits_low := BXOr(opp_bits_low,$02040800);
                          end;
                      end
                    else
                    if BAnd(my_bits_low,$02000000) <> 0 then { if plat[B4] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$00040800);
                        opp_bits_low := BXOr(opp_bits_low,$00040800);
                      end;
                  end
                else
                if BAnd(my_bits_low,$00040000) <> 0 then { if plat[C3] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00000800);
                    opp_bits_low := BXOr(opp_bits_low,$00000800);
                  end;
              end;
            if BAnd(opp_bits_low,$00000008) <> 0 then { if plat[D1] = adversaire then }
              begin
                if BAnd(opp_bits_low,$00000004) <> 0 then { if plat[C1] = adversaire then }
                  begin
                    if BAnd(opp_bits_low,$00000002) <> 0 then { if plat[B1] = adversaire then }
                      begin
                        if BAnd(my_bits_low,$00000001) <> 0 then { if plat[A1] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$0000000E);
                            opp_bits_low := BXOr(opp_bits_low,$0000000E);
                          end;
                      end
                    else
                    if BAnd(my_bits_low,$00000002) <> 0 then { if plat[B1] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$0000000C);
                        opp_bits_low := BXOr(opp_bits_low,$0000000C);
                      end;
                  end
                else
                if BAnd(my_bits_low,$00000004) <> 0 then { if plat[C1] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00000008);
                    opp_bits_low := BXOr(opp_bits_low,$00000008);
                  end;
              end;
            if (nbPrise <> 0)
              then
                begin
                  diffPions := succ(diffPions+nbprise);
                  ModifPlatBitboard := BXOr(vecteurParite,$00000002);
                  my_bits_low := BOr(my_bits_low,$00000010);  { place the disc in E1 }
                  g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
                  g_my_bits_high  := opp_bits_high;
                  g_opp_bits_low  := my_bits_low;
                  g_opp_bits_high := my_bits_high;
                end
              else
                ModifPlatBitboard := vecteurParite;
          end;
        16 :    { F1 }
          begin
            if BAnd(opp_bits_low,$00000040) <> 0 then { if plat[G1] = adversaire then }
              begin
                if BAnd(my_bits_low,$00000080) <> 0 then { if plat[H1] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00000040);
                    opp_bits_low := BXOr(opp_bits_low,$00000040);
                  end;
              end;
            if BAnd(opp_bits_low,$00004000) <> 0 then { if plat[G2] = adversaire then }
              begin
                if BAnd(my_bits_low,$00800000) <> 0 then { if plat[H3] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00004000);
                    opp_bits_low := BXOr(opp_bits_low,$00004000);
                  end;
              end;
            if BAnd(opp_bits_low,$00002000) <> 0 then { if plat[F2] = adversaire then }
              begin
                if BAnd(opp_bits_low,$00200000) <> 0 then { if plat[F3] = adversaire then }
                  begin
                    if BAnd(opp_bits_low,$20000000) <> 0 then { if plat[F4] = adversaire then }
                      begin
                        if BAnd(opp_bits_high,$00000020) <> 0 then { if plat[F5] = adversaire then }
                          begin
                            if BAnd(opp_bits_high,$00002000) <> 0 then { if plat[F6] = adversaire then }
                              begin
                                if BAnd(opp_bits_high,$00200000) <> 0 then { if plat[F7] = adversaire then }
                                  begin
                                    if BAnd(my_bits_high,$20000000) <> 0 then { if plat[F8] = couleur then }
                                      begin
                                        nbprise := nbprise + 12;
                                        my_bits_low := BOr(my_bits_low,$20202000);
                                        opp_bits_low := BXOr(opp_bits_low,$20202000);
                                        my_bits_high := BOr(my_bits_high,$00202020);
                                        opp_bits_high := BXOr(opp_bits_high,$00202020);
                                      end;
                                  end
                                else
                                if BAnd(my_bits_high,$00200000) <> 0 then { if plat[F7] = couleur then }
                                  begin
                                    nbprise := nbprise + 10;
                                    my_bits_low := BOr(my_bits_low,$20202000);
                                    opp_bits_low := BXOr(opp_bits_low,$20202000);
                                    my_bits_high := BOr(my_bits_high,$00002020);
                                    opp_bits_high := BXOr(opp_bits_high,$00002020);
                                  end;
                              end
                            else
                            if BAnd(my_bits_high,$00002000) <> 0 then { if plat[F6] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$20202000);
                                opp_bits_low := BXOr(opp_bits_low,$20202000);
                                my_bits_high := BOr(my_bits_high,$00000020);
                                opp_bits_high := BXOr(opp_bits_high,$00000020);
                              end;
                          end
                        else
                        if BAnd(my_bits_high,$00000020) <> 0 then { if plat[F5] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$20202000);
                            opp_bits_low := BXOr(opp_bits_low,$20202000);
                          end;
                      end
                    else
                    if BAnd(my_bits_low,$20000000) <> 0 then { if plat[F4] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$00202000);
                        opp_bits_low := BXOr(opp_bits_low,$00202000);
                      end;
                  end
                else
                if BAnd(my_bits_low,$00200000) <> 0 then { if plat[F3] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00002000);
                    opp_bits_low := BXOr(opp_bits_low,$00002000);
                  end;
              end;
            if BAnd(opp_bits_low,$00001000) <> 0 then { if plat[E2] = adversaire then }
              begin
                if BAnd(opp_bits_low,$00080000) <> 0 then { if plat[D3] = adversaire then }
                  begin
                    if BAnd(opp_bits_low,$04000000) <> 0 then { if plat[C4] = adversaire then }
                      begin
                        if BAnd(opp_bits_high,$00000002) <> 0 then { if plat[B5] = adversaire then }
                          begin
                            if BAnd(my_bits_high,$00000100) <> 0 then { if plat[A6] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$04081000);
                                opp_bits_low := BXOr(opp_bits_low,$04081000);
                                my_bits_high := BOr(my_bits_high,$00000002);
                                opp_bits_high := BXOr(opp_bits_high,$00000002);
                              end;
                          end
                        else
                        if BAnd(my_bits_high,$00000002) <> 0 then { if plat[B5] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$04081000);
                            opp_bits_low := BXOr(opp_bits_low,$04081000);
                          end;
                      end
                    else
                    if BAnd(my_bits_low,$04000000) <> 0 then { if plat[C4] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$00081000);
                        opp_bits_low := BXOr(opp_bits_low,$00081000);
                      end;
                  end
                else
                if BAnd(my_bits_low,$00080000) <> 0 then { if plat[D3] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00001000);
                    opp_bits_low := BXOr(opp_bits_low,$00001000);
                  end;
              end;
            if BAnd(opp_bits_low,$00000010) <> 0 then { if plat[E1] = adversaire then }
              begin
                if BAnd(opp_bits_low,$00000008) <> 0 then { if plat[D1] = adversaire then }
                  begin
                    if BAnd(opp_bits_low,$00000004) <> 0 then { if plat[C1] = adversaire then }
                      begin
                        if BAnd(opp_bits_low,$00000002) <> 0 then { if plat[B1] = adversaire then }
                          begin
                            if BAnd(my_bits_low,$00000001) <> 0 then { if plat[A1] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$0000001E);
                                opp_bits_low := BXOr(opp_bits_low,$0000001E);
                              end;
                          end
                        else
                        if BAnd(my_bits_low,$00000002) <> 0 then { if plat[B1] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$0000001C);
                            opp_bits_low := BXOr(opp_bits_low,$0000001C);
                          end;
                      end
                    else
                    if BAnd(my_bits_low,$00000004) <> 0 then { if plat[C1] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$00000018);
                        opp_bits_low := BXOr(opp_bits_low,$00000018);
                      end;
                  end
                else
                if BAnd(my_bits_low,$00000008) <> 0 then { if plat[D1] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00000010);
                    opp_bits_low := BXOr(opp_bits_low,$00000010);
                  end;
              end;
            if (nbPrise <> 0)
              then
                begin
                  diffPions := succ(diffPions+nbprise);
                  ModifPlatBitboard := BXOr(vecteurParite,$00000002);
                  my_bits_low := BOr(my_bits_low,$00000020);  { place the disc in F1 }
                  g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
                  g_my_bits_high  := opp_bits_high;
                  g_opp_bits_low  := my_bits_low;
                  g_opp_bits_high := my_bits_high;
                end
              else
                ModifPlatBitboard := vecteurParite;
          end;
        17 :    { G1 }
          begin
            if BAnd(opp_bits_low,$00004000) <> 0 then { if plat[G2] = adversaire then }
              begin
                if BAnd(opp_bits_low,$00400000) <> 0 then { if plat[G3] = adversaire then }
                  begin
                    if BAnd(opp_bits_low,$40000000) <> 0 then { if plat[G4] = adversaire then }
                      begin
                        if BAnd(opp_bits_high,$00000040) <> 0 then { if plat[G5] = adversaire then }
                          begin
                            if BAnd(opp_bits_high,$00004000) <> 0 then { if plat[G6] = adversaire then }
                              begin
                                if BAnd(opp_bits_high,$00400000) <> 0 then { if plat[G7] = adversaire then }
                                  begin
                                    if BAnd(my_bits_high,$40000000) <> 0 then { if plat[G8] = couleur then }
                                      begin
                                        nbprise := nbprise + 12;
                                        my_bits_low := BOr(my_bits_low,$40404000);
                                        opp_bits_low := BXOr(opp_bits_low,$40404000);
                                        my_bits_high := BOr(my_bits_high,$00404040);
                                        opp_bits_high := BXOr(opp_bits_high,$00404040);
                                      end;
                                  end
                                else
                                if BAnd(my_bits_high,$00400000) <> 0 then { if plat[G7] = couleur then }
                                  begin
                                    nbprise := nbprise + 10;
                                    my_bits_low := BOr(my_bits_low,$40404000);
                                    opp_bits_low := BXOr(opp_bits_low,$40404000);
                                    my_bits_high := BOr(my_bits_high,$00004040);
                                    opp_bits_high := BXOr(opp_bits_high,$00004040);
                                  end;
                              end
                            else
                            if BAnd(my_bits_high,$00004000) <> 0 then { if plat[G6] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$40404000);
                                opp_bits_low := BXOr(opp_bits_low,$40404000);
                                my_bits_high := BOr(my_bits_high,$00000040);
                                opp_bits_high := BXOr(opp_bits_high,$00000040);
                              end;
                          end
                        else
                        if BAnd(my_bits_high,$00000040) <> 0 then { if plat[G5] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$40404000);
                            opp_bits_low := BXOr(opp_bits_low,$40404000);
                          end;
                      end
                    else
                    if BAnd(my_bits_low,$40000000) <> 0 then { if plat[G4] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$00404000);
                        opp_bits_low := BXOr(opp_bits_low,$00404000);
                      end;
                  end
                else
                if BAnd(my_bits_low,$00400000) <> 0 then { if plat[G3] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00004000);
                    opp_bits_low := BXOr(opp_bits_low,$00004000);
                  end;
              end;
            if BAnd(opp_bits_low,$00002000) <> 0 then { if plat[F2] = adversaire then }
              begin
                if BAnd(opp_bits_low,$00100000) <> 0 then { if plat[E3] = adversaire then }
                  begin
                    if BAnd(opp_bits_low,$08000000) <> 0 then { if plat[D4] = adversaire then }
                      begin
                        if BAnd(opp_bits_high,$00000004) <> 0 then { if plat[C5] = adversaire then }
                          begin
                            if BAnd(opp_bits_high,$00000200) <> 0 then { if plat[B6] = adversaire then }
                              begin
                                if BAnd(my_bits_high,$00010000) <> 0 then { if plat[A7] = couleur then }
                                  begin
                                    nbprise := nbprise + 10;
                                    my_bits_low := BOr(my_bits_low,$08102000);
                                    opp_bits_low := BXOr(opp_bits_low,$08102000);
                                    my_bits_high := BOr(my_bits_high,$00000204);
                                    opp_bits_high := BXOr(opp_bits_high,$00000204);
                                  end;
                              end
                            else
                            if BAnd(my_bits_high,$00000200) <> 0 then { if plat[B6] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$08102000);
                                opp_bits_low := BXOr(opp_bits_low,$08102000);
                                my_bits_high := BOr(my_bits_high,$00000004);
                                opp_bits_high := BXOr(opp_bits_high,$00000004);
                              end;
                          end
                        else
                        if BAnd(my_bits_high,$00000004) <> 0 then { if plat[C5] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$08102000);
                            opp_bits_low := BXOr(opp_bits_low,$08102000);
                          end;
                      end
                    else
                    if BAnd(my_bits_low,$08000000) <> 0 then { if plat[D4] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$00102000);
                        opp_bits_low := BXOr(opp_bits_low,$00102000);
                      end;
                  end
                else
                if BAnd(my_bits_low,$00100000) <> 0 then { if plat[E3] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00002000);
                    opp_bits_low := BXOr(opp_bits_low,$00002000);
                  end;
              end;
            if BAnd(opp_bits_low,$00000020) <> 0 then { if plat[F1] = adversaire then }
              begin
                if BAnd(opp_bits_low,$00000010) <> 0 then { if plat[E1] = adversaire then }
                  begin
                    if BAnd(opp_bits_low,$00000008) <> 0 then { if plat[D1] = adversaire then }
                      begin
                        if BAnd(opp_bits_low,$00000004) <> 0 then { if plat[C1] = adversaire then }
                          begin
                            if BAnd(opp_bits_low,$00000002) <> 0 then { if plat[B1] = adversaire then }
                              begin
                                if BAnd(my_bits_low,$00000001) <> 0 then { if plat[A1] = couleur then }
                                  begin
                                    nbprise := nbprise + 10;
                                    my_bits_low := BOr(my_bits_low,$0000003E);
                                    opp_bits_low := BXOr(opp_bits_low,$0000003E);
                                  end;
                              end
                            else
                            if BAnd(my_bits_low,$00000002) <> 0 then { if plat[B1] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$0000003C);
                                opp_bits_low := BXOr(opp_bits_low,$0000003C);
                              end;
                          end
                        else
                        if BAnd(my_bits_low,$00000004) <> 0 then { if plat[C1] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$00000038);
                            opp_bits_low := BXOr(opp_bits_low,$00000038);
                          end;
                      end
                    else
                    if BAnd(my_bits_low,$00000008) <> 0 then { if plat[D1] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$00000030);
                        opp_bits_low := BXOr(opp_bits_low,$00000030);
                      end;
                  end
                else
                if BAnd(my_bits_low,$00000010) <> 0 then { if plat[E1] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00000020);
                    opp_bits_low := BXOr(opp_bits_low,$00000020);
                  end;
              end;
            if (nbPrise <> 0)
              then
                begin
                  diffPions := succ(diffPions+nbprise);
                  ModifPlatBitboard := BXOr(vecteurParite,$00000002);
                  my_bits_low := BOr(my_bits_low,$00000040);  { place the disc in G1 }
                  g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
                  g_my_bits_high  := opp_bits_high;
                  g_opp_bits_low  := my_bits_low;
                  g_opp_bits_high := my_bits_high;
                end
              else
                ModifPlatBitboard := vecteurParite;
          end;
        18 :    { H1 }
          begin
            if BAnd(opp_bits_low,$00008000) <> 0 then { if plat[H2] = adversaire then }
              begin
                if BAnd(opp_bits_low,$00800000) <> 0 then { if plat[H3] = adversaire then }
                  begin
                    if BAnd(opp_bits_low,$80000000) <> 0 then { if plat[H4] = adversaire then }
                      begin
                        if BAnd(opp_bits_high,$00000080) <> 0 then { if plat[H5] = adversaire then }
                          begin
                            if BAnd(opp_bits_high,$00008000) <> 0 then { if plat[H6] = adversaire then }
                              begin
                                if BAnd(opp_bits_high,$00800000) <> 0 then { if plat[H7] = adversaire then }
                                  begin
                                    if BAnd(my_bits_high,$80000000) <> 0 then { if plat[H8] = couleur then }
                                      begin
                                        nbprise := nbprise + 12;
                                        my_bits_low := BOr(my_bits_low,$80808000);
                                        opp_bits_low := BXOr(opp_bits_low,$80808000);
                                        my_bits_high := BOr(my_bits_high,$00808080);
                                        opp_bits_high := BXOr(opp_bits_high,$00808080);
                                      end;
                                  end
                                else
                                if BAnd(my_bits_high,$00800000) <> 0 then { if plat[H7] = couleur then }
                                  begin
                                    nbprise := nbprise + 10;
                                    my_bits_low := BOr(my_bits_low,$80808000);
                                    opp_bits_low := BXOr(opp_bits_low,$80808000);
                                    my_bits_high := BOr(my_bits_high,$00008080);
                                    opp_bits_high := BXOr(opp_bits_high,$00008080);
                                  end;
                              end
                            else
                            if BAnd(my_bits_high,$00008000) <> 0 then { if plat[H6] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$80808000);
                                opp_bits_low := BXOr(opp_bits_low,$80808000);
                                my_bits_high := BOr(my_bits_high,$00000080);
                                opp_bits_high := BXOr(opp_bits_high,$00000080);
                              end;
                          end
                        else
                        if BAnd(my_bits_high,$00000080) <> 0 then { if plat[H5] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$80808000);
                            opp_bits_low := BXOr(opp_bits_low,$80808000);
                          end;
                      end
                    else
                    if BAnd(my_bits_low,$80000000) <> 0 then { if plat[H4] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$00808000);
                        opp_bits_low := BXOr(opp_bits_low,$00808000);
                      end;
                  end
                else
                if BAnd(my_bits_low,$00800000) <> 0 then { if plat[H3] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00008000);
                    opp_bits_low := BXOr(opp_bits_low,$00008000);
                  end;
              end;
            if BAnd(opp_bits_low,$00004000) <> 0 then { if plat[G2] = adversaire then }
              begin
                if BAnd(opp_bits_low,$00200000) <> 0 then { if plat[F3] = adversaire then }
                  begin
                    if BAnd(opp_bits_low,$10000000) <> 0 then { if plat[E4] = adversaire then }
                      begin
                        if BAnd(opp_bits_high,$00000008) <> 0 then { if plat[D5] = adversaire then }
                          begin
                            if BAnd(opp_bits_high,$00000400) <> 0 then { if plat[C6] = adversaire then }
                              begin
                                if BAnd(opp_bits_high,$00020000) <> 0 then { if plat[B7] = adversaire then }
                                  begin
                                    if BAnd(my_bits_high,$01000000) <> 0 then { if plat[A8] = couleur then }
                                      begin
                                        nbprise := nbprise + 12;
                                        my_bits_low := BOr(my_bits_low,$10204000);
                                        opp_bits_low := BXOr(opp_bits_low,$10204000);
                                        my_bits_high := BOr(my_bits_high,$00020408);
                                        opp_bits_high := BXOr(opp_bits_high,$00020408);
                                      end;
                                  end
                                else
                                if BAnd(my_bits_high,$00020000) <> 0 then { if plat[B7] = couleur then }
                                  begin
                                    nbprise := nbprise + 10;
                                    my_bits_low := BOr(my_bits_low,$10204000);
                                    opp_bits_low := BXOr(opp_bits_low,$10204000);
                                    my_bits_high := BOr(my_bits_high,$00000408);
                                    opp_bits_high := BXOr(opp_bits_high,$00000408);
                                  end;
                              end
                            else
                            if BAnd(my_bits_high,$00000400) <> 0 then { if plat[C6] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$10204000);
                                opp_bits_low := BXOr(opp_bits_low,$10204000);
                                my_bits_high := BOr(my_bits_high,$00000008);
                                opp_bits_high := BXOr(opp_bits_high,$00000008);
                              end;
                          end
                        else
                        if BAnd(my_bits_high,$00000008) <> 0 then { if plat[D5] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$10204000);
                            opp_bits_low := BXOr(opp_bits_low,$10204000);
                          end;
                      end
                    else
                    if BAnd(my_bits_low,$10000000) <> 0 then { if plat[E4] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$00204000);
                        opp_bits_low := BXOr(opp_bits_low,$00204000);
                      end;
                  end
                else
                if BAnd(my_bits_low,$00200000) <> 0 then { if plat[F3] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00004000);
                    opp_bits_low := BXOr(opp_bits_low,$00004000);
                  end;
              end;
            if BAnd(opp_bits_low,$00000040) <> 0 then { if plat[G1] = adversaire then }
              begin
                if BAnd(opp_bits_low,$00000020) <> 0 then { if plat[F1] = adversaire then }
                  begin
                    if BAnd(opp_bits_low,$00000010) <> 0 then { if plat[E1] = adversaire then }
                      begin
                        if BAnd(opp_bits_low,$00000008) <> 0 then { if plat[D1] = adversaire then }
                          begin
                            if BAnd(opp_bits_low,$00000004) <> 0 then { if plat[C1] = adversaire then }
                              begin
                                if BAnd(opp_bits_low,$00000002) <> 0 then { if plat[B1] = adversaire then }
                                  begin
                                    if BAnd(my_bits_low,$00000001) <> 0 then { if plat[A1] = couleur then }
                                      begin
                                        nbprise := nbprise + 12;
                                        my_bits_low := BOr(my_bits_low,$0000007E);
                                        opp_bits_low := BXOr(opp_bits_low,$0000007E);
                                      end;
                                  end
                                else
                                if BAnd(my_bits_low,$00000002) <> 0 then { if plat[B1] = couleur then }
                                  begin
                                    nbprise := nbprise + 10;
                                    my_bits_low := BOr(my_bits_low,$0000007C);
                                    opp_bits_low := BXOr(opp_bits_low,$0000007C);
                                  end;
                              end
                            else
                            if BAnd(my_bits_low,$00000004) <> 0 then { if plat[C1] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$00000078);
                                opp_bits_low := BXOr(opp_bits_low,$00000078);
                              end;
                          end
                        else
                        if BAnd(my_bits_low,$00000008) <> 0 then { if plat[D1] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$00000070);
                            opp_bits_low := BXOr(opp_bits_low,$00000070);
                          end;
                      end
                    else
                    if BAnd(my_bits_low,$00000010) <> 0 then { if plat[E1] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$00000060);
                        opp_bits_low := BXOr(opp_bits_low,$00000060);
                      end;
                  end
                else
                if BAnd(my_bits_low,$00000020) <> 0 then { if plat[F1] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00000040);
                    opp_bits_low := BXOr(opp_bits_low,$00000040);
                  end;
              end;
            if (nbPrise <> 0)
              then
                begin
                  diffPions := succ(diffPions+nbprise);
                  ModifPlatBitboard := BXOr(vecteurParite,$00000002);
                  my_bits_low := BOr(my_bits_low,$00000080);  { place the disc in H1 }
                  g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
                  g_my_bits_high  := opp_bits_high;
                  g_opp_bits_low  := my_bits_low;
                  g_opp_bits_high := my_bits_high;
                end
              else
                ModifPlatBitboard := vecteurParite;
          end;
        21 :    { A2 }
          begin
            if BAnd(opp_bits_low,$00000200) <> 0 then { if plat[B2] = adversaire then }
              begin
                if BAnd(opp_bits_low,$00000400) <> 0 then { if plat[C2] = adversaire then }
                  begin
                    if BAnd(opp_bits_low,$00000800) <> 0 then { if plat[D2] = adversaire then }
                      begin
                        if BAnd(opp_bits_low,$00001000) <> 0 then { if plat[E2] = adversaire then }
                          begin
                            if BAnd(opp_bits_low,$00002000) <> 0 then { if plat[F2] = adversaire then }
                              begin
                                if BAnd(opp_bits_low,$00004000) <> 0 then { if plat[G2] = adversaire then }
                                  begin
                                    if BAnd(my_bits_low,$00008000) <> 0 then { if plat[H2] = couleur then }
                                      begin
                                        nbprise := nbprise + 12;
                                        my_bits_low := BOr(my_bits_low,$00007E00);
                                        opp_bits_low := BXOr(opp_bits_low,$00007E00);
                                      end;
                                  end
                                else
                                if BAnd(my_bits_low,$00004000) <> 0 then { if plat[G2] = couleur then }
                                  begin
                                    nbprise := nbprise + 10;
                                    my_bits_low := BOr(my_bits_low,$00003E00);
                                    opp_bits_low := BXOr(opp_bits_low,$00003E00);
                                  end;
                              end
                            else
                            if BAnd(my_bits_low,$00002000) <> 0 then { if plat[F2] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$00001E00);
                                opp_bits_low := BXOr(opp_bits_low,$00001E00);
                              end;
                          end
                        else
                        if BAnd(my_bits_low,$00001000) <> 0 then { if plat[E2] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$00000E00);
                            opp_bits_low := BXOr(opp_bits_low,$00000E00);
                          end;
                      end
                    else
                    if BAnd(my_bits_low,$00000800) <> 0 then { if plat[D2] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$00000600);
                        opp_bits_low := BXOr(opp_bits_low,$00000600);
                      end;
                  end
                else
                if BAnd(my_bits_low,$00000400) <> 0 then { if plat[C2] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00000200);
                    opp_bits_low := BXOr(opp_bits_low,$00000200);
                  end;
              end;
            if BAnd(opp_bits_low,$00020000) <> 0 then { if plat[B3] = adversaire then }
              begin
                if BAnd(opp_bits_low,$04000000) <> 0 then { if plat[C4] = adversaire then }
                  begin
                    if BAnd(opp_bits_high,$00000008) <> 0 then { if plat[D5] = adversaire then }
                      begin
                        if BAnd(opp_bits_high,$00001000) <> 0 then { if plat[E6] = adversaire then }
                          begin
                            if BAnd(opp_bits_high,$00200000) <> 0 then { if plat[F7] = adversaire then }
                              begin
                                if BAnd(my_bits_high,$40000000) <> 0 then { if plat[G8] = couleur then }
                                  begin
                                    nbprise := nbprise + 10;
                                    my_bits_low := BOr(my_bits_low,$04020000);
                                    opp_bits_low := BXOr(opp_bits_low,$04020000);
                                    my_bits_high := BOr(my_bits_high,$00201008);
                                    opp_bits_high := BXOr(opp_bits_high,$00201008);
                                  end;
                              end
                            else
                            if BAnd(my_bits_high,$00200000) <> 0 then { if plat[F7] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$04020000);
                                opp_bits_low := BXOr(opp_bits_low,$04020000);
                                my_bits_high := BOr(my_bits_high,$00001008);
                                opp_bits_high := BXOr(opp_bits_high,$00001008);
                              end;
                          end
                        else
                        if BAnd(my_bits_high,$00001000) <> 0 then { if plat[E6] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$04020000);
                            opp_bits_low := BXOr(opp_bits_low,$04020000);
                            my_bits_high := BOr(my_bits_high,$00000008);
                            opp_bits_high := BXOr(opp_bits_high,$00000008);
                          end;
                      end
                    else
                    if BAnd(my_bits_high,$00000008) <> 0 then { if plat[D5] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$04020000);
                        opp_bits_low := BXOr(opp_bits_low,$04020000);
                      end;
                  end
                else
                if BAnd(my_bits_low,$04000000) <> 0 then { if plat[C4] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00020000);
                    opp_bits_low := BXOr(opp_bits_low,$00020000);
                  end;
              end;
            if BAnd(opp_bits_low,$00010000) <> 0 then { if plat[A3] = adversaire then }
              begin
                if BAnd(opp_bits_low,$01000000) <> 0 then { if plat[A4] = adversaire then }
                  begin
                    if BAnd(opp_bits_high,$00000001) <> 0 then { if plat[A5] = adversaire then }
                      begin
                        if BAnd(opp_bits_high,$00000100) <> 0 then { if plat[A6] = adversaire then }
                          begin
                            if BAnd(opp_bits_high,$00010000) <> 0 then { if plat[A7] = adversaire then }
                              begin
                                if BAnd(my_bits_high,$01000000) <> 0 then { if plat[A8] = couleur then }
                                  begin
                                    nbprise := nbprise + 10;
                                    my_bits_low := BOr(my_bits_low,$01010000);
                                    opp_bits_low := BXOr(opp_bits_low,$01010000);
                                    my_bits_high := BOr(my_bits_high,$00010101);
                                    opp_bits_high := BXOr(opp_bits_high,$00010101);
                                  end;
                              end
                            else
                            if BAnd(my_bits_high,$00010000) <> 0 then { if plat[A7] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$01010000);
                                opp_bits_low := BXOr(opp_bits_low,$01010000);
                                my_bits_high := BOr(my_bits_high,$00000101);
                                opp_bits_high := BXOr(opp_bits_high,$00000101);
                              end;
                          end
                        else
                        if BAnd(my_bits_high,$00000100) <> 0 then { if plat[A6] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$01010000);
                            opp_bits_low := BXOr(opp_bits_low,$01010000);
                            my_bits_high := BOr(my_bits_high,$00000001);
                            opp_bits_high := BXOr(opp_bits_high,$00000001);
                          end;
                      end
                    else
                    if BAnd(my_bits_high,$00000001) <> 0 then { if plat[A5] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$01010000);
                        opp_bits_low := BXOr(opp_bits_low,$01010000);
                      end;
                  end
                else
                if BAnd(my_bits_low,$01000000) <> 0 then { if plat[A4] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00010000);
                    opp_bits_low := BXOr(opp_bits_low,$00010000);
                  end;
              end;
            if (nbPrise <> 0)
              then
                begin
                  diffPions := succ(diffPions+nbprise);
                  ModifPlatBitboard := BXOr(vecteurParite,$00000001);
                  my_bits_low := BOr(my_bits_low,$00000100);  { place the disc in A2 }
                  g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
                  g_my_bits_high  := opp_bits_high;
                  g_opp_bits_low  := my_bits_low;
                  g_opp_bits_high := my_bits_high;
                end
              else
                ModifPlatBitboard := vecteurParite;
          end;
        22 :    { B2 }
          begin
            if BAnd(opp_bits_low,$00000400) <> 0 then { if plat[C2] = adversaire then }
              begin
                if BAnd(opp_bits_low,$00000800) <> 0 then { if plat[D2] = adversaire then }
                  begin
                    if BAnd(opp_bits_low,$00001000) <> 0 then { if plat[E2] = adversaire then }
                      begin
                        if BAnd(opp_bits_low,$00002000) <> 0 then { if plat[F2] = adversaire then }
                          begin
                            if BAnd(opp_bits_low,$00004000) <> 0 then { if plat[G2] = adversaire then }
                              begin
                                if BAnd(my_bits_low,$00008000) <> 0 then { if plat[H2] = couleur then }
                                  begin
                                    nbprise := nbprise + 10;
                                    my_bits_low := BOr(my_bits_low,$00007C00);
                                    opp_bits_low := BXOr(opp_bits_low,$00007C00);
                                  end;
                              end
                            else
                            if BAnd(my_bits_low,$00004000) <> 0 then { if plat[G2] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$00003C00);
                                opp_bits_low := BXOr(opp_bits_low,$00003C00);
                              end;
                          end
                        else
                        if BAnd(my_bits_low,$00002000) <> 0 then { if plat[F2] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$00001C00);
                            opp_bits_low := BXOr(opp_bits_low,$00001C00);
                          end;
                      end
                    else
                    if BAnd(my_bits_low,$00001000) <> 0 then { if plat[E2] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$00000C00);
                        opp_bits_low := BXOr(opp_bits_low,$00000C00);
                      end;
                  end
                else
                if BAnd(my_bits_low,$00000800) <> 0 then { if plat[D2] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00000400);
                    opp_bits_low := BXOr(opp_bits_low,$00000400);
                  end;
              end;
            if BAnd(opp_bits_low,$00040000) <> 0 then { if plat[C3] = adversaire then }
              begin
                if BAnd(opp_bits_low,$08000000) <> 0 then { if plat[D4] = adversaire then }
                  begin
                    if BAnd(opp_bits_high,$00000010) <> 0 then { if plat[E5] = adversaire then }
                      begin
                        if BAnd(opp_bits_high,$00002000) <> 0 then { if plat[F6] = adversaire then }
                          begin
                            if BAnd(opp_bits_high,$00400000) <> 0 then { if plat[G7] = adversaire then }
                              begin
                                if BAnd(my_bits_high,$80000000) <> 0 then { if plat[H8] = couleur then }
                                  begin
                                    nbprise := nbprise + 10;
                                    my_bits_low := BOr(my_bits_low,$08040000);
                                    opp_bits_low := BXOr(opp_bits_low,$08040000);
                                    my_bits_high := BOr(my_bits_high,$00402010);
                                    opp_bits_high := BXOr(opp_bits_high,$00402010);
                                  end;
                              end
                            else
                            if BAnd(my_bits_high,$00400000) <> 0 then { if plat[G7] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$08040000);
                                opp_bits_low := BXOr(opp_bits_low,$08040000);
                                my_bits_high := BOr(my_bits_high,$00002010);
                                opp_bits_high := BXOr(opp_bits_high,$00002010);
                              end;
                          end
                        else
                        if BAnd(my_bits_high,$00002000) <> 0 then { if plat[F6] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$08040000);
                            opp_bits_low := BXOr(opp_bits_low,$08040000);
                            my_bits_high := BOr(my_bits_high,$00000010);
                            opp_bits_high := BXOr(opp_bits_high,$00000010);
                          end;
                      end
                    else
                    if BAnd(my_bits_high,$00000010) <> 0 then { if plat[E5] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$08040000);
                        opp_bits_low := BXOr(opp_bits_low,$08040000);
                      end;
                  end
                else
                if BAnd(my_bits_low,$08000000) <> 0 then { if plat[D4] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00040000);
                    opp_bits_low := BXOr(opp_bits_low,$00040000);
                  end;
              end;
            if BAnd(opp_bits_low,$00020000) <> 0 then { if plat[B3] = adversaire then }
              begin
                if BAnd(opp_bits_low,$02000000) <> 0 then { if plat[B4] = adversaire then }
                  begin
                    if BAnd(opp_bits_high,$00000002) <> 0 then { if plat[B5] = adversaire then }
                      begin
                        if BAnd(opp_bits_high,$00000200) <> 0 then { if plat[B6] = adversaire then }
                          begin
                            if BAnd(opp_bits_high,$00020000) <> 0 then { if plat[B7] = adversaire then }
                              begin
                                if BAnd(my_bits_high,$02000000) <> 0 then { if plat[B8] = couleur then }
                                  begin
                                    nbprise := nbprise + 10;
                                    my_bits_low := BOr(my_bits_low,$02020000);
                                    opp_bits_low := BXOr(opp_bits_low,$02020000);
                                    my_bits_high := BOr(my_bits_high,$00020202);
                                    opp_bits_high := BXOr(opp_bits_high,$00020202);
                                  end;
                              end
                            else
                            if BAnd(my_bits_high,$00020000) <> 0 then { if plat[B7] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$02020000);
                                opp_bits_low := BXOr(opp_bits_low,$02020000);
                                my_bits_high := BOr(my_bits_high,$00000202);
                                opp_bits_high := BXOr(opp_bits_high,$00000202);
                              end;
                          end
                        else
                        if BAnd(my_bits_high,$00000200) <> 0 then { if plat[B6] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$02020000);
                            opp_bits_low := BXOr(opp_bits_low,$02020000);
                            my_bits_high := BOr(my_bits_high,$00000002);
                            opp_bits_high := BXOr(opp_bits_high,$00000002);
                          end;
                      end
                    else
                    if BAnd(my_bits_high,$00000002) <> 0 then { if plat[B5] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$02020000);
                        opp_bits_low := BXOr(opp_bits_low,$02020000);
                      end;
                  end
                else
                if BAnd(my_bits_low,$02000000) <> 0 then { if plat[B4] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00020000);
                    opp_bits_low := BXOr(opp_bits_low,$00020000);
                  end;
              end;
            if (nbPrise <> 0)
              then
                begin
                  diffPions := succ(diffPions+nbprise);
                  ModifPlatBitboard := BXOr(vecteurParite,$00000001);
                  my_bits_low := BOr(my_bits_low,$00000200);  { place the disc in B2 }
                  g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
                  g_my_bits_high  := opp_bits_high;
                  g_opp_bits_low  := my_bits_low;
                  g_opp_bits_high := my_bits_high;
                end
              else
                ModifPlatBitboard := vecteurParite;
          end;
        23 :    { C2 }
          begin
            if BAnd(opp_bits_low,$00000800) <> 0 then { if plat[D2] = adversaire then }
              begin
                if BAnd(opp_bits_low,$00001000) <> 0 then { if plat[E2] = adversaire then }
                  begin
                    if BAnd(opp_bits_low,$00002000) <> 0 then { if plat[F2] = adversaire then }
                      begin
                        if BAnd(opp_bits_low,$00004000) <> 0 then { if plat[G2] = adversaire then }
                          begin
                            if BAnd(my_bits_low,$00008000) <> 0 then { if plat[H2] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$00007800);
                                opp_bits_low := BXOr(opp_bits_low,$00007800);
                              end;
                          end
                        else
                        if BAnd(my_bits_low,$00004000) <> 0 then { if plat[G2] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$00003800);
                            opp_bits_low := BXOr(opp_bits_low,$00003800);
                          end;
                      end
                    else
                    if BAnd(my_bits_low,$00002000) <> 0 then { if plat[F2] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$00001800);
                        opp_bits_low := BXOr(opp_bits_low,$00001800);
                      end;
                  end
                else
                if BAnd(my_bits_low,$00001000) <> 0 then { if plat[E2] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00000800);
                    opp_bits_low := BXOr(opp_bits_low,$00000800);
                  end;
              end;
            if BAnd(opp_bits_low,$00080000) <> 0 then { if plat[D3] = adversaire then }
              begin
                if BAnd(opp_bits_low,$10000000) <> 0 then { if plat[E4] = adversaire then }
                  begin
                    if BAnd(opp_bits_high,$00000020) <> 0 then { if plat[F5] = adversaire then }
                      begin
                        if BAnd(opp_bits_high,$00004000) <> 0 then { if plat[G6] = adversaire then }
                          begin
                            if BAnd(my_bits_high,$00800000) <> 0 then { if plat[H7] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$10080000);
                                opp_bits_low := BXOr(opp_bits_low,$10080000);
                                my_bits_high := BOr(my_bits_high,$00004020);
                                opp_bits_high := BXOr(opp_bits_high,$00004020);
                              end;
                          end
                        else
                        if BAnd(my_bits_high,$00004000) <> 0 then { if plat[G6] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$10080000);
                            opp_bits_low := BXOr(opp_bits_low,$10080000);
                            my_bits_high := BOr(my_bits_high,$00000020);
                            opp_bits_high := BXOr(opp_bits_high,$00000020);
                          end;
                      end
                    else
                    if BAnd(my_bits_high,$00000020) <> 0 then { if plat[F5] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$10080000);
                        opp_bits_low := BXOr(opp_bits_low,$10080000);
                      end;
                  end
                else
                if BAnd(my_bits_low,$10000000) <> 0 then { if plat[E4] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00080000);
                    opp_bits_low := BXOr(opp_bits_low,$00080000);
                  end;
              end;
            if BAnd(opp_bits_low,$00040000) <> 0 then { if plat[C3] = adversaire then }
              begin
                if BAnd(opp_bits_low,$04000000) <> 0 then { if plat[C4] = adversaire then }
                  begin
                    if BAnd(opp_bits_high,$00000004) <> 0 then { if plat[C5] = adversaire then }
                      begin
                        if BAnd(opp_bits_high,$00000400) <> 0 then { if plat[C6] = adversaire then }
                          begin
                            if BAnd(opp_bits_high,$00040000) <> 0 then { if plat[C7] = adversaire then }
                              begin
                                if BAnd(my_bits_high,$04000000) <> 0 then { if plat[C8] = couleur then }
                                  begin
                                    nbprise := nbprise + 10;
                                    my_bits_low := BOr(my_bits_low,$04040000);
                                    opp_bits_low := BXOr(opp_bits_low,$04040000);
                                    my_bits_high := BOr(my_bits_high,$00040404);
                                    opp_bits_high := BXOr(opp_bits_high,$00040404);
                                  end;
                              end
                            else
                            if BAnd(my_bits_high,$00040000) <> 0 then { if plat[C7] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$04040000);
                                opp_bits_low := BXOr(opp_bits_low,$04040000);
                                my_bits_high := BOr(my_bits_high,$00000404);
                                opp_bits_high := BXOr(opp_bits_high,$00000404);
                              end;
                          end
                        else
                        if BAnd(my_bits_high,$00000400) <> 0 then { if plat[C6] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$04040000);
                            opp_bits_low := BXOr(opp_bits_low,$04040000);
                            my_bits_high := BOr(my_bits_high,$00000004);
                            opp_bits_high := BXOr(opp_bits_high,$00000004);
                          end;
                      end
                    else
                    if BAnd(my_bits_high,$00000004) <> 0 then { if plat[C5] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$04040000);
                        opp_bits_low := BXOr(opp_bits_low,$04040000);
                      end;
                  end
                else
                if BAnd(my_bits_low,$04000000) <> 0 then { if plat[C4] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00040000);
                    opp_bits_low := BXOr(opp_bits_low,$00040000);
                  end;
              end;
            if BAnd(opp_bits_low,$00020000) <> 0 then { if plat[B3] = adversaire then }
              begin
                if BAnd(my_bits_low,$01000000) <> 0 then { if plat[A4] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00020000);
                    opp_bits_low := BXOr(opp_bits_low,$00020000);
                  end;
              end;
            if BAnd(opp_bits_low,$00000200) <> 0 then { if plat[B2] = adversaire then }
              begin
                if BAnd(my_bits_low,$00000100) <> 0 then { if plat[A2] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00000200);
                    opp_bits_low := BXOr(opp_bits_low,$00000200);
                  end;
              end;
            if (nbPrise <> 0)
              then
                begin
                  diffPions := succ(diffPions+nbprise);
                  ModifPlatBitboard := BXOr(vecteurParite,$00000001);
                  my_bits_low := BOr(my_bits_low,$00000400);  { place the disc in C2 }
                  g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
                  g_my_bits_high  := opp_bits_high;
                  g_opp_bits_low  := my_bits_low;
                  g_opp_bits_high := my_bits_high;
                end
              else
                ModifPlatBitboard := vecteurParite;
          end;
        24 :    { D2 }
          begin
            if BAnd(opp_bits_low,$00001000) <> 0 then { if plat[E2] = adversaire then }
              begin
                if BAnd(opp_bits_low,$00002000) <> 0 then { if plat[F2] = adversaire then }
                  begin
                    if BAnd(opp_bits_low,$00004000) <> 0 then { if plat[G2] = adversaire then }
                      begin
                        if BAnd(my_bits_low,$00008000) <> 0 then { if plat[H2] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$00007000);
                            opp_bits_low := BXOr(opp_bits_low,$00007000);
                          end;
                      end
                    else
                    if BAnd(my_bits_low,$00004000) <> 0 then { if plat[G2] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$00003000);
                        opp_bits_low := BXOr(opp_bits_low,$00003000);
                      end;
                  end
                else
                if BAnd(my_bits_low,$00002000) <> 0 then { if plat[F2] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00001000);
                    opp_bits_low := BXOr(opp_bits_low,$00001000);
                  end;
              end;
            if BAnd(opp_bits_low,$00100000) <> 0 then { if plat[E3] = adversaire then }
              begin
                if BAnd(opp_bits_low,$20000000) <> 0 then { if plat[F4] = adversaire then }
                  begin
                    if BAnd(opp_bits_high,$00000040) <> 0 then { if plat[G5] = adversaire then }
                      begin
                        if BAnd(my_bits_high,$00008000) <> 0 then { if plat[H6] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$20100000);
                            opp_bits_low := BXOr(opp_bits_low,$20100000);
                            my_bits_high := BOr(my_bits_high,$00000040);
                            opp_bits_high := BXOr(opp_bits_high,$00000040);
                          end;
                      end
                    else
                    if BAnd(my_bits_high,$00000040) <> 0 then { if plat[G5] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$20100000);
                        opp_bits_low := BXOr(opp_bits_low,$20100000);
                      end;
                  end
                else
                if BAnd(my_bits_low,$20000000) <> 0 then { if plat[F4] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00100000);
                    opp_bits_low := BXOr(opp_bits_low,$00100000);
                  end;
              end;
            if BAnd(opp_bits_low,$00080000) <> 0 then { if plat[D3] = adversaire then }
              begin
                if BAnd(opp_bits_low,$08000000) <> 0 then { if plat[D4] = adversaire then }
                  begin
                    if BAnd(opp_bits_high,$00000008) <> 0 then { if plat[D5] = adversaire then }
                      begin
                        if BAnd(opp_bits_high,$00000800) <> 0 then { if plat[D6] = adversaire then }
                          begin
                            if BAnd(opp_bits_high,$00080000) <> 0 then { if plat[D7] = adversaire then }
                              begin
                                if BAnd(my_bits_high,$08000000) <> 0 then { if plat[D8] = couleur then }
                                  begin
                                    nbprise := nbprise + 10;
                                    my_bits_low := BOr(my_bits_low,$08080000);
                                    opp_bits_low := BXOr(opp_bits_low,$08080000);
                                    my_bits_high := BOr(my_bits_high,$00080808);
                                    opp_bits_high := BXOr(opp_bits_high,$00080808);
                                  end;
                              end
                            else
                            if BAnd(my_bits_high,$00080000) <> 0 then { if plat[D7] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$08080000);
                                opp_bits_low := BXOr(opp_bits_low,$08080000);
                                my_bits_high := BOr(my_bits_high,$00000808);
                                opp_bits_high := BXOr(opp_bits_high,$00000808);
                              end;
                          end
                        else
                        if BAnd(my_bits_high,$00000800) <> 0 then { if plat[D6] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$08080000);
                            opp_bits_low := BXOr(opp_bits_low,$08080000);
                            my_bits_high := BOr(my_bits_high,$00000008);
                            opp_bits_high := BXOr(opp_bits_high,$00000008);
                          end;
                      end
                    else
                    if BAnd(my_bits_high,$00000008) <> 0 then { if plat[D5] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$08080000);
                        opp_bits_low := BXOr(opp_bits_low,$08080000);
                      end;
                  end
                else
                if BAnd(my_bits_low,$08000000) <> 0 then { if plat[D4] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00080000);
                    opp_bits_low := BXOr(opp_bits_low,$00080000);
                  end;
              end;
            if BAnd(opp_bits_low,$00040000) <> 0 then { if plat[C3] = adversaire then }
              begin
                if BAnd(opp_bits_low,$02000000) <> 0 then { if plat[B4] = adversaire then }
                  begin
                    if BAnd(my_bits_high,$00000001) <> 0 then { if plat[A5] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$02040000);
                        opp_bits_low := BXOr(opp_bits_low,$02040000);
                      end;
                  end
                else
                if BAnd(my_bits_low,$02000000) <> 0 then { if plat[B4] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00040000);
                    opp_bits_low := BXOr(opp_bits_low,$00040000);
                  end;
              end;
            if BAnd(opp_bits_low,$00000400) <> 0 then { if plat[C2] = adversaire then }
              begin
                if BAnd(opp_bits_low,$00000200) <> 0 then { if plat[B2] = adversaire then }
                  begin
                    if BAnd(my_bits_low,$00000100) <> 0 then { if plat[A2] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$00000600);
                        opp_bits_low := BXOr(opp_bits_low,$00000600);
                      end;
                  end
                else
                if BAnd(my_bits_low,$00000200) <> 0 then { if plat[B2] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00000400);
                    opp_bits_low := BXOr(opp_bits_low,$00000400);
                  end;
              end;
            if (nbPrise <> 0)
              then
                begin
                  diffPions := succ(diffPions+nbprise);
                  ModifPlatBitboard := BXOr(vecteurParite,$00000001);
                  my_bits_low := BOr(my_bits_low,$00000800);  { place the disc in D2 }
                  g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
                  g_my_bits_high  := opp_bits_high;
                  g_opp_bits_low  := my_bits_low;
                  g_opp_bits_high := my_bits_high;
                end
              else
                ModifPlatBitboard := vecteurParite;
          end;
        25 :    { E2 }
          begin
            if BAnd(opp_bits_low,$00002000) <> 0 then { if plat[F2] = adversaire then }
              begin
                if BAnd(opp_bits_low,$00004000) <> 0 then { if plat[G2] = adversaire then }
                  begin
                    if BAnd(my_bits_low,$00008000) <> 0 then { if plat[H2] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$00006000);
                        opp_bits_low := BXOr(opp_bits_low,$00006000);
                      end;
                  end
                else
                if BAnd(my_bits_low,$00004000) <> 0 then { if plat[G2] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00002000);
                    opp_bits_low := BXOr(opp_bits_low,$00002000);
                  end;
              end;
            if BAnd(opp_bits_low,$00200000) <> 0 then { if plat[F3] = adversaire then }
              begin
                if BAnd(opp_bits_low,$40000000) <> 0 then { if plat[G4] = adversaire then }
                  begin
                    if BAnd(my_bits_high,$00000080) <> 0 then { if plat[H5] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$40200000);
                        opp_bits_low := BXOr(opp_bits_low,$40200000);
                      end;
                  end
                else
                if BAnd(my_bits_low,$40000000) <> 0 then { if plat[G4] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00200000);
                    opp_bits_low := BXOr(opp_bits_low,$00200000);
                  end;
              end;
            if BAnd(opp_bits_low,$00100000) <> 0 then { if plat[E3] = adversaire then }
              begin
                if BAnd(opp_bits_low,$10000000) <> 0 then { if plat[E4] = adversaire then }
                  begin
                    if BAnd(opp_bits_high,$00000010) <> 0 then { if plat[E5] = adversaire then }
                      begin
                        if BAnd(opp_bits_high,$00001000) <> 0 then { if plat[E6] = adversaire then }
                          begin
                            if BAnd(opp_bits_high,$00100000) <> 0 then { if plat[E7] = adversaire then }
                              begin
                                if BAnd(my_bits_high,$10000000) <> 0 then { if plat[E8] = couleur then }
                                  begin
                                    nbprise := nbprise + 10;
                                    my_bits_low := BOr(my_bits_low,$10100000);
                                    opp_bits_low := BXOr(opp_bits_low,$10100000);
                                    my_bits_high := BOr(my_bits_high,$00101010);
                                    opp_bits_high := BXOr(opp_bits_high,$00101010);
                                  end;
                              end
                            else
                            if BAnd(my_bits_high,$00100000) <> 0 then { if plat[E7] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$10100000);
                                opp_bits_low := BXOr(opp_bits_low,$10100000);
                                my_bits_high := BOr(my_bits_high,$00001010);
                                opp_bits_high := BXOr(opp_bits_high,$00001010);
                              end;
                          end
                        else
                        if BAnd(my_bits_high,$00001000) <> 0 then { if plat[E6] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$10100000);
                            opp_bits_low := BXOr(opp_bits_low,$10100000);
                            my_bits_high := BOr(my_bits_high,$00000010);
                            opp_bits_high := BXOr(opp_bits_high,$00000010);
                          end;
                      end
                    else
                    if BAnd(my_bits_high,$00000010) <> 0 then { if plat[E5] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$10100000);
                        opp_bits_low := BXOr(opp_bits_low,$10100000);
                      end;
                  end
                else
                if BAnd(my_bits_low,$10000000) <> 0 then { if plat[E4] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00100000);
                    opp_bits_low := BXOr(opp_bits_low,$00100000);
                  end;
              end;
            if BAnd(opp_bits_low,$00080000) <> 0 then { if plat[D3] = adversaire then }
              begin
                if BAnd(opp_bits_low,$04000000) <> 0 then { if plat[C4] = adversaire then }
                  begin
                    if BAnd(opp_bits_high,$00000002) <> 0 then { if plat[B5] = adversaire then }
                      begin
                        if BAnd(my_bits_high,$00000100) <> 0 then { if plat[A6] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$04080000);
                            opp_bits_low := BXOr(opp_bits_low,$04080000);
                            my_bits_high := BOr(my_bits_high,$00000002);
                            opp_bits_high := BXOr(opp_bits_high,$00000002);
                          end;
                      end
                    else
                    if BAnd(my_bits_high,$00000002) <> 0 then { if plat[B5] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$04080000);
                        opp_bits_low := BXOr(opp_bits_low,$04080000);
                      end;
                  end
                else
                if BAnd(my_bits_low,$04000000) <> 0 then { if plat[C4] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00080000);
                    opp_bits_low := BXOr(opp_bits_low,$00080000);
                  end;
              end;
            if BAnd(opp_bits_low,$00000800) <> 0 then { if plat[D2] = adversaire then }
              begin
                if BAnd(opp_bits_low,$00000400) <> 0 then { if plat[C2] = adversaire then }
                  begin
                    if BAnd(opp_bits_low,$00000200) <> 0 then { if plat[B2] = adversaire then }
                      begin
                        if BAnd(my_bits_low,$00000100) <> 0 then { if plat[A2] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$00000E00);
                            opp_bits_low := BXOr(opp_bits_low,$00000E00);
                          end;
                      end
                    else
                    if BAnd(my_bits_low,$00000200) <> 0 then { if plat[B2] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$00000C00);
                        opp_bits_low := BXOr(opp_bits_low,$00000C00);
                      end;
                  end
                else
                if BAnd(my_bits_low,$00000400) <> 0 then { if plat[C2] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00000800);
                    opp_bits_low := BXOr(opp_bits_low,$00000800);
                  end;
              end;
            if (nbPrise <> 0)
              then
                begin
                  diffPions := succ(diffPions+nbprise);
                  ModifPlatBitboard := BXOr(vecteurParite,$00000002);
                  my_bits_low := BOr(my_bits_low,$00001000);  { place the disc in E2 }
                  g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
                  g_my_bits_high  := opp_bits_high;
                  g_opp_bits_low  := my_bits_low;
                  g_opp_bits_high := my_bits_high;
                end
              else
                ModifPlatBitboard := vecteurParite;
          end;
        26 :    { F2 }
          begin
            if BAnd(opp_bits_low,$00004000) <> 0 then { if plat[G2] = adversaire then }
              begin
                if BAnd(my_bits_low,$00008000) <> 0 then { if plat[H2] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00004000);
                    opp_bits_low := BXOr(opp_bits_low,$00004000);
                  end;
              end;
            if BAnd(opp_bits_low,$00400000) <> 0 then { if plat[G3] = adversaire then }
              begin
                if BAnd(my_bits_low,$80000000) <> 0 then { if plat[H4] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00400000);
                    opp_bits_low := BXOr(opp_bits_low,$00400000);
                  end;
              end;
            if BAnd(opp_bits_low,$00200000) <> 0 then { if plat[F3] = adversaire then }
              begin
                if BAnd(opp_bits_low,$20000000) <> 0 then { if plat[F4] = adversaire then }
                  begin
                    if BAnd(opp_bits_high,$00000020) <> 0 then { if plat[F5] = adversaire then }
                      begin
                        if BAnd(opp_bits_high,$00002000) <> 0 then { if plat[F6] = adversaire then }
                          begin
                            if BAnd(opp_bits_high,$00200000) <> 0 then { if plat[F7] = adversaire then }
                              begin
                                if BAnd(my_bits_high,$20000000) <> 0 then { if plat[F8] = couleur then }
                                  begin
                                    nbprise := nbprise + 10;
                                    my_bits_low := BOr(my_bits_low,$20200000);
                                    opp_bits_low := BXOr(opp_bits_low,$20200000);
                                    my_bits_high := BOr(my_bits_high,$00202020);
                                    opp_bits_high := BXOr(opp_bits_high,$00202020);
                                  end;
                              end
                            else
                            if BAnd(my_bits_high,$00200000) <> 0 then { if plat[F7] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$20200000);
                                opp_bits_low := BXOr(opp_bits_low,$20200000);
                                my_bits_high := BOr(my_bits_high,$00002020);
                                opp_bits_high := BXOr(opp_bits_high,$00002020);
                              end;
                          end
                        else
                        if BAnd(my_bits_high,$00002000) <> 0 then { if plat[F6] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$20200000);
                            opp_bits_low := BXOr(opp_bits_low,$20200000);
                            my_bits_high := BOr(my_bits_high,$00000020);
                            opp_bits_high := BXOr(opp_bits_high,$00000020);
                          end;
                      end
                    else
                    if BAnd(my_bits_high,$00000020) <> 0 then { if plat[F5] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$20200000);
                        opp_bits_low := BXOr(opp_bits_low,$20200000);
                      end;
                  end
                else
                if BAnd(my_bits_low,$20000000) <> 0 then { if plat[F4] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00200000);
                    opp_bits_low := BXOr(opp_bits_low,$00200000);
                  end;
              end;
            if BAnd(opp_bits_low,$00100000) <> 0 then { if plat[E3] = adversaire then }
              begin
                if BAnd(opp_bits_low,$08000000) <> 0 then { if plat[D4] = adversaire then }
                  begin
                    if BAnd(opp_bits_high,$00000004) <> 0 then { if plat[C5] = adversaire then }
                      begin
                        if BAnd(opp_bits_high,$00000200) <> 0 then { if plat[B6] = adversaire then }
                          begin
                            if BAnd(my_bits_high,$00010000) <> 0 then { if plat[A7] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$08100000);
                                opp_bits_low := BXOr(opp_bits_low,$08100000);
                                my_bits_high := BOr(my_bits_high,$00000204);
                                opp_bits_high := BXOr(opp_bits_high,$00000204);
                              end;
                          end
                        else
                        if BAnd(my_bits_high,$00000200) <> 0 then { if plat[B6] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$08100000);
                            opp_bits_low := BXOr(opp_bits_low,$08100000);
                            my_bits_high := BOr(my_bits_high,$00000004);
                            opp_bits_high := BXOr(opp_bits_high,$00000004);
                          end;
                      end
                    else
                    if BAnd(my_bits_high,$00000004) <> 0 then { if plat[C5] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$08100000);
                        opp_bits_low := BXOr(opp_bits_low,$08100000);
                      end;
                  end
                else
                if BAnd(my_bits_low,$08000000) <> 0 then { if plat[D4] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00100000);
                    opp_bits_low := BXOr(opp_bits_low,$00100000);
                  end;
              end;
            if BAnd(opp_bits_low,$00001000) <> 0 then { if plat[E2] = adversaire then }
              begin
                if BAnd(opp_bits_low,$00000800) <> 0 then { if plat[D2] = adversaire then }
                  begin
                    if BAnd(opp_bits_low,$00000400) <> 0 then { if plat[C2] = adversaire then }
                      begin
                        if BAnd(opp_bits_low,$00000200) <> 0 then { if plat[B2] = adversaire then }
                          begin
                            if BAnd(my_bits_low,$00000100) <> 0 then { if plat[A2] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$00001E00);
                                opp_bits_low := BXOr(opp_bits_low,$00001E00);
                              end;
                          end
                        else
                        if BAnd(my_bits_low,$00000200) <> 0 then { if plat[B2] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$00001C00);
                            opp_bits_low := BXOr(opp_bits_low,$00001C00);
                          end;
                      end
                    else
                    if BAnd(my_bits_low,$00000400) <> 0 then { if plat[C2] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$00001800);
                        opp_bits_low := BXOr(opp_bits_low,$00001800);
                      end;
                  end
                else
                if BAnd(my_bits_low,$00000800) <> 0 then { if plat[D2] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00001000);
                    opp_bits_low := BXOr(opp_bits_low,$00001000);
                  end;
              end;
            if (nbPrise <> 0)
              then
                begin
                  diffPions := succ(diffPions+nbprise);
                  ModifPlatBitboard := BXOr(vecteurParite,$00000002);
                  my_bits_low := BOr(my_bits_low,$00002000);  { place the disc in F2 }
                  g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
                  g_my_bits_high  := opp_bits_high;
                  g_opp_bits_low  := my_bits_low;
                  g_opp_bits_high := my_bits_high;
                end
              else
                ModifPlatBitboard := vecteurParite;
          end;
        27 :    { G2 }
          begin
            if BAnd(opp_bits_low,$00400000) <> 0 then { if plat[G3] = adversaire then }
              begin
                if BAnd(opp_bits_low,$40000000) <> 0 then { if plat[G4] = adversaire then }
                  begin
                    if BAnd(opp_bits_high,$00000040) <> 0 then { if plat[G5] = adversaire then }
                      begin
                        if BAnd(opp_bits_high,$00004000) <> 0 then { if plat[G6] = adversaire then }
                          begin
                            if BAnd(opp_bits_high,$00400000) <> 0 then { if plat[G7] = adversaire then }
                              begin
                                if BAnd(my_bits_high,$40000000) <> 0 then { if plat[G8] = couleur then }
                                  begin
                                    nbprise := nbprise + 10;
                                    my_bits_low := BOr(my_bits_low,$40400000);
                                    opp_bits_low := BXOr(opp_bits_low,$40400000);
                                    my_bits_high := BOr(my_bits_high,$00404040);
                                    opp_bits_high := BXOr(opp_bits_high,$00404040);
                                  end;
                              end
                            else
                            if BAnd(my_bits_high,$00400000) <> 0 then { if plat[G7] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$40400000);
                                opp_bits_low := BXOr(opp_bits_low,$40400000);
                                my_bits_high := BOr(my_bits_high,$00004040);
                                opp_bits_high := BXOr(opp_bits_high,$00004040);
                              end;
                          end
                        else
                        if BAnd(my_bits_high,$00004000) <> 0 then { if plat[G6] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$40400000);
                            opp_bits_low := BXOr(opp_bits_low,$40400000);
                            my_bits_high := BOr(my_bits_high,$00000040);
                            opp_bits_high := BXOr(opp_bits_high,$00000040);
                          end;
                      end
                    else
                    if BAnd(my_bits_high,$00000040) <> 0 then { if plat[G5] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$40400000);
                        opp_bits_low := BXOr(opp_bits_low,$40400000);
                      end;
                  end
                else
                if BAnd(my_bits_low,$40000000) <> 0 then { if plat[G4] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00400000);
                    opp_bits_low := BXOr(opp_bits_low,$00400000);
                  end;
              end;
            if BAnd(opp_bits_low,$00200000) <> 0 then { if plat[F3] = adversaire then }
              begin
                if BAnd(opp_bits_low,$10000000) <> 0 then { if plat[E4] = adversaire then }
                  begin
                    if BAnd(opp_bits_high,$00000008) <> 0 then { if plat[D5] = adversaire then }
                      begin
                        if BAnd(opp_bits_high,$00000400) <> 0 then { if plat[C6] = adversaire then }
                          begin
                            if BAnd(opp_bits_high,$00020000) <> 0 then { if plat[B7] = adversaire then }
                              begin
                                if BAnd(my_bits_high,$01000000) <> 0 then { if plat[A8] = couleur then }
                                  begin
                                    nbprise := nbprise + 10;
                                    my_bits_low := BOr(my_bits_low,$10200000);
                                    opp_bits_low := BXOr(opp_bits_low,$10200000);
                                    my_bits_high := BOr(my_bits_high,$00020408);
                                    opp_bits_high := BXOr(opp_bits_high,$00020408);
                                  end;
                              end
                            else
                            if BAnd(my_bits_high,$00020000) <> 0 then { if plat[B7] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$10200000);
                                opp_bits_low := BXOr(opp_bits_low,$10200000);
                                my_bits_high := BOr(my_bits_high,$00000408);
                                opp_bits_high := BXOr(opp_bits_high,$00000408);
                              end;
                          end
                        else
                        if BAnd(my_bits_high,$00000400) <> 0 then { if plat[C6] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$10200000);
                            opp_bits_low := BXOr(opp_bits_low,$10200000);
                            my_bits_high := BOr(my_bits_high,$00000008);
                            opp_bits_high := BXOr(opp_bits_high,$00000008);
                          end;
                      end
                    else
                    if BAnd(my_bits_high,$00000008) <> 0 then { if plat[D5] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$10200000);
                        opp_bits_low := BXOr(opp_bits_low,$10200000);
                      end;
                  end
                else
                if BAnd(my_bits_low,$10000000) <> 0 then { if plat[E4] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00200000);
                    opp_bits_low := BXOr(opp_bits_low,$00200000);
                  end;
              end;
            if BAnd(opp_bits_low,$00002000) <> 0 then { if plat[F2] = adversaire then }
              begin
                if BAnd(opp_bits_low,$00001000) <> 0 then { if plat[E2] = adversaire then }
                  begin
                    if BAnd(opp_bits_low,$00000800) <> 0 then { if plat[D2] = adversaire then }
                      begin
                        if BAnd(opp_bits_low,$00000400) <> 0 then { if plat[C2] = adversaire then }
                          begin
                            if BAnd(opp_bits_low,$00000200) <> 0 then { if plat[B2] = adversaire then }
                              begin
                                if BAnd(my_bits_low,$00000100) <> 0 then { if plat[A2] = couleur then }
                                  begin
                                    nbprise := nbprise + 10;
                                    my_bits_low := BOr(my_bits_low,$00003E00);
                                    opp_bits_low := BXOr(opp_bits_low,$00003E00);
                                  end;
                              end
                            else
                            if BAnd(my_bits_low,$00000200) <> 0 then { if plat[B2] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$00003C00);
                                opp_bits_low := BXOr(opp_bits_low,$00003C00);
                              end;
                          end
                        else
                        if BAnd(my_bits_low,$00000400) <> 0 then { if plat[C2] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$00003800);
                            opp_bits_low := BXOr(opp_bits_low,$00003800);
                          end;
                      end
                    else
                    if BAnd(my_bits_low,$00000800) <> 0 then { if plat[D2] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$00003000);
                        opp_bits_low := BXOr(opp_bits_low,$00003000);
                      end;
                  end
                else
                if BAnd(my_bits_low,$00001000) <> 0 then { if plat[E2] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00002000);
                    opp_bits_low := BXOr(opp_bits_low,$00002000);
                  end;
              end;
            if (nbPrise <> 0)
              then
                begin
                  diffPions := succ(diffPions+nbprise);
                  ModifPlatBitboard := BXOr(vecteurParite,$00000002);
                  my_bits_low := BOr(my_bits_low,$00004000);  { place the disc in G2 }
                  g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
                  g_my_bits_high  := opp_bits_high;
                  g_opp_bits_low  := my_bits_low;
                  g_opp_bits_high := my_bits_high;
                end
              else
                ModifPlatBitboard := vecteurParite;
          end;
        28 :    { H2 }
          begin
            if BAnd(opp_bits_low,$00800000) <> 0 then { if plat[H3] = adversaire then }
              begin
                if BAnd(opp_bits_low,$80000000) <> 0 then { if plat[H4] = adversaire then }
                  begin
                    if BAnd(opp_bits_high,$00000080) <> 0 then { if plat[H5] = adversaire then }
                      begin
                        if BAnd(opp_bits_high,$00008000) <> 0 then { if plat[H6] = adversaire then }
                          begin
                            if BAnd(opp_bits_high,$00800000) <> 0 then { if plat[H7] = adversaire then }
                              begin
                                if BAnd(my_bits_high,$80000000) <> 0 then { if plat[H8] = couleur then }
                                  begin
                                    nbprise := nbprise + 10;
                                    my_bits_low := BOr(my_bits_low,$80800000);
                                    opp_bits_low := BXOr(opp_bits_low,$80800000);
                                    my_bits_high := BOr(my_bits_high,$00808080);
                                    opp_bits_high := BXOr(opp_bits_high,$00808080);
                                  end;
                              end
                            else
                            if BAnd(my_bits_high,$00800000) <> 0 then { if plat[H7] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$80800000);
                                opp_bits_low := BXOr(opp_bits_low,$80800000);
                                my_bits_high := BOr(my_bits_high,$00008080);
                                opp_bits_high := BXOr(opp_bits_high,$00008080);
                              end;
                          end
                        else
                        if BAnd(my_bits_high,$00008000) <> 0 then { if plat[H6] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$80800000);
                            opp_bits_low := BXOr(opp_bits_low,$80800000);
                            my_bits_high := BOr(my_bits_high,$00000080);
                            opp_bits_high := BXOr(opp_bits_high,$00000080);
                          end;
                      end
                    else
                    if BAnd(my_bits_high,$00000080) <> 0 then { if plat[H5] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$80800000);
                        opp_bits_low := BXOr(opp_bits_low,$80800000);
                      end;
                  end
                else
                if BAnd(my_bits_low,$80000000) <> 0 then { if plat[H4] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00800000);
                    opp_bits_low := BXOr(opp_bits_low,$00800000);
                  end;
              end;
            if BAnd(opp_bits_low,$00400000) <> 0 then { if plat[G3] = adversaire then }
              begin
                if BAnd(opp_bits_low,$20000000) <> 0 then { if plat[F4] = adversaire then }
                  begin
                    if BAnd(opp_bits_high,$00000010) <> 0 then { if plat[E5] = adversaire then }
                      begin
                        if BAnd(opp_bits_high,$00000800) <> 0 then { if plat[D6] = adversaire then }
                          begin
                            if BAnd(opp_bits_high,$00040000) <> 0 then { if plat[C7] = adversaire then }
                              begin
                                if BAnd(my_bits_high,$02000000) <> 0 then { if plat[B8] = couleur then }
                                  begin
                                    nbprise := nbprise + 10;
                                    my_bits_low := BOr(my_bits_low,$20400000);
                                    opp_bits_low := BXOr(opp_bits_low,$20400000);
                                    my_bits_high := BOr(my_bits_high,$00040810);
                                    opp_bits_high := BXOr(opp_bits_high,$00040810);
                                  end;
                              end
                            else
                            if BAnd(my_bits_high,$00040000) <> 0 then { if plat[C7] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$20400000);
                                opp_bits_low := BXOr(opp_bits_low,$20400000);
                                my_bits_high := BOr(my_bits_high,$00000810);
                                opp_bits_high := BXOr(opp_bits_high,$00000810);
                              end;
                          end
                        else
                        if BAnd(my_bits_high,$00000800) <> 0 then { if plat[D6] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$20400000);
                            opp_bits_low := BXOr(opp_bits_low,$20400000);
                            my_bits_high := BOr(my_bits_high,$00000010);
                            opp_bits_high := BXOr(opp_bits_high,$00000010);
                          end;
                      end
                    else
                    if BAnd(my_bits_high,$00000010) <> 0 then { if plat[E5] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$20400000);
                        opp_bits_low := BXOr(opp_bits_low,$20400000);
                      end;
                  end
                else
                if BAnd(my_bits_low,$20000000) <> 0 then { if plat[F4] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00400000);
                    opp_bits_low := BXOr(opp_bits_low,$00400000);
                  end;
              end;
            if BAnd(opp_bits_low,$00004000) <> 0 then { if plat[G2] = adversaire then }
              begin
                if BAnd(opp_bits_low,$00002000) <> 0 then { if plat[F2] = adversaire then }
                  begin
                    if BAnd(opp_bits_low,$00001000) <> 0 then { if plat[E2] = adversaire then }
                      begin
                        if BAnd(opp_bits_low,$00000800) <> 0 then { if plat[D2] = adversaire then }
                          begin
                            if BAnd(opp_bits_low,$00000400) <> 0 then { if plat[C2] = adversaire then }
                              begin
                                if BAnd(opp_bits_low,$00000200) <> 0 then { if plat[B2] = adversaire then }
                                  begin
                                    if BAnd(my_bits_low,$00000100) <> 0 then { if plat[A2] = couleur then }
                                      begin
                                        nbprise := nbprise + 12;
                                        my_bits_low := BOr(my_bits_low,$00007E00);
                                        opp_bits_low := BXOr(opp_bits_low,$00007E00);
                                      end;
                                  end
                                else
                                if BAnd(my_bits_low,$00000200) <> 0 then { if plat[B2] = couleur then }
                                  begin
                                    nbprise := nbprise + 10;
                                    my_bits_low := BOr(my_bits_low,$00007C00);
                                    opp_bits_low := BXOr(opp_bits_low,$00007C00);
                                  end;
                              end
                            else
                            if BAnd(my_bits_low,$00000400) <> 0 then { if plat[C2] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$00007800);
                                opp_bits_low := BXOr(opp_bits_low,$00007800);
                              end;
                          end
                        else
                        if BAnd(my_bits_low,$00000800) <> 0 then { if plat[D2] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$00007000);
                            opp_bits_low := BXOr(opp_bits_low,$00007000);
                          end;
                      end
                    else
                    if BAnd(my_bits_low,$00001000) <> 0 then { if plat[E2] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$00006000);
                        opp_bits_low := BXOr(opp_bits_low,$00006000);
                      end;
                  end
                else
                if BAnd(my_bits_low,$00002000) <> 0 then { if plat[F2] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00004000);
                    opp_bits_low := BXOr(opp_bits_low,$00004000);
                  end;
              end;
            if (nbPrise <> 0)
              then
                begin
                  diffPions := succ(diffPions+nbprise);
                  ModifPlatBitboard := BXOr(vecteurParite,$00000002);
                  my_bits_low := BOr(my_bits_low,$00008000);  { place the disc in H2 }
                  g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
                  g_my_bits_high  := opp_bits_high;
                  g_opp_bits_low  := my_bits_low;
                  g_opp_bits_high := my_bits_high;
                end
              else
                ModifPlatBitboard := vecteurParite;
          end;
        31 :    { A3 }
          begin
            if BAnd(opp_bits_low,$00000100) <> 0 then { if plat[A2] = adversaire then }
              begin
                if BAnd(my_bits_low,$00000001) <> 0 then { if plat[A1] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00000100);
                    opp_bits_low := BXOr(opp_bits_low,$00000100);
                  end;
              end;
            if BAnd(opp_bits_low,$00000200) <> 0 then { if plat[B2] = adversaire then }
              begin
                if BAnd(my_bits_low,$00000004) <> 0 then { if plat[C1] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00000200);
                    opp_bits_low := BXOr(opp_bits_low,$00000200);
                  end;
              end;
            if BAnd(opp_bits_low,$00020000) <> 0 then { if plat[B3] = adversaire then }
              begin
                if BAnd(opp_bits_low,$00040000) <> 0 then { if plat[C3] = adversaire then }
                  begin
                    if BAnd(opp_bits_low,$00080000) <> 0 then { if plat[D3] = adversaire then }
                      begin
                        if BAnd(opp_bits_low,$00100000) <> 0 then { if plat[E3] = adversaire then }
                          begin
                            if BAnd(opp_bits_low,$00200000) <> 0 then { if plat[F3] = adversaire then }
                              begin
                                if BAnd(opp_bits_low,$00400000) <> 0 then { if plat[G3] = adversaire then }
                                  begin
                                    if BAnd(my_bits_low,$00800000) <> 0 then { if plat[H3] = couleur then }
                                      begin
                                        nbprise := nbprise + 12;
                                        my_bits_low := BOr(my_bits_low,$007E0000);
                                        opp_bits_low := BXOr(opp_bits_low,$007E0000);
                                      end;
                                  end
                                else
                                if BAnd(my_bits_low,$00400000) <> 0 then { if plat[G3] = couleur then }
                                  begin
                                    nbprise := nbprise + 10;
                                    my_bits_low := BOr(my_bits_low,$003E0000);
                                    opp_bits_low := BXOr(opp_bits_low,$003E0000);
                                  end;
                              end
                            else
                            if BAnd(my_bits_low,$00200000) <> 0 then { if plat[F3] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$001E0000);
                                opp_bits_low := BXOr(opp_bits_low,$001E0000);
                              end;
                          end
                        else
                        if BAnd(my_bits_low,$00100000) <> 0 then { if plat[E3] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$000E0000);
                            opp_bits_low := BXOr(opp_bits_low,$000E0000);
                          end;
                      end
                    else
                    if BAnd(my_bits_low,$00080000) <> 0 then { if plat[D3] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$00060000);
                        opp_bits_low := BXOr(opp_bits_low,$00060000);
                      end;
                  end
                else
                if BAnd(my_bits_low,$00040000) <> 0 then { if plat[C3] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00020000);
                    opp_bits_low := BXOr(opp_bits_low,$00020000);
                  end;
              end;
            if BAnd(opp_bits_low,$02000000) <> 0 then { if plat[B4] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00000004) <> 0 then { if plat[C5] = adversaire then }
                  begin
                    if BAnd(opp_bits_high,$00000800) <> 0 then { if plat[D6] = adversaire then }
                      begin
                        if BAnd(opp_bits_high,$00100000) <> 0 then { if plat[E7] = adversaire then }
                          begin
                            if BAnd(my_bits_high,$20000000) <> 0 then { if plat[F8] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$02000000);
                                opp_bits_low := BXOr(opp_bits_low,$02000000);
                                my_bits_high := BOr(my_bits_high,$00100804);
                                opp_bits_high := BXOr(opp_bits_high,$00100804);
                              end;
                          end
                        else
                        if BAnd(my_bits_high,$00100000) <> 0 then { if plat[E7] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$02000000);
                            opp_bits_low := BXOr(opp_bits_low,$02000000);
                            my_bits_high := BOr(my_bits_high,$00000804);
                            opp_bits_high := BXOr(opp_bits_high,$00000804);
                          end;
                      end
                    else
                    if BAnd(my_bits_high,$00000800) <> 0 then { if plat[D6] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$02000000);
                        opp_bits_low := BXOr(opp_bits_low,$02000000);
                        my_bits_high := BOr(my_bits_high,$00000004);
                        opp_bits_high := BXOr(opp_bits_high,$00000004);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00000004) <> 0 then { if plat[C5] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$02000000);
                    opp_bits_low := BXOr(opp_bits_low,$02000000);
                  end;
              end;
            if BAnd(opp_bits_low,$01000000) <> 0 then { if plat[A4] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00000001) <> 0 then { if plat[A5] = adversaire then }
                  begin
                    if BAnd(opp_bits_high,$00000100) <> 0 then { if plat[A6] = adversaire then }
                      begin
                        if BAnd(opp_bits_high,$00010000) <> 0 then { if plat[A7] = adversaire then }
                          begin
                            if BAnd(my_bits_high,$01000000) <> 0 then { if plat[A8] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$01000000);
                                opp_bits_low := BXOr(opp_bits_low,$01000000);
                                my_bits_high := BOr(my_bits_high,$00010101);
                                opp_bits_high := BXOr(opp_bits_high,$00010101);
                              end;
                          end
                        else
                        if BAnd(my_bits_high,$00010000) <> 0 then { if plat[A7] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$01000000);
                            opp_bits_low := BXOr(opp_bits_low,$01000000);
                            my_bits_high := BOr(my_bits_high,$00000101);
                            opp_bits_high := BXOr(opp_bits_high,$00000101);
                          end;
                      end
                    else
                    if BAnd(my_bits_high,$00000100) <> 0 then { if plat[A6] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$01000000);
                        opp_bits_low := BXOr(opp_bits_low,$01000000);
                        my_bits_high := BOr(my_bits_high,$00000001);
                        opp_bits_high := BXOr(opp_bits_high,$00000001);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00000001) <> 0 then { if plat[A5] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$01000000);
                    opp_bits_low := BXOr(opp_bits_low,$01000000);
                  end;
              end;
            if (nbPrise <> 0)
              then
                begin
                  diffPions := succ(diffPions+nbprise);
                  ModifPlatBitboard := BXOr(vecteurParite,$00000001);
                  my_bits_low := BOr(my_bits_low,$00010000);  { place the disc in A3 }
                  g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
                  g_my_bits_high  := opp_bits_high;
                  g_opp_bits_low  := my_bits_low;
                  g_opp_bits_high := my_bits_high;
                end
              else
                ModifPlatBitboard := vecteurParite;
          end;
        32 :    { B3 }
          begin
            if BAnd(opp_bits_low,$00000200) <> 0 then { if plat[B2] = adversaire then }
              begin
                if BAnd(my_bits_low,$00000002) <> 0 then { if plat[B1] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00000200);
                    opp_bits_low := BXOr(opp_bits_low,$00000200);
                  end;
              end;
            if BAnd(opp_bits_low,$00000400) <> 0 then { if plat[C2] = adversaire then }
              begin
                if BAnd(my_bits_low,$00000008) <> 0 then { if plat[D1] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00000400);
                    opp_bits_low := BXOr(opp_bits_low,$00000400);
                  end;
              end;
            if BAnd(opp_bits_low,$00040000) <> 0 then { if plat[C3] = adversaire then }
              begin
                if BAnd(opp_bits_low,$00080000) <> 0 then { if plat[D3] = adversaire then }
                  begin
                    if BAnd(opp_bits_low,$00100000) <> 0 then { if plat[E3] = adversaire then }
                      begin
                        if BAnd(opp_bits_low,$00200000) <> 0 then { if plat[F3] = adversaire then }
                          begin
                            if BAnd(opp_bits_low,$00400000) <> 0 then { if plat[G3] = adversaire then }
                              begin
                                if BAnd(my_bits_low,$00800000) <> 0 then { if plat[H3] = couleur then }
                                  begin
                                    nbprise := nbprise + 10;
                                    my_bits_low := BOr(my_bits_low,$007C0000);
                                    opp_bits_low := BXOr(opp_bits_low,$007C0000);
                                  end;
                              end
                            else
                            if BAnd(my_bits_low,$00400000) <> 0 then { if plat[G3] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$003C0000);
                                opp_bits_low := BXOr(opp_bits_low,$003C0000);
                              end;
                          end
                        else
                        if BAnd(my_bits_low,$00200000) <> 0 then { if plat[F3] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$001C0000);
                            opp_bits_low := BXOr(opp_bits_low,$001C0000);
                          end;
                      end
                    else
                    if BAnd(my_bits_low,$00100000) <> 0 then { if plat[E3] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$000C0000);
                        opp_bits_low := BXOr(opp_bits_low,$000C0000);
                      end;
                  end
                else
                if BAnd(my_bits_low,$00080000) <> 0 then { if plat[D3] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00040000);
                    opp_bits_low := BXOr(opp_bits_low,$00040000);
                  end;
              end;
            if BAnd(opp_bits_low,$04000000) <> 0 then { if plat[C4] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00000008) <> 0 then { if plat[D5] = adversaire then }
                  begin
                    if BAnd(opp_bits_high,$00001000) <> 0 then { if plat[E6] = adversaire then }
                      begin
                        if BAnd(opp_bits_high,$00200000) <> 0 then { if plat[F7] = adversaire then }
                          begin
                            if BAnd(my_bits_high,$40000000) <> 0 then { if plat[G8] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$04000000);
                                opp_bits_low := BXOr(opp_bits_low,$04000000);
                                my_bits_high := BOr(my_bits_high,$00201008);
                                opp_bits_high := BXOr(opp_bits_high,$00201008);
                              end;
                          end
                        else
                        if BAnd(my_bits_high,$00200000) <> 0 then { if plat[F7] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$04000000);
                            opp_bits_low := BXOr(opp_bits_low,$04000000);
                            my_bits_high := BOr(my_bits_high,$00001008);
                            opp_bits_high := BXOr(opp_bits_high,$00001008);
                          end;
                      end
                    else
                    if BAnd(my_bits_high,$00001000) <> 0 then { if plat[E6] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$04000000);
                        opp_bits_low := BXOr(opp_bits_low,$04000000);
                        my_bits_high := BOr(my_bits_high,$00000008);
                        opp_bits_high := BXOr(opp_bits_high,$00000008);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00000008) <> 0 then { if plat[D5] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$04000000);
                    opp_bits_low := BXOr(opp_bits_low,$04000000);
                  end;
              end;
            if BAnd(opp_bits_low,$02000000) <> 0 then { if plat[B4] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00000002) <> 0 then { if plat[B5] = adversaire then }
                  begin
                    if BAnd(opp_bits_high,$00000200) <> 0 then { if plat[B6] = adversaire then }
                      begin
                        if BAnd(opp_bits_high,$00020000) <> 0 then { if plat[B7] = adversaire then }
                          begin
                            if BAnd(my_bits_high,$02000000) <> 0 then { if plat[B8] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$02000000);
                                opp_bits_low := BXOr(opp_bits_low,$02000000);
                                my_bits_high := BOr(my_bits_high,$00020202);
                                opp_bits_high := BXOr(opp_bits_high,$00020202);
                              end;
                          end
                        else
                        if BAnd(my_bits_high,$00020000) <> 0 then { if plat[B7] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$02000000);
                            opp_bits_low := BXOr(opp_bits_low,$02000000);
                            my_bits_high := BOr(my_bits_high,$00000202);
                            opp_bits_high := BXOr(opp_bits_high,$00000202);
                          end;
                      end
                    else
                    if BAnd(my_bits_high,$00000200) <> 0 then { if plat[B6] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$02000000);
                        opp_bits_low := BXOr(opp_bits_low,$02000000);
                        my_bits_high := BOr(my_bits_high,$00000002);
                        opp_bits_high := BXOr(opp_bits_high,$00000002);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00000002) <> 0 then { if plat[B5] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$02000000);
                    opp_bits_low := BXOr(opp_bits_low,$02000000);
                  end;
              end;
            if (nbPrise <> 0)
              then
                begin
                  diffPions := succ(diffPions+nbprise);
                  ModifPlatBitboard := BXOr(vecteurParite,$00000001);
                  my_bits_low := BOr(my_bits_low,$00020000);  { place the disc in B3 }
                  g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
                  g_my_bits_high  := opp_bits_high;
                  g_opp_bits_low  := my_bits_low;
                  g_opp_bits_high := my_bits_high;
                end
              else
                ModifPlatBitboard := vecteurParite;
          end;
        33 :    { C3 }
          begin
            if BAnd(opp_bits_low,$00000200) <> 0 then { if plat[B2] = adversaire then }
              begin
                if BAnd(my_bits_low,$00000001) <> 0 then { if plat[A1] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00000200);
                    opp_bits_low := BXOr(opp_bits_low,$00000200);
                  end;
              end;
            if BAnd(opp_bits_low,$00000400) <> 0 then { if plat[C2] = adversaire then }
              begin
                if BAnd(my_bits_low,$00000004) <> 0 then { if plat[C1] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00000400);
                    opp_bits_low := BXOr(opp_bits_low,$00000400);
                  end;
              end;
            if BAnd(opp_bits_low,$00000800) <> 0 then { if plat[D2] = adversaire then }
              begin
                if BAnd(my_bits_low,$00000010) <> 0 then { if plat[E1] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00000800);
                    opp_bits_low := BXOr(opp_bits_low,$00000800);
                  end;
              end;
            if BAnd(opp_bits_low,$00080000) <> 0 then { if plat[D3] = adversaire then }
              begin
                if BAnd(opp_bits_low,$00100000) <> 0 then { if plat[E3] = adversaire then }
                  begin
                    if BAnd(opp_bits_low,$00200000) <> 0 then { if plat[F3] = adversaire then }
                      begin
                        if BAnd(opp_bits_low,$00400000) <> 0 then { if plat[G3] = adversaire then }
                          begin
                            if BAnd(my_bits_low,$00800000) <> 0 then { if plat[H3] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$00780000);
                                opp_bits_low := BXOr(opp_bits_low,$00780000);
                              end;
                          end
                        else
                        if BAnd(my_bits_low,$00400000) <> 0 then { if plat[G3] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$00380000);
                            opp_bits_low := BXOr(opp_bits_low,$00380000);
                          end;
                      end
                    else
                    if BAnd(my_bits_low,$00200000) <> 0 then { if plat[F3] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$00180000);
                        opp_bits_low := BXOr(opp_bits_low,$00180000);
                      end;
                  end
                else
                if BAnd(my_bits_low,$00100000) <> 0 then { if plat[E3] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00080000);
                    opp_bits_low := BXOr(opp_bits_low,$00080000);
                  end;
              end;
            if BAnd(opp_bits_low,$08000000) <> 0 then { if plat[D4] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00000010) <> 0 then { if plat[E5] = adversaire then }
                  begin
                    if BAnd(opp_bits_high,$00002000) <> 0 then { if plat[F6] = adversaire then }
                      begin
                        if BAnd(opp_bits_high,$00400000) <> 0 then { if plat[G7] = adversaire then }
                          begin
                            if BAnd(my_bits_high,$80000000) <> 0 then { if plat[H8] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$08000000);
                                opp_bits_low := BXOr(opp_bits_low,$08000000);
                                my_bits_high := BOr(my_bits_high,$00402010);
                                opp_bits_high := BXOr(opp_bits_high,$00402010);
                              end;
                          end
                        else
                        if BAnd(my_bits_high,$00400000) <> 0 then { if plat[G7] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$08000000);
                            opp_bits_low := BXOr(opp_bits_low,$08000000);
                            my_bits_high := BOr(my_bits_high,$00002010);
                            opp_bits_high := BXOr(opp_bits_high,$00002010);
                          end;
                      end
                    else
                    if BAnd(my_bits_high,$00002000) <> 0 then { if plat[F6] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$08000000);
                        opp_bits_low := BXOr(opp_bits_low,$08000000);
                        my_bits_high := BOr(my_bits_high,$00000010);
                        opp_bits_high := BXOr(opp_bits_high,$00000010);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00000010) <> 0 then { if plat[E5] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$08000000);
                    opp_bits_low := BXOr(opp_bits_low,$08000000);
                  end;
              end;
            if BAnd(opp_bits_low,$04000000) <> 0 then { if plat[C4] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00000004) <> 0 then { if plat[C5] = adversaire then }
                  begin
                    if BAnd(opp_bits_high,$00000400) <> 0 then { if plat[C6] = adversaire then }
                      begin
                        if BAnd(opp_bits_high,$00040000) <> 0 then { if plat[C7] = adversaire then }
                          begin
                            if BAnd(my_bits_high,$04000000) <> 0 then { if plat[C8] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$04000000);
                                opp_bits_low := BXOr(opp_bits_low,$04000000);
                                my_bits_high := BOr(my_bits_high,$00040404);
                                opp_bits_high := BXOr(opp_bits_high,$00040404);
                              end;
                          end
                        else
                        if BAnd(my_bits_high,$00040000) <> 0 then { if plat[C7] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$04000000);
                            opp_bits_low := BXOr(opp_bits_low,$04000000);
                            my_bits_high := BOr(my_bits_high,$00000404);
                            opp_bits_high := BXOr(opp_bits_high,$00000404);
                          end;
                      end
                    else
                    if BAnd(my_bits_high,$00000400) <> 0 then { if plat[C6] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$04000000);
                        opp_bits_low := BXOr(opp_bits_low,$04000000);
                        my_bits_high := BOr(my_bits_high,$00000004);
                        opp_bits_high := BXOr(opp_bits_high,$00000004);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00000004) <> 0 then { if plat[C5] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$04000000);
                    opp_bits_low := BXOr(opp_bits_low,$04000000);
                  end;
              end;
            if BAnd(opp_bits_low,$02000000) <> 0 then { if plat[B4] = adversaire then }
              begin
                if BAnd(my_bits_high,$00000001) <> 0 then { if plat[A5] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$02000000);
                    opp_bits_low := BXOr(opp_bits_low,$02000000);
                  end;
              end;
            if BAnd(opp_bits_low,$00020000) <> 0 then { if plat[B3] = adversaire then }
              begin
                if BAnd(my_bits_low,$00010000) <> 0 then { if plat[A3] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00020000);
                    opp_bits_low := BXOr(opp_bits_low,$00020000);
                  end;
              end;
            if (nbPrise <> 0)
              then
                begin
                  diffPions := succ(diffPions+nbprise);
                  ModifPlatBitboard := BXOr(vecteurParite,$00000001);
                  my_bits_low := BOr(my_bits_low,$00040000);  { place the disc in C3 }
                  g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
                  g_my_bits_high  := opp_bits_high;
                  g_opp_bits_low  := my_bits_low;
                  g_opp_bits_high := my_bits_high;
                end
              else
                ModifPlatBitboard := vecteurParite;
          end;
        34 :    { D3 }
          begin
            if BAnd(opp_bits_low,$00000400) <> 0 then { if plat[C2] = adversaire then }
              begin
                if BAnd(my_bits_low,$00000002) <> 0 then { if plat[B1] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00000400);
                    opp_bits_low := BXOr(opp_bits_low,$00000400);
                  end;
              end;
            if BAnd(opp_bits_low,$00000800) <> 0 then { if plat[D2] = adversaire then }
              begin
                if BAnd(my_bits_low,$00000008) <> 0 then { if plat[D1] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00000800);
                    opp_bits_low := BXOr(opp_bits_low,$00000800);
                  end;
              end;
            if BAnd(opp_bits_low,$00001000) <> 0 then { if plat[E2] = adversaire then }
              begin
                if BAnd(my_bits_low,$00000020) <> 0 then { if plat[F1] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00001000);
                    opp_bits_low := BXOr(opp_bits_low,$00001000);
                  end;
              end;
            if BAnd(opp_bits_low,$00100000) <> 0 then { if plat[E3] = adversaire then }
              begin
                if BAnd(opp_bits_low,$00200000) <> 0 then { if plat[F3] = adversaire then }
                  begin
                    if BAnd(opp_bits_low,$00400000) <> 0 then { if plat[G3] = adversaire then }
                      begin
                        if BAnd(my_bits_low,$00800000) <> 0 then { if plat[H3] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$00700000);
                            opp_bits_low := BXOr(opp_bits_low,$00700000);
                          end;
                      end
                    else
                    if BAnd(my_bits_low,$00400000) <> 0 then { if plat[G3] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$00300000);
                        opp_bits_low := BXOr(opp_bits_low,$00300000);
                      end;
                  end
                else
                if BAnd(my_bits_low,$00200000) <> 0 then { if plat[F3] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00100000);
                    opp_bits_low := BXOr(opp_bits_low,$00100000);
                  end;
              end;
            if BAnd(opp_bits_low,$10000000) <> 0 then { if plat[E4] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00000020) <> 0 then { if plat[F5] = adversaire then }
                  begin
                    if BAnd(opp_bits_high,$00004000) <> 0 then { if plat[G6] = adversaire then }
                      begin
                        if BAnd(my_bits_high,$00800000) <> 0 then { if plat[H7] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$10000000);
                            opp_bits_low := BXOr(opp_bits_low,$10000000);
                            my_bits_high := BOr(my_bits_high,$00004020);
                            opp_bits_high := BXOr(opp_bits_high,$00004020);
                          end;
                      end
                    else
                    if BAnd(my_bits_high,$00004000) <> 0 then { if plat[G6] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$10000000);
                        opp_bits_low := BXOr(opp_bits_low,$10000000);
                        my_bits_high := BOr(my_bits_high,$00000020);
                        opp_bits_high := BXOr(opp_bits_high,$00000020);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00000020) <> 0 then { if plat[F5] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$10000000);
                    opp_bits_low := BXOr(opp_bits_low,$10000000);
                  end;
              end;
            if BAnd(opp_bits_low,$08000000) <> 0 then { if plat[D4] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00000008) <> 0 then { if plat[D5] = adversaire then }
                  begin
                    if BAnd(opp_bits_high,$00000800) <> 0 then { if plat[D6] = adversaire then }
                      begin
                        if BAnd(opp_bits_high,$00080000) <> 0 then { if plat[D7] = adversaire then }
                          begin
                            if BAnd(my_bits_high,$08000000) <> 0 then { if plat[D8] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$08000000);
                                opp_bits_low := BXOr(opp_bits_low,$08000000);
                                my_bits_high := BOr(my_bits_high,$00080808);
                                opp_bits_high := BXOr(opp_bits_high,$00080808);
                              end;
                          end
                        else
                        if BAnd(my_bits_high,$00080000) <> 0 then { if plat[D7] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$08000000);
                            opp_bits_low := BXOr(opp_bits_low,$08000000);
                            my_bits_high := BOr(my_bits_high,$00000808);
                            opp_bits_high := BXOr(opp_bits_high,$00000808);
                          end;
                      end
                    else
                    if BAnd(my_bits_high,$00000800) <> 0 then { if plat[D6] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$08000000);
                        opp_bits_low := BXOr(opp_bits_low,$08000000);
                        my_bits_high := BOr(my_bits_high,$00000008);
                        opp_bits_high := BXOr(opp_bits_high,$00000008);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00000008) <> 0 then { if plat[D5] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$08000000);
                    opp_bits_low := BXOr(opp_bits_low,$08000000);
                  end;
              end;
            if BAnd(opp_bits_low,$04000000) <> 0 then { if plat[C4] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00000002) <> 0 then { if plat[B5] = adversaire then }
                  begin
                    if BAnd(my_bits_high,$00000100) <> 0 then { if plat[A6] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$04000000);
                        opp_bits_low := BXOr(opp_bits_low,$04000000);
                        my_bits_high := BOr(my_bits_high,$00000002);
                        opp_bits_high := BXOr(opp_bits_high,$00000002);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00000002) <> 0 then { if plat[B5] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$04000000);
                    opp_bits_low := BXOr(opp_bits_low,$04000000);
                  end;
              end;
            if BAnd(opp_bits_low,$00040000) <> 0 then { if plat[C3] = adversaire then }
              begin
                if BAnd(opp_bits_low,$00020000) <> 0 then { if plat[B3] = adversaire then }
                  begin
                    if BAnd(my_bits_low,$00010000) <> 0 then { if plat[A3] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$00060000);
                        opp_bits_low := BXOr(opp_bits_low,$00060000);
                      end;
                  end
                else
                if BAnd(my_bits_low,$00020000) <> 0 then { if plat[B3] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00040000);
                    opp_bits_low := BXOr(opp_bits_low,$00040000);
                  end;
              end;
            if (nbPrise <> 0)
              then
                begin
                  diffPions := succ(diffPions+nbprise);
                  ModifPlatBitboard := BXOr(vecteurParite,$00000001);
                  my_bits_low := BOr(my_bits_low,$00080000);  { place the disc in D3 }
                  g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
                  g_my_bits_high  := opp_bits_high;
                  g_opp_bits_low  := my_bits_low;
                  g_opp_bits_high := my_bits_high;
                end
              else
                ModifPlatBitboard := vecteurParite;
          end;
        35 :    { E3 }
          begin
            if BAnd(opp_bits_low,$00000800) <> 0 then { if plat[D2] = adversaire then }
              begin
                if BAnd(my_bits_low,$00000004) <> 0 then { if plat[C1] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00000800);
                    opp_bits_low := BXOr(opp_bits_low,$00000800);
                  end;
              end;
            if BAnd(opp_bits_low,$00001000) <> 0 then { if plat[E2] = adversaire then }
              begin
                if BAnd(my_bits_low,$00000010) <> 0 then { if plat[E1] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00001000);
                    opp_bits_low := BXOr(opp_bits_low,$00001000);
                  end;
              end;
            if BAnd(opp_bits_low,$00002000) <> 0 then { if plat[F2] = adversaire then }
              begin
                if BAnd(my_bits_low,$00000040) <> 0 then { if plat[G1] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00002000);
                    opp_bits_low := BXOr(opp_bits_low,$00002000);
                  end;
              end;
            if BAnd(opp_bits_low,$00200000) <> 0 then { if plat[F3] = adversaire then }
              begin
                if BAnd(opp_bits_low,$00400000) <> 0 then { if plat[G3] = adversaire then }
                  begin
                    if BAnd(my_bits_low,$00800000) <> 0 then { if plat[H3] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$00600000);
                        opp_bits_low := BXOr(opp_bits_low,$00600000);
                      end;
                  end
                else
                if BAnd(my_bits_low,$00400000) <> 0 then { if plat[G3] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00200000);
                    opp_bits_low := BXOr(opp_bits_low,$00200000);
                  end;
              end;
            if BAnd(opp_bits_low,$20000000) <> 0 then { if plat[F4] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00000040) <> 0 then { if plat[G5] = adversaire then }
                  begin
                    if BAnd(my_bits_high,$00008000) <> 0 then { if plat[H6] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$20000000);
                        opp_bits_low := BXOr(opp_bits_low,$20000000);
                        my_bits_high := BOr(my_bits_high,$00000040);
                        opp_bits_high := BXOr(opp_bits_high,$00000040);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00000040) <> 0 then { if plat[G5] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$20000000);
                    opp_bits_low := BXOr(opp_bits_low,$20000000);
                  end;
              end;
            if BAnd(opp_bits_low,$10000000) <> 0 then { if plat[E4] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00000010) <> 0 then { if plat[E5] = adversaire then }
                  begin
                    if BAnd(opp_bits_high,$00001000) <> 0 then { if plat[E6] = adversaire then }
                      begin
                        if BAnd(opp_bits_high,$00100000) <> 0 then { if plat[E7] = adversaire then }
                          begin
                            if BAnd(my_bits_high,$10000000) <> 0 then { if plat[E8] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$10000000);
                                opp_bits_low := BXOr(opp_bits_low,$10000000);
                                my_bits_high := BOr(my_bits_high,$00101010);
                                opp_bits_high := BXOr(opp_bits_high,$00101010);
                              end;
                          end
                        else
                        if BAnd(my_bits_high,$00100000) <> 0 then { if plat[E7] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$10000000);
                            opp_bits_low := BXOr(opp_bits_low,$10000000);
                            my_bits_high := BOr(my_bits_high,$00001010);
                            opp_bits_high := BXOr(opp_bits_high,$00001010);
                          end;
                      end
                    else
                    if BAnd(my_bits_high,$00001000) <> 0 then { if plat[E6] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$10000000);
                        opp_bits_low := BXOr(opp_bits_low,$10000000);
                        my_bits_high := BOr(my_bits_high,$00000010);
                        opp_bits_high := BXOr(opp_bits_high,$00000010);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00000010) <> 0 then { if plat[E5] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$10000000);
                    opp_bits_low := BXOr(opp_bits_low,$10000000);
                  end;
              end;
            if BAnd(opp_bits_low,$08000000) <> 0 then { if plat[D4] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00000004) <> 0 then { if plat[C5] = adversaire then }
                  begin
                    if BAnd(opp_bits_high,$00000200) <> 0 then { if plat[B6] = adversaire then }
                      begin
                        if BAnd(my_bits_high,$00010000) <> 0 then { if plat[A7] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$08000000);
                            opp_bits_low := BXOr(opp_bits_low,$08000000);
                            my_bits_high := BOr(my_bits_high,$00000204);
                            opp_bits_high := BXOr(opp_bits_high,$00000204);
                          end;
                      end
                    else
                    if BAnd(my_bits_high,$00000200) <> 0 then { if plat[B6] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$08000000);
                        opp_bits_low := BXOr(opp_bits_low,$08000000);
                        my_bits_high := BOr(my_bits_high,$00000004);
                        opp_bits_high := BXOr(opp_bits_high,$00000004);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00000004) <> 0 then { if plat[C5] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$08000000);
                    opp_bits_low := BXOr(opp_bits_low,$08000000);
                  end;
              end;
            if BAnd(opp_bits_low,$00080000) <> 0 then { if plat[D3] = adversaire then }
              begin
                if BAnd(opp_bits_low,$00040000) <> 0 then { if plat[C3] = adversaire then }
                  begin
                    if BAnd(opp_bits_low,$00020000) <> 0 then { if plat[B3] = adversaire then }
                      begin
                        if BAnd(my_bits_low,$00010000) <> 0 then { if plat[A3] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$000E0000);
                            opp_bits_low := BXOr(opp_bits_low,$000E0000);
                          end;
                      end
                    else
                    if BAnd(my_bits_low,$00020000) <> 0 then { if plat[B3] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$000C0000);
                        opp_bits_low := BXOr(opp_bits_low,$000C0000);
                      end;
                  end
                else
                if BAnd(my_bits_low,$00040000) <> 0 then { if plat[C3] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00080000);
                    opp_bits_low := BXOr(opp_bits_low,$00080000);
                  end;
              end;
            if (nbPrise <> 0)
              then
                begin
                  diffPions := succ(diffPions+nbprise);
                  ModifPlatBitboard := BXOr(vecteurParite,$00000002);
                  my_bits_low := BOr(my_bits_low,$00100000);  { place the disc in E3 }
                  g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
                  g_my_bits_high  := opp_bits_high;
                  g_opp_bits_low  := my_bits_low;
                  g_opp_bits_high := my_bits_high;
                end
              else
                ModifPlatBitboard := vecteurParite;
          end;
        36 :    { F3 }
          begin
            if BAnd(opp_bits_low,$00001000) <> 0 then { if plat[E2] = adversaire then }
              begin
                if BAnd(my_bits_low,$00000008) <> 0 then { if plat[D1] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00001000);
                    opp_bits_low := BXOr(opp_bits_low,$00001000);
                  end;
              end;
            if BAnd(opp_bits_low,$00002000) <> 0 then { if plat[F2] = adversaire then }
              begin
                if BAnd(my_bits_low,$00000020) <> 0 then { if plat[F1] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00002000);
                    opp_bits_low := BXOr(opp_bits_low,$00002000);
                  end;
              end;
            if BAnd(opp_bits_low,$00004000) <> 0 then { if plat[G2] = adversaire then }
              begin
                if BAnd(my_bits_low,$00000080) <> 0 then { if plat[H1] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00004000);
                    opp_bits_low := BXOr(opp_bits_low,$00004000);
                  end;
              end;
            if BAnd(opp_bits_low,$00400000) <> 0 then { if plat[G3] = adversaire then }
              begin
                if BAnd(my_bits_low,$00800000) <> 0 then { if plat[H3] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00400000);
                    opp_bits_low := BXOr(opp_bits_low,$00400000);
                  end;
              end;
            if BAnd(opp_bits_low,$40000000) <> 0 then { if plat[G4] = adversaire then }
              begin
                if BAnd(my_bits_high,$00000080) <> 0 then { if plat[H5] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$40000000);
                    opp_bits_low := BXOr(opp_bits_low,$40000000);
                  end;
              end;
            if BAnd(opp_bits_low,$20000000) <> 0 then { if plat[F4] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00000020) <> 0 then { if plat[F5] = adversaire then }
                  begin
                    if BAnd(opp_bits_high,$00002000) <> 0 then { if plat[F6] = adversaire then }
                      begin
                        if BAnd(opp_bits_high,$00200000) <> 0 then { if plat[F7] = adversaire then }
                          begin
                            if BAnd(my_bits_high,$20000000) <> 0 then { if plat[F8] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$20000000);
                                opp_bits_low := BXOr(opp_bits_low,$20000000);
                                my_bits_high := BOr(my_bits_high,$00202020);
                                opp_bits_high := BXOr(opp_bits_high,$00202020);
                              end;
                          end
                        else
                        if BAnd(my_bits_high,$00200000) <> 0 then { if plat[F7] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$20000000);
                            opp_bits_low := BXOr(opp_bits_low,$20000000);
                            my_bits_high := BOr(my_bits_high,$00002020);
                            opp_bits_high := BXOr(opp_bits_high,$00002020);
                          end;
                      end
                    else
                    if BAnd(my_bits_high,$00002000) <> 0 then { if plat[F6] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$20000000);
                        opp_bits_low := BXOr(opp_bits_low,$20000000);
                        my_bits_high := BOr(my_bits_high,$00000020);
                        opp_bits_high := BXOr(opp_bits_high,$00000020);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00000020) <> 0 then { if plat[F5] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$20000000);
                    opp_bits_low := BXOr(opp_bits_low,$20000000);
                  end;
              end;
            if BAnd(opp_bits_low,$10000000) <> 0 then { if plat[E4] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00000008) <> 0 then { if plat[D5] = adversaire then }
                  begin
                    if BAnd(opp_bits_high,$00000400) <> 0 then { if plat[C6] = adversaire then }
                      begin
                        if BAnd(opp_bits_high,$00020000) <> 0 then { if plat[B7] = adversaire then }
                          begin
                            if BAnd(my_bits_high,$01000000) <> 0 then { if plat[A8] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$10000000);
                                opp_bits_low := BXOr(opp_bits_low,$10000000);
                                my_bits_high := BOr(my_bits_high,$00020408);
                                opp_bits_high := BXOr(opp_bits_high,$00020408);
                              end;
                          end
                        else
                        if BAnd(my_bits_high,$00020000) <> 0 then { if plat[B7] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$10000000);
                            opp_bits_low := BXOr(opp_bits_low,$10000000);
                            my_bits_high := BOr(my_bits_high,$00000408);
                            opp_bits_high := BXOr(opp_bits_high,$00000408);
                          end;
                      end
                    else
                    if BAnd(my_bits_high,$00000400) <> 0 then { if plat[C6] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$10000000);
                        opp_bits_low := BXOr(opp_bits_low,$10000000);
                        my_bits_high := BOr(my_bits_high,$00000008);
                        opp_bits_high := BXOr(opp_bits_high,$00000008);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00000008) <> 0 then { if plat[D5] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$10000000);
                    opp_bits_low := BXOr(opp_bits_low,$10000000);
                  end;
              end;
            if BAnd(opp_bits_low,$00100000) <> 0 then { if plat[E3] = adversaire then }
              begin
                if BAnd(opp_bits_low,$00080000) <> 0 then { if plat[D3] = adversaire then }
                  begin
                    if BAnd(opp_bits_low,$00040000) <> 0 then { if plat[C3] = adversaire then }
                      begin
                        if BAnd(opp_bits_low,$00020000) <> 0 then { if plat[B3] = adversaire then }
                          begin
                            if BAnd(my_bits_low,$00010000) <> 0 then { if plat[A3] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$001E0000);
                                opp_bits_low := BXOr(opp_bits_low,$001E0000);
                              end;
                          end
                        else
                        if BAnd(my_bits_low,$00020000) <> 0 then { if plat[B3] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$001C0000);
                            opp_bits_low := BXOr(opp_bits_low,$001C0000);
                          end;
                      end
                    else
                    if BAnd(my_bits_low,$00040000) <> 0 then { if plat[C3] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$00180000);
                        opp_bits_low := BXOr(opp_bits_low,$00180000);
                      end;
                  end
                else
                if BAnd(my_bits_low,$00080000) <> 0 then { if plat[D3] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00100000);
                    opp_bits_low := BXOr(opp_bits_low,$00100000);
                  end;
              end;
            if (nbPrise <> 0)
              then
                begin
                  diffPions := succ(diffPions+nbprise);
                  ModifPlatBitboard := BXOr(vecteurParite,$00000002);
                  my_bits_low := BOr(my_bits_low,$00200000);  { place the disc in F3 }
                  g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
                  g_my_bits_high  := opp_bits_high;
                  g_opp_bits_low  := my_bits_low;
                  g_opp_bits_high := my_bits_high;
                end
              else
                ModifPlatBitboard := vecteurParite;
          end;
        37 :    { G3 }
          begin
            if BAnd(opp_bits_low,$40000000) <> 0 then { if plat[G4] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00000040) <> 0 then { if plat[G5] = adversaire then }
                  begin
                    if BAnd(opp_bits_high,$00004000) <> 0 then { if plat[G6] = adversaire then }
                      begin
                        if BAnd(opp_bits_high,$00400000) <> 0 then { if plat[G7] = adversaire then }
                          begin
                            if BAnd(my_bits_high,$40000000) <> 0 then { if plat[G8] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$40000000);
                                opp_bits_low := BXOr(opp_bits_low,$40000000);
                                my_bits_high := BOr(my_bits_high,$00404040);
                                opp_bits_high := BXOr(opp_bits_high,$00404040);
                              end;
                          end
                        else
                        if BAnd(my_bits_high,$00400000) <> 0 then { if plat[G7] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$40000000);
                            opp_bits_low := BXOr(opp_bits_low,$40000000);
                            my_bits_high := BOr(my_bits_high,$00004040);
                            opp_bits_high := BXOr(opp_bits_high,$00004040);
                          end;
                      end
                    else
                    if BAnd(my_bits_high,$00004000) <> 0 then { if plat[G6] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$40000000);
                        opp_bits_low := BXOr(opp_bits_low,$40000000);
                        my_bits_high := BOr(my_bits_high,$00000040);
                        opp_bits_high := BXOr(opp_bits_high,$00000040);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00000040) <> 0 then { if plat[G5] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$40000000);
                    opp_bits_low := BXOr(opp_bits_low,$40000000);
                  end;
              end;
            if BAnd(opp_bits_low,$20000000) <> 0 then { if plat[F4] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00000010) <> 0 then { if plat[E5] = adversaire then }
                  begin
                    if BAnd(opp_bits_high,$00000800) <> 0 then { if plat[D6] = adversaire then }
                      begin
                        if BAnd(opp_bits_high,$00040000) <> 0 then { if plat[C7] = adversaire then }
                          begin
                            if BAnd(my_bits_high,$02000000) <> 0 then { if plat[B8] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$20000000);
                                opp_bits_low := BXOr(opp_bits_low,$20000000);
                                my_bits_high := BOr(my_bits_high,$00040810);
                                opp_bits_high := BXOr(opp_bits_high,$00040810);
                              end;
                          end
                        else
                        if BAnd(my_bits_high,$00040000) <> 0 then { if plat[C7] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$20000000);
                            opp_bits_low := BXOr(opp_bits_low,$20000000);
                            my_bits_high := BOr(my_bits_high,$00000810);
                            opp_bits_high := BXOr(opp_bits_high,$00000810);
                          end;
                      end
                    else
                    if BAnd(my_bits_high,$00000800) <> 0 then { if plat[D6] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$20000000);
                        opp_bits_low := BXOr(opp_bits_low,$20000000);
                        my_bits_high := BOr(my_bits_high,$00000010);
                        opp_bits_high := BXOr(opp_bits_high,$00000010);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00000010) <> 0 then { if plat[E5] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$20000000);
                    opp_bits_low := BXOr(opp_bits_low,$20000000);
                  end;
              end;
            if BAnd(opp_bits_low,$00200000) <> 0 then { if plat[F3] = adversaire then }
              begin
                if BAnd(opp_bits_low,$00100000) <> 0 then { if plat[E3] = adversaire then }
                  begin
                    if BAnd(opp_bits_low,$00080000) <> 0 then { if plat[D3] = adversaire then }
                      begin
                        if BAnd(opp_bits_low,$00040000) <> 0 then { if plat[C3] = adversaire then }
                          begin
                            if BAnd(opp_bits_low,$00020000) <> 0 then { if plat[B3] = adversaire then }
                              begin
                                if BAnd(my_bits_low,$00010000) <> 0 then { if plat[A3] = couleur then }
                                  begin
                                    nbprise := nbprise + 10;
                                    my_bits_low := BOr(my_bits_low,$003E0000);
                                    opp_bits_low := BXOr(opp_bits_low,$003E0000);
                                  end;
                              end
                            else
                            if BAnd(my_bits_low,$00020000) <> 0 then { if plat[B3] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$003C0000);
                                opp_bits_low := BXOr(opp_bits_low,$003C0000);
                              end;
                          end
                        else
                        if BAnd(my_bits_low,$00040000) <> 0 then { if plat[C3] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$00380000);
                            opp_bits_low := BXOr(opp_bits_low,$00380000);
                          end;
                      end
                    else
                    if BAnd(my_bits_low,$00080000) <> 0 then { if plat[D3] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$00300000);
                        opp_bits_low := BXOr(opp_bits_low,$00300000);
                      end;
                  end
                else
                if BAnd(my_bits_low,$00100000) <> 0 then { if plat[E3] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00200000);
                    opp_bits_low := BXOr(opp_bits_low,$00200000);
                  end;
              end;
            if BAnd(opp_bits_low,$00002000) <> 0 then { if plat[F2] = adversaire then }
              begin
                if BAnd(my_bits_low,$00000010) <> 0 then { if plat[E1] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00002000);
                    opp_bits_low := BXOr(opp_bits_low,$00002000);
                  end;
              end;
            if BAnd(opp_bits_low,$00004000) <> 0 then { if plat[G2] = adversaire then }
              begin
                if BAnd(my_bits_low,$00000040) <> 0 then { if plat[G1] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00004000);
                    opp_bits_low := BXOr(opp_bits_low,$00004000);
                  end;
              end;
            if (nbPrise <> 0)
              then
                begin
                  diffPions := succ(diffPions+nbprise);
                  ModifPlatBitboard := BXOr(vecteurParite,$00000002);
                  my_bits_low := BOr(my_bits_low,$00400000);  { place the disc in G3 }
                  g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
                  g_my_bits_high  := opp_bits_high;
                  g_opp_bits_low  := my_bits_low;
                  g_opp_bits_high := my_bits_high;
                end
              else
                ModifPlatBitboard := vecteurParite;
          end;
        38 :    { H3 }
          begin
            if BAnd(opp_bits_low,$80000000) <> 0 then { if plat[H4] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00000080) <> 0 then { if plat[H5] = adversaire then }
                  begin
                    if BAnd(opp_bits_high,$00008000) <> 0 then { if plat[H6] = adversaire then }
                      begin
                        if BAnd(opp_bits_high,$00800000) <> 0 then { if plat[H7] = adversaire then }
                          begin
                            if BAnd(my_bits_high,$80000000) <> 0 then { if plat[H8] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$80000000);
                                opp_bits_low := BXOr(opp_bits_low,$80000000);
                                my_bits_high := BOr(my_bits_high,$00808080);
                                opp_bits_high := BXOr(opp_bits_high,$00808080);
                              end;
                          end
                        else
                        if BAnd(my_bits_high,$00800000) <> 0 then { if plat[H7] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$80000000);
                            opp_bits_low := BXOr(opp_bits_low,$80000000);
                            my_bits_high := BOr(my_bits_high,$00008080);
                            opp_bits_high := BXOr(opp_bits_high,$00008080);
                          end;
                      end
                    else
                    if BAnd(my_bits_high,$00008000) <> 0 then { if plat[H6] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$80000000);
                        opp_bits_low := BXOr(opp_bits_low,$80000000);
                        my_bits_high := BOr(my_bits_high,$00000080);
                        opp_bits_high := BXOr(opp_bits_high,$00000080);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00000080) <> 0 then { if plat[H5] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$80000000);
                    opp_bits_low := BXOr(opp_bits_low,$80000000);
                  end;
              end;
            if BAnd(opp_bits_low,$40000000) <> 0 then { if plat[G4] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00000020) <> 0 then { if plat[F5] = adversaire then }
                  begin
                    if BAnd(opp_bits_high,$00001000) <> 0 then { if plat[E6] = adversaire then }
                      begin
                        if BAnd(opp_bits_high,$00080000) <> 0 then { if plat[D7] = adversaire then }
                          begin
                            if BAnd(my_bits_high,$04000000) <> 0 then { if plat[C8] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$40000000);
                                opp_bits_low := BXOr(opp_bits_low,$40000000);
                                my_bits_high := BOr(my_bits_high,$00081020);
                                opp_bits_high := BXOr(opp_bits_high,$00081020);
                              end;
                          end
                        else
                        if BAnd(my_bits_high,$00080000) <> 0 then { if plat[D7] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$40000000);
                            opp_bits_low := BXOr(opp_bits_low,$40000000);
                            my_bits_high := BOr(my_bits_high,$00001020);
                            opp_bits_high := BXOr(opp_bits_high,$00001020);
                          end;
                      end
                    else
                    if BAnd(my_bits_high,$00001000) <> 0 then { if plat[E6] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$40000000);
                        opp_bits_low := BXOr(opp_bits_low,$40000000);
                        my_bits_high := BOr(my_bits_high,$00000020);
                        opp_bits_high := BXOr(opp_bits_high,$00000020);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00000020) <> 0 then { if plat[F5] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$40000000);
                    opp_bits_low := BXOr(opp_bits_low,$40000000);
                  end;
              end;
            if BAnd(opp_bits_low,$00400000) <> 0 then { if plat[G3] = adversaire then }
              begin
                if BAnd(opp_bits_low,$00200000) <> 0 then { if plat[F3] = adversaire then }
                  begin
                    if BAnd(opp_bits_low,$00100000) <> 0 then { if plat[E3] = adversaire then }
                      begin
                        if BAnd(opp_bits_low,$00080000) <> 0 then { if plat[D3] = adversaire then }
                          begin
                            if BAnd(opp_bits_low,$00040000) <> 0 then { if plat[C3] = adversaire then }
                              begin
                                if BAnd(opp_bits_low,$00020000) <> 0 then { if plat[B3] = adversaire then }
                                  begin
                                    if BAnd(my_bits_low,$00010000) <> 0 then { if plat[A3] = couleur then }
                                      begin
                                        nbprise := nbprise + 12;
                                        my_bits_low := BOr(my_bits_low,$007E0000);
                                        opp_bits_low := BXOr(opp_bits_low,$007E0000);
                                      end;
                                  end
                                else
                                if BAnd(my_bits_low,$00020000) <> 0 then { if plat[B3] = couleur then }
                                  begin
                                    nbprise := nbprise + 10;
                                    my_bits_low := BOr(my_bits_low,$007C0000);
                                    opp_bits_low := BXOr(opp_bits_low,$007C0000);
                                  end;
                              end
                            else
                            if BAnd(my_bits_low,$00040000) <> 0 then { if plat[C3] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$00780000);
                                opp_bits_low := BXOr(opp_bits_low,$00780000);
                              end;
                          end
                        else
                        if BAnd(my_bits_low,$00080000) <> 0 then { if plat[D3] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$00700000);
                            opp_bits_low := BXOr(opp_bits_low,$00700000);
                          end;
                      end
                    else
                    if BAnd(my_bits_low,$00100000) <> 0 then { if plat[E3] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$00600000);
                        opp_bits_low := BXOr(opp_bits_low,$00600000);
                      end;
                  end
                else
                if BAnd(my_bits_low,$00200000) <> 0 then { if plat[F3] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00400000);
                    opp_bits_low := BXOr(opp_bits_low,$00400000);
                  end;
              end;
            if BAnd(opp_bits_low,$00004000) <> 0 then { if plat[G2] = adversaire then }
              begin
                if BAnd(my_bits_low,$00000020) <> 0 then { if plat[F1] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00004000);
                    opp_bits_low := BXOr(opp_bits_low,$00004000);
                  end;
              end;
            if BAnd(opp_bits_low,$00008000) <> 0 then { if plat[H2] = adversaire then }
              begin
                if BAnd(my_bits_low,$00000080) <> 0 then { if plat[H1] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00008000);
                    opp_bits_low := BXOr(opp_bits_low,$00008000);
                  end;
              end;
            if (nbPrise <> 0)
              then
                begin
                  diffPions := succ(diffPions+nbprise);
                  ModifPlatBitboard := BXOr(vecteurParite,$00000002);
                  my_bits_low := BOr(my_bits_low,$00800000);  { place the disc in H3 }
                  g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
                  g_my_bits_high  := opp_bits_high;
                  g_opp_bits_low  := my_bits_low;
                  g_opp_bits_high := my_bits_high;
                end
              else
                ModifPlatBitboard := vecteurParite;
          end;
        41 :    { A4 }
          begin
            if BAnd(opp_bits_low,$00010000) <> 0 then { if plat[A3] = adversaire then }
              begin
                if BAnd(opp_bits_low,$00000100) <> 0 then { if plat[A2] = adversaire then }
                  begin
                    if BAnd(my_bits_low,$00000001) <> 0 then { if plat[A1] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$00010100);
                        opp_bits_low := BXOr(opp_bits_low,$00010100);
                      end;
                  end
                else
                if BAnd(my_bits_low,$00000100) <> 0 then { if plat[A2] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00010000);
                    opp_bits_low := BXOr(opp_bits_low,$00010000);
                  end;
              end;
            if BAnd(opp_bits_low,$00020000) <> 0 then { if plat[B3] = adversaire then }
              begin
                if BAnd(opp_bits_low,$00000400) <> 0 then { if plat[C2] = adversaire then }
                  begin
                    if BAnd(my_bits_low,$00000008) <> 0 then { if plat[D1] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$00020400);
                        opp_bits_low := BXOr(opp_bits_low,$00020400);
                      end;
                  end
                else
                if BAnd(my_bits_low,$00000400) <> 0 then { if plat[C2] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00020000);
                    opp_bits_low := BXOr(opp_bits_low,$00020000);
                  end;
              end;
            if BAnd(opp_bits_low,$02000000) <> 0 then { if plat[B4] = adversaire then }
              begin
                if BAnd(opp_bits_low,$04000000) <> 0 then { if plat[C4] = adversaire then }
                  begin
                    if BAnd(opp_bits_low,$08000000) <> 0 then { if plat[D4] = adversaire then }
                      begin
                        if BAnd(opp_bits_low,$10000000) <> 0 then { if plat[E4] = adversaire then }
                          begin
                            if BAnd(opp_bits_low,$20000000) <> 0 then { if plat[F4] = adversaire then }
                              begin
                                if BAnd(opp_bits_low,$40000000) <> 0 then { if plat[G4] = adversaire then }
                                  begin
                                    if BAnd(my_bits_low,$80000000) <> 0 then { if plat[H4] = couleur then }
                                      begin
                                        nbprise := nbprise + 12;
                                        my_bits_low := BOr(my_bits_low,$7E000000);
                                        opp_bits_low := BXOr(opp_bits_low,$7E000000);
                                      end;
                                  end
                                else
                                if BAnd(my_bits_low,$40000000) <> 0 then { if plat[G4] = couleur then }
                                  begin
                                    nbprise := nbprise + 10;
                                    my_bits_low := BOr(my_bits_low,$3E000000);
                                    opp_bits_low := BXOr(opp_bits_low,$3E000000);
                                  end;
                              end
                            else
                            if BAnd(my_bits_low,$20000000) <> 0 then { if plat[F4] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$1E000000);
                                opp_bits_low := BXOr(opp_bits_low,$1E000000);
                              end;
                          end
                        else
                        if BAnd(my_bits_low,$10000000) <> 0 then { if plat[E4] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$0E000000);
                            opp_bits_low := BXOr(opp_bits_low,$0E000000);
                          end;
                      end
                    else
                    if BAnd(my_bits_low,$08000000) <> 0 then { if plat[D4] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$06000000);
                        opp_bits_low := BXOr(opp_bits_low,$06000000);
                      end;
                  end
                else
                if BAnd(my_bits_low,$04000000) <> 0 then { if plat[C4] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$02000000);
                    opp_bits_low := BXOr(opp_bits_low,$02000000);
                  end;
              end;
            if BAnd(opp_bits_high,$00000002) <> 0 then { if plat[B5] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00000400) <> 0 then { if plat[C6] = adversaire then }
                  begin
                    if BAnd(opp_bits_high,$00080000) <> 0 then { if plat[D7] = adversaire then }
                      begin
                        if BAnd(my_bits_high,$10000000) <> 0 then { if plat[E8] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_high := BOr(my_bits_high,$00080402);
                            opp_bits_high := BXOr(opp_bits_high,$00080402);
                          end;
                      end
                    else
                    if BAnd(my_bits_high,$00080000) <> 0 then { if plat[D7] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$00000402);
                        opp_bits_high := BXOr(opp_bits_high,$00000402);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00000400) <> 0 then { if plat[C6] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00000002);
                    opp_bits_high := BXOr(opp_bits_high,$00000002);
                  end;
              end;
            if BAnd(opp_bits_high,$00000001) <> 0 then { if plat[A5] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00000100) <> 0 then { if plat[A6] = adversaire then }
                  begin
                    if BAnd(opp_bits_high,$00010000) <> 0 then { if plat[A7] = adversaire then }
                      begin
                        if BAnd(my_bits_high,$01000000) <> 0 then { if plat[A8] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_high := BOr(my_bits_high,$00010101);
                            opp_bits_high := BXOr(opp_bits_high,$00010101);
                          end;
                      end
                    else
                    if BAnd(my_bits_high,$00010000) <> 0 then { if plat[A7] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$00000101);
                        opp_bits_high := BXOr(opp_bits_high,$00000101);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00000100) <> 0 then { if plat[A6] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00000001);
                    opp_bits_high := BXOr(opp_bits_high,$00000001);
                  end;
              end;
            if (nbPrise <> 0)
              then
                begin
                  diffPions := succ(diffPions+nbprise);
                  ModifPlatBitboard := BXOr(vecteurParite,$00000001);
                  my_bits_low := BOr(my_bits_low,$01000000);  { place the disc in A4 }
                  g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
                  g_my_bits_high  := opp_bits_high;
                  g_opp_bits_low  := my_bits_low;
                  g_opp_bits_high := my_bits_high;
                end
              else
                ModifPlatBitboard := vecteurParite;
          end;
        42 :    { B4 }
          begin
            if BAnd(opp_bits_low,$00020000) <> 0 then { if plat[B3] = adversaire then }
              begin
                if BAnd(opp_bits_low,$00000200) <> 0 then { if plat[B2] = adversaire then }
                  begin
                    if BAnd(my_bits_low,$00000002) <> 0 then { if plat[B1] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$00020200);
                        opp_bits_low := BXOr(opp_bits_low,$00020200);
                      end;
                  end
                else
                if BAnd(my_bits_low,$00000200) <> 0 then { if plat[B2] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00020000);
                    opp_bits_low := BXOr(opp_bits_low,$00020000);
                  end;
              end;
            if BAnd(opp_bits_low,$00040000) <> 0 then { if plat[C3] = adversaire then }
              begin
                if BAnd(opp_bits_low,$00000800) <> 0 then { if plat[D2] = adversaire then }
                  begin
                    if BAnd(my_bits_low,$00000010) <> 0 then { if plat[E1] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$00040800);
                        opp_bits_low := BXOr(opp_bits_low,$00040800);
                      end;
                  end
                else
                if BAnd(my_bits_low,$00000800) <> 0 then { if plat[D2] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00040000);
                    opp_bits_low := BXOr(opp_bits_low,$00040000);
                  end;
              end;
            if BAnd(opp_bits_low,$04000000) <> 0 then { if plat[C4] = adversaire then }
              begin
                if BAnd(opp_bits_low,$08000000) <> 0 then { if plat[D4] = adversaire then }
                  begin
                    if BAnd(opp_bits_low,$10000000) <> 0 then { if plat[E4] = adversaire then }
                      begin
                        if BAnd(opp_bits_low,$20000000) <> 0 then { if plat[F4] = adversaire then }
                          begin
                            if BAnd(opp_bits_low,$40000000) <> 0 then { if plat[G4] = adversaire then }
                              begin
                                if BAnd(my_bits_low,$80000000) <> 0 then { if plat[H4] = couleur then }
                                  begin
                                    nbprise := nbprise + 10;
                                    my_bits_low := BOr(my_bits_low,$7C000000);
                                    opp_bits_low := BXOr(opp_bits_low,$7C000000);
                                  end;
                              end
                            else
                            if BAnd(my_bits_low,$40000000) <> 0 then { if plat[G4] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$3C000000);
                                opp_bits_low := BXOr(opp_bits_low,$3C000000);
                              end;
                          end
                        else
                        if BAnd(my_bits_low,$20000000) <> 0 then { if plat[F4] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$1C000000);
                            opp_bits_low := BXOr(opp_bits_low,$1C000000);
                          end;
                      end
                    else
                    if BAnd(my_bits_low,$10000000) <> 0 then { if plat[E4] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$0C000000);
                        opp_bits_low := BXOr(opp_bits_low,$0C000000);
                      end;
                  end
                else
                if BAnd(my_bits_low,$08000000) <> 0 then { if plat[D4] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$04000000);
                    opp_bits_low := BXOr(opp_bits_low,$04000000);
                  end;
              end;
            if BAnd(opp_bits_high,$00000004) <> 0 then { if plat[C5] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00000800) <> 0 then { if plat[D6] = adversaire then }
                  begin
                    if BAnd(opp_bits_high,$00100000) <> 0 then { if plat[E7] = adversaire then }
                      begin
                        if BAnd(my_bits_high,$20000000) <> 0 then { if plat[F8] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_high := BOr(my_bits_high,$00100804);
                            opp_bits_high := BXOr(opp_bits_high,$00100804);
                          end;
                      end
                    else
                    if BAnd(my_bits_high,$00100000) <> 0 then { if plat[E7] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$00000804);
                        opp_bits_high := BXOr(opp_bits_high,$00000804);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00000800) <> 0 then { if plat[D6] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00000004);
                    opp_bits_high := BXOr(opp_bits_high,$00000004);
                  end;
              end;
            if BAnd(opp_bits_high,$00000002) <> 0 then { if plat[B5] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00000200) <> 0 then { if plat[B6] = adversaire then }
                  begin
                    if BAnd(opp_bits_high,$00020000) <> 0 then { if plat[B7] = adversaire then }
                      begin
                        if BAnd(my_bits_high,$02000000) <> 0 then { if plat[B8] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_high := BOr(my_bits_high,$00020202);
                            opp_bits_high := BXOr(opp_bits_high,$00020202);
                          end;
                      end
                    else
                    if BAnd(my_bits_high,$00020000) <> 0 then { if plat[B7] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$00000202);
                        opp_bits_high := BXOr(opp_bits_high,$00000202);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00000200) <> 0 then { if plat[B6] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00000002);
                    opp_bits_high := BXOr(opp_bits_high,$00000002);
                  end;
              end;
            if (nbPrise <> 0)
              then
                begin
                  diffPions := succ(diffPions+nbprise);
                  ModifPlatBitboard := BXOr(vecteurParite,$00000001);
                  my_bits_low := BOr(my_bits_low,$02000000);  { place the disc in B4 }
                  g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
                  g_my_bits_high  := opp_bits_high;
                  g_opp_bits_low  := my_bits_low;
                  g_opp_bits_high := my_bits_high;
                end
              else
                ModifPlatBitboard := vecteurParite;
          end;
        43 :    { C4 }
          begin
            if BAnd(opp_bits_low,$00020000) <> 0 then { if plat[B3] = adversaire then }
              begin
                if BAnd(my_bits_low,$00000100) <> 0 then { if plat[A2] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00020000);
                    opp_bits_low := BXOr(opp_bits_low,$00020000);
                  end;
              end;
            if BAnd(opp_bits_low,$00040000) <> 0 then { if plat[C3] = adversaire then }
              begin
                if BAnd(opp_bits_low,$00000400) <> 0 then { if plat[C2] = adversaire then }
                  begin
                    if BAnd(my_bits_low,$00000004) <> 0 then { if plat[C1] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$00040400);
                        opp_bits_low := BXOr(opp_bits_low,$00040400);
                      end;
                  end
                else
                if BAnd(my_bits_low,$00000400) <> 0 then { if plat[C2] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00040000);
                    opp_bits_low := BXOr(opp_bits_low,$00040000);
                  end;
              end;
            if BAnd(opp_bits_low,$00080000) <> 0 then { if plat[D3] = adversaire then }
              begin
                if BAnd(opp_bits_low,$00001000) <> 0 then { if plat[E2] = adversaire then }
                  begin
                    if BAnd(my_bits_low,$00000020) <> 0 then { if plat[F1] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$00081000);
                        opp_bits_low := BXOr(opp_bits_low,$00081000);
                      end;
                  end
                else
                if BAnd(my_bits_low,$00001000) <> 0 then { if plat[E2] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00080000);
                    opp_bits_low := BXOr(opp_bits_low,$00080000);
                  end;
              end;
            if BAnd(opp_bits_low,$08000000) <> 0 then { if plat[D4] = adversaire then }
              begin
                if BAnd(opp_bits_low,$10000000) <> 0 then { if plat[E4] = adversaire then }
                  begin
                    if BAnd(opp_bits_low,$20000000) <> 0 then { if plat[F4] = adversaire then }
                      begin
                        if BAnd(opp_bits_low,$40000000) <> 0 then { if plat[G4] = adversaire then }
                          begin
                            if BAnd(my_bits_low,$80000000) <> 0 then { if plat[H4] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$78000000);
                                opp_bits_low := BXOr(opp_bits_low,$78000000);
                              end;
                          end
                        else
                        if BAnd(my_bits_low,$40000000) <> 0 then { if plat[G4] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$38000000);
                            opp_bits_low := BXOr(opp_bits_low,$38000000);
                          end;
                      end
                    else
                    if BAnd(my_bits_low,$20000000) <> 0 then { if plat[F4] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$18000000);
                        opp_bits_low := BXOr(opp_bits_low,$18000000);
                      end;
                  end
                else
                if BAnd(my_bits_low,$10000000) <> 0 then { if plat[E4] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$08000000);
                    opp_bits_low := BXOr(opp_bits_low,$08000000);
                  end;
              end;
            if BAnd(opp_bits_high,$00000008) <> 0 then { if plat[D5] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00001000) <> 0 then { if plat[E6] = adversaire then }
                  begin
                    if BAnd(opp_bits_high,$00200000) <> 0 then { if plat[F7] = adversaire then }
                      begin
                        if BAnd(my_bits_high,$40000000) <> 0 then { if plat[G8] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_high := BOr(my_bits_high,$00201008);
                            opp_bits_high := BXOr(opp_bits_high,$00201008);
                          end;
                      end
                    else
                    if BAnd(my_bits_high,$00200000) <> 0 then { if plat[F7] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$00001008);
                        opp_bits_high := BXOr(opp_bits_high,$00001008);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00001000) <> 0 then { if plat[E6] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00000008);
                    opp_bits_high := BXOr(opp_bits_high,$00000008);
                  end;
              end;
            if BAnd(opp_bits_high,$00000004) <> 0 then { if plat[C5] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00000400) <> 0 then { if plat[C6] = adversaire then }
                  begin
                    if BAnd(opp_bits_high,$00040000) <> 0 then { if plat[C7] = adversaire then }
                      begin
                        if BAnd(my_bits_high,$04000000) <> 0 then { if plat[C8] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_high := BOr(my_bits_high,$00040404);
                            opp_bits_high := BXOr(opp_bits_high,$00040404);
                          end;
                      end
                    else
                    if BAnd(my_bits_high,$00040000) <> 0 then { if plat[C7] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$00000404);
                        opp_bits_high := BXOr(opp_bits_high,$00000404);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00000400) <> 0 then { if plat[C6] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00000004);
                    opp_bits_high := BXOr(opp_bits_high,$00000004);
                  end;
              end;
            if BAnd(opp_bits_high,$00000002) <> 0 then { if plat[B5] = adversaire then }
              begin
                if BAnd(my_bits_high,$00000100) <> 0 then { if plat[A6] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00000002);
                    opp_bits_high := BXOr(opp_bits_high,$00000002);
                  end;
              end;
            if BAnd(opp_bits_low,$02000000) <> 0 then { if plat[B4] = adversaire then }
              begin
                if BAnd(my_bits_low,$01000000) <> 0 then { if plat[A4] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$02000000);
                    opp_bits_low := BXOr(opp_bits_low,$02000000);
                  end;
              end;
            if (nbPrise <> 0)
              then
                begin
                  diffPions := succ(diffPions+nbprise);
                  ModifPlatBitboard := BXOr(vecteurParite,$00000001);
                  my_bits_low := BOr(my_bits_low,$04000000);  { place the disc in C4 }
                  g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
                  g_my_bits_high  := opp_bits_high;
                  g_opp_bits_low  := my_bits_low;
                  g_opp_bits_high := my_bits_high;
                end
              else
                ModifPlatBitboard := vecteurParite;
          end;
        44 :    { D4 }
          begin
            if BAnd(opp_bits_low,$00040000) <> 0 then { if plat[C3] = adversaire then }
              begin
                if BAnd(opp_bits_low,$00000200) <> 0 then { if plat[B2] = adversaire then }
                  begin
                    if BAnd(my_bits_low,$00000001) <> 0 then { if plat[A1] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$00040200);
                        opp_bits_low := BXOr(opp_bits_low,$00040200);
                      end;
                  end
                else
                if BAnd(my_bits_low,$00000200) <> 0 then { if plat[B2] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00040000);
                    opp_bits_low := BXOr(opp_bits_low,$00040000);
                  end;
              end;
            if BAnd(opp_bits_low,$00080000) <> 0 then { if plat[D3] = adversaire then }
              begin
                if BAnd(opp_bits_low,$00000800) <> 0 then { if plat[D2] = adversaire then }
                  begin
                    if BAnd(my_bits_low,$00000008) <> 0 then { if plat[D1] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$00080800);
                        opp_bits_low := BXOr(opp_bits_low,$00080800);
                      end;
                  end
                else
                if BAnd(my_bits_low,$00000800) <> 0 then { if plat[D2] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00080000);
                    opp_bits_low := BXOr(opp_bits_low,$00080000);
                  end;
              end;
            if BAnd(opp_bits_low,$00100000) <> 0 then { if plat[E3] = adversaire then }
              begin
                if BAnd(opp_bits_low,$00002000) <> 0 then { if plat[F2] = adversaire then }
                  begin
                    if BAnd(my_bits_low,$00000040) <> 0 then { if plat[G1] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$00102000);
                        opp_bits_low := BXOr(opp_bits_low,$00102000);
                      end;
                  end
                else
                if BAnd(my_bits_low,$00002000) <> 0 then { if plat[F2] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00100000);
                    opp_bits_low := BXOr(opp_bits_low,$00100000);
                  end;
              end;
            if BAnd(opp_bits_low,$10000000) <> 0 then { if plat[E4] = adversaire then }
              begin
                if BAnd(opp_bits_low,$20000000) <> 0 then { if plat[F4] = adversaire then }
                  begin
                    if BAnd(opp_bits_low,$40000000) <> 0 then { if plat[G4] = adversaire then }
                      begin
                        if BAnd(my_bits_low,$80000000) <> 0 then { if plat[H4] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$70000000);
                            opp_bits_low := BXOr(opp_bits_low,$70000000);
                          end;
                      end
                    else
                    if BAnd(my_bits_low,$40000000) <> 0 then { if plat[G4] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$30000000);
                        opp_bits_low := BXOr(opp_bits_low,$30000000);
                      end;
                  end
                else
                if BAnd(my_bits_low,$20000000) <> 0 then { if plat[F4] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$10000000);
                    opp_bits_low := BXOr(opp_bits_low,$10000000);
                  end;
              end;
            if BAnd(opp_bits_high,$00000010) <> 0 then { if plat[E5] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00002000) <> 0 then { if plat[F6] = adversaire then }
                  begin
                    if BAnd(opp_bits_high,$00400000) <> 0 then { if plat[G7] = adversaire then }
                      begin
                        if BAnd(my_bits_high,$80000000) <> 0 then { if plat[H8] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_high := BOr(my_bits_high,$00402010);
                            opp_bits_high := BXOr(opp_bits_high,$00402010);
                          end;
                      end
                    else
                    if BAnd(my_bits_high,$00400000) <> 0 then { if plat[G7] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$00002010);
                        opp_bits_high := BXOr(opp_bits_high,$00002010);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00002000) <> 0 then { if plat[F6] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00000010);
                    opp_bits_high := BXOr(opp_bits_high,$00000010);
                  end;
              end;
            if BAnd(opp_bits_high,$00000008) <> 0 then { if plat[D5] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00000800) <> 0 then { if plat[D6] = adversaire then }
                  begin
                    if BAnd(opp_bits_high,$00080000) <> 0 then { if plat[D7] = adversaire then }
                      begin
                        if BAnd(my_bits_high,$08000000) <> 0 then { if plat[D8] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_high := BOr(my_bits_high,$00080808);
                            opp_bits_high := BXOr(opp_bits_high,$00080808);
                          end;
                      end
                    else
                    if BAnd(my_bits_high,$00080000) <> 0 then { if plat[D7] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$00000808);
                        opp_bits_high := BXOr(opp_bits_high,$00000808);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00000800) <> 0 then { if plat[D6] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00000008);
                    opp_bits_high := BXOr(opp_bits_high,$00000008);
                  end;
              end;
            if BAnd(opp_bits_high,$00000004) <> 0 then { if plat[C5] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00000200) <> 0 then { if plat[B6] = adversaire then }
                  begin
                    if BAnd(my_bits_high,$00010000) <> 0 then { if plat[A7] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$00000204);
                        opp_bits_high := BXOr(opp_bits_high,$00000204);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00000200) <> 0 then { if plat[B6] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00000004);
                    opp_bits_high := BXOr(opp_bits_high,$00000004);
                  end;
              end;
            if BAnd(opp_bits_low,$04000000) <> 0 then { if plat[C4] = adversaire then }
              begin
                if BAnd(opp_bits_low,$02000000) <> 0 then { if plat[B4] = adversaire then }
                  begin
                    if BAnd(my_bits_low,$01000000) <> 0 then { if plat[A4] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$06000000);
                        opp_bits_low := BXOr(opp_bits_low,$06000000);
                      end;
                  end
                else
                if BAnd(my_bits_low,$02000000) <> 0 then { if plat[B4] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$04000000);
                    opp_bits_low := BXOr(opp_bits_low,$04000000);
                  end;
              end;
            if (nbPrise <> 0)
              then
                begin
                  diffPions := succ(diffPions+nbprise);
                  ModifPlatBitboard := BXOr(vecteurParite,$00000001);
                  my_bits_low := BOr(my_bits_low,$08000000);  { place the disc in D4 }
                  g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
                  g_my_bits_high  := opp_bits_high;
                  g_opp_bits_low  := my_bits_low;
                  g_opp_bits_high := my_bits_high;
                end
              else
                ModifPlatBitboard := vecteurParite;
          end;
        45 :    { E4 }
          begin
            if BAnd(opp_bits_low,$00080000) <> 0 then { if plat[D3] = adversaire then }
              begin
                if BAnd(opp_bits_low,$00000400) <> 0 then { if plat[C2] = adversaire then }
                  begin
                    if BAnd(my_bits_low,$00000002) <> 0 then { if plat[B1] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$00080400);
                        opp_bits_low := BXOr(opp_bits_low,$00080400);
                      end;
                  end
                else
                if BAnd(my_bits_low,$00000400) <> 0 then { if plat[C2] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00080000);
                    opp_bits_low := BXOr(opp_bits_low,$00080000);
                  end;
              end;
            if BAnd(opp_bits_low,$00100000) <> 0 then { if plat[E3] = adversaire then }
              begin
                if BAnd(opp_bits_low,$00001000) <> 0 then { if plat[E2] = adversaire then }
                  begin
                    if BAnd(my_bits_low,$00000010) <> 0 then { if plat[E1] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$00101000);
                        opp_bits_low := BXOr(opp_bits_low,$00101000);
                      end;
                  end
                else
                if BAnd(my_bits_low,$00001000) <> 0 then { if plat[E2] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00100000);
                    opp_bits_low := BXOr(opp_bits_low,$00100000);
                  end;
              end;
            if BAnd(opp_bits_low,$00200000) <> 0 then { if plat[F3] = adversaire then }
              begin
                if BAnd(opp_bits_low,$00004000) <> 0 then { if plat[G2] = adversaire then }
                  begin
                    if BAnd(my_bits_low,$00000080) <> 0 then { if plat[H1] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$00204000);
                        opp_bits_low := BXOr(opp_bits_low,$00204000);
                      end;
                  end
                else
                if BAnd(my_bits_low,$00004000) <> 0 then { if plat[G2] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00200000);
                    opp_bits_low := BXOr(opp_bits_low,$00200000);
                  end;
              end;
            if BAnd(opp_bits_low,$20000000) <> 0 then { if plat[F4] = adversaire then }
              begin
                if BAnd(opp_bits_low,$40000000) <> 0 then { if plat[G4] = adversaire then }
                  begin
                    if BAnd(my_bits_low,$80000000) <> 0 then { if plat[H4] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$60000000);
                        opp_bits_low := BXOr(opp_bits_low,$60000000);
                      end;
                  end
                else
                if BAnd(my_bits_low,$40000000) <> 0 then { if plat[G4] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$20000000);
                    opp_bits_low := BXOr(opp_bits_low,$20000000);
                  end;
              end;
            if BAnd(opp_bits_high,$00000020) <> 0 then { if plat[F5] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00004000) <> 0 then { if plat[G6] = adversaire then }
                  begin
                    if BAnd(my_bits_high,$00800000) <> 0 then { if plat[H7] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$00004020);
                        opp_bits_high := BXOr(opp_bits_high,$00004020);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00004000) <> 0 then { if plat[G6] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00000020);
                    opp_bits_high := BXOr(opp_bits_high,$00000020);
                  end;
              end;
            if BAnd(opp_bits_high,$00000010) <> 0 then { if plat[E5] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00001000) <> 0 then { if plat[E6] = adversaire then }
                  begin
                    if BAnd(opp_bits_high,$00100000) <> 0 then { if plat[E7] = adversaire then }
                      begin
                        if BAnd(my_bits_high,$10000000) <> 0 then { if plat[E8] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_high := BOr(my_bits_high,$00101010);
                            opp_bits_high := BXOr(opp_bits_high,$00101010);
                          end;
                      end
                    else
                    if BAnd(my_bits_high,$00100000) <> 0 then { if plat[E7] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$00001010);
                        opp_bits_high := BXOr(opp_bits_high,$00001010);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00001000) <> 0 then { if plat[E6] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00000010);
                    opp_bits_high := BXOr(opp_bits_high,$00000010);
                  end;
              end;
            if BAnd(opp_bits_high,$00000008) <> 0 then { if plat[D5] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00000400) <> 0 then { if plat[C6] = adversaire then }
                  begin
                    if BAnd(opp_bits_high,$00020000) <> 0 then { if plat[B7] = adversaire then }
                      begin
                        if BAnd(my_bits_high,$01000000) <> 0 then { if plat[A8] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_high := BOr(my_bits_high,$00020408);
                            opp_bits_high := BXOr(opp_bits_high,$00020408);
                          end;
                      end
                    else
                    if BAnd(my_bits_high,$00020000) <> 0 then { if plat[B7] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$00000408);
                        opp_bits_high := BXOr(opp_bits_high,$00000408);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00000400) <> 0 then { if plat[C6] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00000008);
                    opp_bits_high := BXOr(opp_bits_high,$00000008);
                  end;
              end;
            if BAnd(opp_bits_low,$08000000) <> 0 then { if plat[D4] = adversaire then }
              begin
                if BAnd(opp_bits_low,$04000000) <> 0 then { if plat[C4] = adversaire then }
                  begin
                    if BAnd(opp_bits_low,$02000000) <> 0 then { if plat[B4] = adversaire then }
                      begin
                        if BAnd(my_bits_low,$01000000) <> 0 then { if plat[A4] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$0E000000);
                            opp_bits_low := BXOr(opp_bits_low,$0E000000);
                          end;
                      end
                    else
                    if BAnd(my_bits_low,$02000000) <> 0 then { if plat[B4] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$0C000000);
                        opp_bits_low := BXOr(opp_bits_low,$0C000000);
                      end;
                  end
                else
                if BAnd(my_bits_low,$04000000) <> 0 then { if plat[C4] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$08000000);
                    opp_bits_low := BXOr(opp_bits_low,$08000000);
                  end;
              end;
            if (nbPrise <> 0)
              then
                begin
                  diffPions := succ(diffPions+nbprise);
                  ModifPlatBitboard := BXOr(vecteurParite,$00000002);
                  my_bits_low := BOr(my_bits_low,$10000000);  { place the disc in E4 }
                  g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
                  g_my_bits_high  := opp_bits_high;
                  g_opp_bits_low  := my_bits_low;
                  g_opp_bits_high := my_bits_high;
                end
              else
                ModifPlatBitboard := vecteurParite;
          end;
        46 :    { F4 }
          begin
            if BAnd(opp_bits_low,$00100000) <> 0 then { if plat[E3] = adversaire then }
              begin
                if BAnd(opp_bits_low,$00000800) <> 0 then { if plat[D2] = adversaire then }
                  begin
                    if BAnd(my_bits_low,$00000004) <> 0 then { if plat[C1] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$00100800);
                        opp_bits_low := BXOr(opp_bits_low,$00100800);
                      end;
                  end
                else
                if BAnd(my_bits_low,$00000800) <> 0 then { if plat[D2] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00100000);
                    opp_bits_low := BXOr(opp_bits_low,$00100000);
                  end;
              end;
            if BAnd(opp_bits_low,$00200000) <> 0 then { if plat[F3] = adversaire then }
              begin
                if BAnd(opp_bits_low,$00002000) <> 0 then { if plat[F2] = adversaire then }
                  begin
                    if BAnd(my_bits_low,$00000020) <> 0 then { if plat[F1] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$00202000);
                        opp_bits_low := BXOr(opp_bits_low,$00202000);
                      end;
                  end
                else
                if BAnd(my_bits_low,$00002000) <> 0 then { if plat[F2] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00200000);
                    opp_bits_low := BXOr(opp_bits_low,$00200000);
                  end;
              end;
            if BAnd(opp_bits_low,$00400000) <> 0 then { if plat[G3] = adversaire then }
              begin
                if BAnd(my_bits_low,$00008000) <> 0 then { if plat[H2] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00400000);
                    opp_bits_low := BXOr(opp_bits_low,$00400000);
                  end;
              end;
            if BAnd(opp_bits_low,$40000000) <> 0 then { if plat[G4] = adversaire then }
              begin
                if BAnd(my_bits_low,$80000000) <> 0 then { if plat[H4] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$40000000);
                    opp_bits_low := BXOr(opp_bits_low,$40000000);
                  end;
              end;
            if BAnd(opp_bits_high,$00000040) <> 0 then { if plat[G5] = adversaire then }
              begin
                if BAnd(my_bits_high,$00008000) <> 0 then { if plat[H6] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00000040);
                    opp_bits_high := BXOr(opp_bits_high,$00000040);
                  end;
              end;
            if BAnd(opp_bits_high,$00000020) <> 0 then { if plat[F5] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00002000) <> 0 then { if plat[F6] = adversaire then }
                  begin
                    if BAnd(opp_bits_high,$00200000) <> 0 then { if plat[F7] = adversaire then }
                      begin
                        if BAnd(my_bits_high,$20000000) <> 0 then { if plat[F8] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_high := BOr(my_bits_high,$00202020);
                            opp_bits_high := BXOr(opp_bits_high,$00202020);
                          end;
                      end
                    else
                    if BAnd(my_bits_high,$00200000) <> 0 then { if plat[F7] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$00002020);
                        opp_bits_high := BXOr(opp_bits_high,$00002020);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00002000) <> 0 then { if plat[F6] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00000020);
                    opp_bits_high := BXOr(opp_bits_high,$00000020);
                  end;
              end;
            if BAnd(opp_bits_high,$00000010) <> 0 then { if plat[E5] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00000800) <> 0 then { if plat[D6] = adversaire then }
                  begin
                    if BAnd(opp_bits_high,$00040000) <> 0 then { if plat[C7] = adversaire then }
                      begin
                        if BAnd(my_bits_high,$02000000) <> 0 then { if plat[B8] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_high := BOr(my_bits_high,$00040810);
                            opp_bits_high := BXOr(opp_bits_high,$00040810);
                          end;
                      end
                    else
                    if BAnd(my_bits_high,$00040000) <> 0 then { if plat[C7] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$00000810);
                        opp_bits_high := BXOr(opp_bits_high,$00000810);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00000800) <> 0 then { if plat[D6] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00000010);
                    opp_bits_high := BXOr(opp_bits_high,$00000010);
                  end;
              end;
            if BAnd(opp_bits_low,$10000000) <> 0 then { if plat[E4] = adversaire then }
              begin
                if BAnd(opp_bits_low,$08000000) <> 0 then { if plat[D4] = adversaire then }
                  begin
                    if BAnd(opp_bits_low,$04000000) <> 0 then { if plat[C4] = adversaire then }
                      begin
                        if BAnd(opp_bits_low,$02000000) <> 0 then { if plat[B4] = adversaire then }
                          begin
                            if BAnd(my_bits_low,$01000000) <> 0 then { if plat[A4] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$1E000000);
                                opp_bits_low := BXOr(opp_bits_low,$1E000000);
                              end;
                          end
                        else
                        if BAnd(my_bits_low,$02000000) <> 0 then { if plat[B4] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$1C000000);
                            opp_bits_low := BXOr(opp_bits_low,$1C000000);
                          end;
                      end
                    else
                    if BAnd(my_bits_low,$04000000) <> 0 then { if plat[C4] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$18000000);
                        opp_bits_low := BXOr(opp_bits_low,$18000000);
                      end;
                  end
                else
                if BAnd(my_bits_low,$08000000) <> 0 then { if plat[D4] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$10000000);
                    opp_bits_low := BXOr(opp_bits_low,$10000000);
                  end;
              end;
            if (nbPrise <> 0)
              then
                begin
                  diffPions := succ(diffPions+nbprise);
                  ModifPlatBitboard := BXOr(vecteurParite,$00000002);
                  my_bits_low := BOr(my_bits_low,$20000000);  { place the disc in F4 }
                  g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
                  g_my_bits_high  := opp_bits_high;
                  g_opp_bits_low  := my_bits_low;
                  g_opp_bits_high := my_bits_high;
                end
              else
                ModifPlatBitboard := vecteurParite;
          end;
        47 :    { G4 }
          begin
            if BAnd(opp_bits_high,$00000040) <> 0 then { if plat[G5] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00004000) <> 0 then { if plat[G6] = adversaire then }
                  begin
                    if BAnd(opp_bits_high,$00400000) <> 0 then { if plat[G7] = adversaire then }
                      begin
                        if BAnd(my_bits_high,$40000000) <> 0 then { if plat[G8] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_high := BOr(my_bits_high,$00404040);
                            opp_bits_high := BXOr(opp_bits_high,$00404040);
                          end;
                      end
                    else
                    if BAnd(my_bits_high,$00400000) <> 0 then { if plat[G7] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$00004040);
                        opp_bits_high := BXOr(opp_bits_high,$00004040);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00004000) <> 0 then { if plat[G6] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00000040);
                    opp_bits_high := BXOr(opp_bits_high,$00000040);
                  end;
              end;
            if BAnd(opp_bits_high,$00000020) <> 0 then { if plat[F5] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00001000) <> 0 then { if plat[E6] = adversaire then }
                  begin
                    if BAnd(opp_bits_high,$00080000) <> 0 then { if plat[D7] = adversaire then }
                      begin
                        if BAnd(my_bits_high,$04000000) <> 0 then { if plat[C8] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_high := BOr(my_bits_high,$00081020);
                            opp_bits_high := BXOr(opp_bits_high,$00081020);
                          end;
                      end
                    else
                    if BAnd(my_bits_high,$00080000) <> 0 then { if plat[D7] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$00001020);
                        opp_bits_high := BXOr(opp_bits_high,$00001020);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00001000) <> 0 then { if plat[E6] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00000020);
                    opp_bits_high := BXOr(opp_bits_high,$00000020);
                  end;
              end;
            if BAnd(opp_bits_low,$20000000) <> 0 then { if plat[F4] = adversaire then }
              begin
                if BAnd(opp_bits_low,$10000000) <> 0 then { if plat[E4] = adversaire then }
                  begin
                    if BAnd(opp_bits_low,$08000000) <> 0 then { if plat[D4] = adversaire then }
                      begin
                        if BAnd(opp_bits_low,$04000000) <> 0 then { if plat[C4] = adversaire then }
                          begin
                            if BAnd(opp_bits_low,$02000000) <> 0 then { if plat[B4] = adversaire then }
                              begin
                                if BAnd(my_bits_low,$01000000) <> 0 then { if plat[A4] = couleur then }
                                  begin
                                    nbprise := nbprise + 10;
                                    my_bits_low := BOr(my_bits_low,$3E000000);
                                    opp_bits_low := BXOr(opp_bits_low,$3E000000);
                                  end;
                              end
                            else
                            if BAnd(my_bits_low,$02000000) <> 0 then { if plat[B4] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$3C000000);
                                opp_bits_low := BXOr(opp_bits_low,$3C000000);
                              end;
                          end
                        else
                        if BAnd(my_bits_low,$04000000) <> 0 then { if plat[C4] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$38000000);
                            opp_bits_low := BXOr(opp_bits_low,$38000000);
                          end;
                      end
                    else
                    if BAnd(my_bits_low,$08000000) <> 0 then { if plat[D4] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$30000000);
                        opp_bits_low := BXOr(opp_bits_low,$30000000);
                      end;
                  end
                else
                if BAnd(my_bits_low,$10000000) <> 0 then { if plat[E4] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$20000000);
                    opp_bits_low := BXOr(opp_bits_low,$20000000);
                  end;
              end;
            if BAnd(opp_bits_low,$00200000) <> 0 then { if plat[F3] = adversaire then }
              begin
                if BAnd(opp_bits_low,$00001000) <> 0 then { if plat[E2] = adversaire then }
                  begin
                    if BAnd(my_bits_low,$00000008) <> 0 then { if plat[D1] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$00201000);
                        opp_bits_low := BXOr(opp_bits_low,$00201000);
                      end;
                  end
                else
                if BAnd(my_bits_low,$00001000) <> 0 then { if plat[E2] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00200000);
                    opp_bits_low := BXOr(opp_bits_low,$00200000);
                  end;
              end;
            if BAnd(opp_bits_low,$00400000) <> 0 then { if plat[G3] = adversaire then }
              begin
                if BAnd(opp_bits_low,$00004000) <> 0 then { if plat[G2] = adversaire then }
                  begin
                    if BAnd(my_bits_low,$00000040) <> 0 then { if plat[G1] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$00404000);
                        opp_bits_low := BXOr(opp_bits_low,$00404000);
                      end;
                  end
                else
                if BAnd(my_bits_low,$00004000) <> 0 then { if plat[G2] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00400000);
                    opp_bits_low := BXOr(opp_bits_low,$00400000);
                  end;
              end;
            if (nbPrise <> 0)
              then
                begin
                  diffPions := succ(diffPions+nbprise);
                  ModifPlatBitboard := BXOr(vecteurParite,$00000002);
                  my_bits_low := BOr(my_bits_low,$40000000);  { place the disc in G4 }
                  g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
                  g_my_bits_high  := opp_bits_high;
                  g_opp_bits_low  := my_bits_low;
                  g_opp_bits_high := my_bits_high;
                end
              else
                ModifPlatBitboard := vecteurParite;
          end;
        48 :    { H4 }
          begin
            if BAnd(opp_bits_high,$00000080) <> 0 then { if plat[H5] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00008000) <> 0 then { if plat[H6] = adversaire then }
                  begin
                    if BAnd(opp_bits_high,$00800000) <> 0 then { if plat[H7] = adversaire then }
                      begin
                        if BAnd(my_bits_high,$80000000) <> 0 then { if plat[H8] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_high := BOr(my_bits_high,$00808080);
                            opp_bits_high := BXOr(opp_bits_high,$00808080);
                          end;
                      end
                    else
                    if BAnd(my_bits_high,$00800000) <> 0 then { if plat[H7] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$00008080);
                        opp_bits_high := BXOr(opp_bits_high,$00008080);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00008000) <> 0 then { if plat[H6] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00000080);
                    opp_bits_high := BXOr(opp_bits_high,$00000080);
                  end;
              end;
            if BAnd(opp_bits_high,$00000040) <> 0 then { if plat[G5] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00002000) <> 0 then { if plat[F6] = adversaire then }
                  begin
                    if BAnd(opp_bits_high,$00100000) <> 0 then { if plat[E7] = adversaire then }
                      begin
                        if BAnd(my_bits_high,$08000000) <> 0 then { if plat[D8] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_high := BOr(my_bits_high,$00102040);
                            opp_bits_high := BXOr(opp_bits_high,$00102040);
                          end;
                      end
                    else
                    if BAnd(my_bits_high,$00100000) <> 0 then { if plat[E7] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$00002040);
                        opp_bits_high := BXOr(opp_bits_high,$00002040);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00002000) <> 0 then { if plat[F6] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00000040);
                    opp_bits_high := BXOr(opp_bits_high,$00000040);
                  end;
              end;
            if BAnd(opp_bits_low,$40000000) <> 0 then { if plat[G4] = adversaire then }
              begin
                if BAnd(opp_bits_low,$20000000) <> 0 then { if plat[F4] = adversaire then }
                  begin
                    if BAnd(opp_bits_low,$10000000) <> 0 then { if plat[E4] = adversaire then }
                      begin
                        if BAnd(opp_bits_low,$08000000) <> 0 then { if plat[D4] = adversaire then }
                          begin
                            if BAnd(opp_bits_low,$04000000) <> 0 then { if plat[C4] = adversaire then }
                              begin
                                if BAnd(opp_bits_low,$02000000) <> 0 then { if plat[B4] = adversaire then }
                                  begin
                                    if BAnd(my_bits_low,$01000000) <> 0 then { if plat[A4] = couleur then }
                                      begin
                                        nbprise := nbprise + 12;
                                        my_bits_low := BOr(my_bits_low,$7E000000);
                                        opp_bits_low := BXOr(opp_bits_low,$7E000000);
                                      end;
                                  end
                                else
                                if BAnd(my_bits_low,$02000000) <> 0 then { if plat[B4] = couleur then }
                                  begin
                                    nbprise := nbprise + 10;
                                    my_bits_low := BOr(my_bits_low,$7C000000);
                                    opp_bits_low := BXOr(opp_bits_low,$7C000000);
                                  end;
                              end
                            else
                            if BAnd(my_bits_low,$04000000) <> 0 then { if plat[C4] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$78000000);
                                opp_bits_low := BXOr(opp_bits_low,$78000000);
                              end;
                          end
                        else
                        if BAnd(my_bits_low,$08000000) <> 0 then { if plat[D4] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$70000000);
                            opp_bits_low := BXOr(opp_bits_low,$70000000);
                          end;
                      end
                    else
                    if BAnd(my_bits_low,$10000000) <> 0 then { if plat[E4] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$60000000);
                        opp_bits_low := BXOr(opp_bits_low,$60000000);
                      end;
                  end
                else
                if BAnd(my_bits_low,$20000000) <> 0 then { if plat[F4] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$40000000);
                    opp_bits_low := BXOr(opp_bits_low,$40000000);
                  end;
              end;
            if BAnd(opp_bits_low,$00400000) <> 0 then { if plat[G3] = adversaire then }
              begin
                if BAnd(opp_bits_low,$00002000) <> 0 then { if plat[F2] = adversaire then }
                  begin
                    if BAnd(my_bits_low,$00000010) <> 0 then { if plat[E1] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$00402000);
                        opp_bits_low := BXOr(opp_bits_low,$00402000);
                      end;
                  end
                else
                if BAnd(my_bits_low,$00002000) <> 0 then { if plat[F2] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00400000);
                    opp_bits_low := BXOr(opp_bits_low,$00400000);
                  end;
              end;
            if BAnd(opp_bits_low,$00800000) <> 0 then { if plat[H3] = adversaire then }
              begin
                if BAnd(opp_bits_low,$00008000) <> 0 then { if plat[H2] = adversaire then }
                  begin
                    if BAnd(my_bits_low,$00000080) <> 0 then { if plat[H1] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$00808000);
                        opp_bits_low := BXOr(opp_bits_low,$00808000);
                      end;
                  end
                else
                if BAnd(my_bits_low,$00008000) <> 0 then { if plat[H2] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$00800000);
                    opp_bits_low := BXOr(opp_bits_low,$00800000);
                  end;
              end;
            if (nbPrise <> 0)
              then
                begin
                  diffPions := succ(diffPions+nbprise);
                  ModifPlatBitboard := BXOr(vecteurParite,$00000002);
                  my_bits_low := BOr(my_bits_low,$80000000);  { place the disc in H4 }
                  g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
                  g_my_bits_high  := opp_bits_high;
                  g_opp_bits_low  := my_bits_low;
                  g_opp_bits_high := my_bits_high;
                end
              else
                ModifPlatBitboard := vecteurParite;
          end;
        51 :    { A5 }
          begin
            if BAnd(opp_bits_low,$01000000) <> 0 then { if plat[A4] = adversaire then }
              begin
                if BAnd(opp_bits_low,$00010000) <> 0 then { if plat[A3] = adversaire then }
                  begin
                    if BAnd(opp_bits_low,$00000100) <> 0 then { if plat[A2] = adversaire then }
                      begin
                        if BAnd(my_bits_low,$00000001) <> 0 then { if plat[A1] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$01010100);
                            opp_bits_low := BXOr(opp_bits_low,$01010100);
                          end;
                      end
                    else
                    if BAnd(my_bits_low,$00000100) <> 0 then { if plat[A2] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$01010000);
                        opp_bits_low := BXOr(opp_bits_low,$01010000);
                      end;
                  end
                else
                if BAnd(my_bits_low,$00010000) <> 0 then { if plat[A3] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$01000000);
                    opp_bits_low := BXOr(opp_bits_low,$01000000);
                  end;
              end;
            if BAnd(opp_bits_low,$02000000) <> 0 then { if plat[B4] = adversaire then }
              begin
                if BAnd(opp_bits_low,$00040000) <> 0 then { if plat[C3] = adversaire then }
                  begin
                    if BAnd(opp_bits_low,$00000800) <> 0 then { if plat[D2] = adversaire then }
                      begin
                        if BAnd(my_bits_low,$00000010) <> 0 then { if plat[E1] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$02040800);
                            opp_bits_low := BXOr(opp_bits_low,$02040800);
                          end;
                      end
                    else
                    if BAnd(my_bits_low,$00000800) <> 0 then { if plat[D2] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$02040000);
                        opp_bits_low := BXOr(opp_bits_low,$02040000);
                      end;
                  end
                else
                if BAnd(my_bits_low,$00040000) <> 0 then { if plat[C3] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$02000000);
                    opp_bits_low := BXOr(opp_bits_low,$02000000);
                  end;
              end;
            if BAnd(opp_bits_high,$00000002) <> 0 then { if plat[B5] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00000004) <> 0 then { if plat[C5] = adversaire then }
                  begin
                    if BAnd(opp_bits_high,$00000008) <> 0 then { if plat[D5] = adversaire then }
                      begin
                        if BAnd(opp_bits_high,$00000010) <> 0 then { if plat[E5] = adversaire then }
                          begin
                            if BAnd(opp_bits_high,$00000020) <> 0 then { if plat[F5] = adversaire then }
                              begin
                                if BAnd(opp_bits_high,$00000040) <> 0 then { if plat[G5] = adversaire then }
                                  begin
                                    if BAnd(my_bits_high,$00000080) <> 0 then { if plat[H5] = couleur then }
                                      begin
                                        nbprise := nbprise + 12;
                                        my_bits_high := BOr(my_bits_high,$0000007E);
                                        opp_bits_high := BXOr(opp_bits_high,$0000007E);
                                      end;
                                  end
                                else
                                if BAnd(my_bits_high,$00000040) <> 0 then { if plat[G5] = couleur then }
                                  begin
                                    nbprise := nbprise + 10;
                                    my_bits_high := BOr(my_bits_high,$0000003E);
                                    opp_bits_high := BXOr(opp_bits_high,$0000003E);
                                  end;
                              end
                            else
                            if BAnd(my_bits_high,$00000020) <> 0 then { if plat[F5] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_high := BOr(my_bits_high,$0000001E);
                                opp_bits_high := BXOr(opp_bits_high,$0000001E);
                              end;
                          end
                        else
                        if BAnd(my_bits_high,$00000010) <> 0 then { if plat[E5] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_high := BOr(my_bits_high,$0000000E);
                            opp_bits_high := BXOr(opp_bits_high,$0000000E);
                          end;
                      end
                    else
                    if BAnd(my_bits_high,$00000008) <> 0 then { if plat[D5] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$00000006);
                        opp_bits_high := BXOr(opp_bits_high,$00000006);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00000004) <> 0 then { if plat[C5] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00000002);
                    opp_bits_high := BXOr(opp_bits_high,$00000002);
                  end;
              end;
            if BAnd(opp_bits_high,$00000200) <> 0 then { if plat[B6] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00040000) <> 0 then { if plat[C7] = adversaire then }
                  begin
                    if BAnd(my_bits_high,$08000000) <> 0 then { if plat[D8] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$00040200);
                        opp_bits_high := BXOr(opp_bits_high,$00040200);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00040000) <> 0 then { if plat[C7] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00000200);
                    opp_bits_high := BXOr(opp_bits_high,$00000200);
                  end;
              end;
            if BAnd(opp_bits_high,$00000100) <> 0 then { if plat[A6] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00010000) <> 0 then { if plat[A7] = adversaire then }
                  begin
                    if BAnd(my_bits_high,$01000000) <> 0 then { if plat[A8] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$00010100);
                        opp_bits_high := BXOr(opp_bits_high,$00010100);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00010000) <> 0 then { if plat[A7] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00000100);
                    opp_bits_high := BXOr(opp_bits_high,$00000100);
                  end;
              end;
            if (nbPrise <> 0)
              then
                begin
                  diffPions := succ(diffPions+nbprise);
                  ModifPlatBitboard := BXOr(vecteurParite,$00000004);
                  my_bits_high := BOr(my_bits_high,$00000001);  { place the disc in A5 }
                  g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
                  g_my_bits_high  := opp_bits_high;
                  g_opp_bits_low  := my_bits_low;
                  g_opp_bits_high := my_bits_high;
                end
              else
                ModifPlatBitboard := vecteurParite;
          end;
        52 :    { B5 }
          begin
            if BAnd(opp_bits_low,$02000000) <> 0 then { if plat[B4] = adversaire then }
              begin
                if BAnd(opp_bits_low,$00020000) <> 0 then { if plat[B3] = adversaire then }
                  begin
                    if BAnd(opp_bits_low,$00000200) <> 0 then { if plat[B2] = adversaire then }
                      begin
                        if BAnd(my_bits_low,$00000002) <> 0 then { if plat[B1] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$02020200);
                            opp_bits_low := BXOr(opp_bits_low,$02020200);
                          end;
                      end
                    else
                    if BAnd(my_bits_low,$00000200) <> 0 then { if plat[B2] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$02020000);
                        opp_bits_low := BXOr(opp_bits_low,$02020000);
                      end;
                  end
                else
                if BAnd(my_bits_low,$00020000) <> 0 then { if plat[B3] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$02000000);
                    opp_bits_low := BXOr(opp_bits_low,$02000000);
                  end;
              end;
            if BAnd(opp_bits_low,$04000000) <> 0 then { if plat[C4] = adversaire then }
              begin
                if BAnd(opp_bits_low,$00080000) <> 0 then { if plat[D3] = adversaire then }
                  begin
                    if BAnd(opp_bits_low,$00001000) <> 0 then { if plat[E2] = adversaire then }
                      begin
                        if BAnd(my_bits_low,$00000020) <> 0 then { if plat[F1] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$04081000);
                            opp_bits_low := BXOr(opp_bits_low,$04081000);
                          end;
                      end
                    else
                    if BAnd(my_bits_low,$00001000) <> 0 then { if plat[E2] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$04080000);
                        opp_bits_low := BXOr(opp_bits_low,$04080000);
                      end;
                  end
                else
                if BAnd(my_bits_low,$00080000) <> 0 then { if plat[D3] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$04000000);
                    opp_bits_low := BXOr(opp_bits_low,$04000000);
                  end;
              end;
            if BAnd(opp_bits_high,$00000004) <> 0 then { if plat[C5] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00000008) <> 0 then { if plat[D5] = adversaire then }
                  begin
                    if BAnd(opp_bits_high,$00000010) <> 0 then { if plat[E5] = adversaire then }
                      begin
                        if BAnd(opp_bits_high,$00000020) <> 0 then { if plat[F5] = adversaire then }
                          begin
                            if BAnd(opp_bits_high,$00000040) <> 0 then { if plat[G5] = adversaire then }
                              begin
                                if BAnd(my_bits_high,$00000080) <> 0 then { if plat[H5] = couleur then }
                                  begin
                                    nbprise := nbprise + 10;
                                    my_bits_high := BOr(my_bits_high,$0000007C);
                                    opp_bits_high := BXOr(opp_bits_high,$0000007C);
                                  end;
                              end
                            else
                            if BAnd(my_bits_high,$00000040) <> 0 then { if plat[G5] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_high := BOr(my_bits_high,$0000003C);
                                opp_bits_high := BXOr(opp_bits_high,$0000003C);
                              end;
                          end
                        else
                        if BAnd(my_bits_high,$00000020) <> 0 then { if plat[F5] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_high := BOr(my_bits_high,$0000001C);
                            opp_bits_high := BXOr(opp_bits_high,$0000001C);
                          end;
                      end
                    else
                    if BAnd(my_bits_high,$00000010) <> 0 then { if plat[E5] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$0000000C);
                        opp_bits_high := BXOr(opp_bits_high,$0000000C);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00000008) <> 0 then { if plat[D5] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00000004);
                    opp_bits_high := BXOr(opp_bits_high,$00000004);
                  end;
              end;
            if BAnd(opp_bits_high,$00000400) <> 0 then { if plat[C6] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00080000) <> 0 then { if plat[D7] = adversaire then }
                  begin
                    if BAnd(my_bits_high,$10000000) <> 0 then { if plat[E8] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$00080400);
                        opp_bits_high := BXOr(opp_bits_high,$00080400);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00080000) <> 0 then { if plat[D7] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00000400);
                    opp_bits_high := BXOr(opp_bits_high,$00000400);
                  end;
              end;
            if BAnd(opp_bits_high,$00000200) <> 0 then { if plat[B6] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00020000) <> 0 then { if plat[B7] = adversaire then }
                  begin
                    if BAnd(my_bits_high,$02000000) <> 0 then { if plat[B8] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$00020200);
                        opp_bits_high := BXOr(opp_bits_high,$00020200);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00020000) <> 0 then { if plat[B7] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00000200);
                    opp_bits_high := BXOr(opp_bits_high,$00000200);
                  end;
              end;
            if (nbPrise <> 0)
              then
                begin
                  diffPions := succ(diffPions+nbprise);
                  ModifPlatBitboard := BXOr(vecteurParite,$00000004);
                  my_bits_high := BOr(my_bits_high,$00000002);  { place the disc in B5 }
                  g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
                  g_my_bits_high  := opp_bits_high;
                  g_opp_bits_low  := my_bits_low;
                  g_opp_bits_high := my_bits_high;
                end
              else
                ModifPlatBitboard := vecteurParite;
          end;
        53 :    { C5 }
          begin
            if BAnd(opp_bits_low,$02000000) <> 0 then { if plat[B4] = adversaire then }
              begin
                if BAnd(my_bits_low,$00010000) <> 0 then { if plat[A3] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$02000000);
                    opp_bits_low := BXOr(opp_bits_low,$02000000);
                  end;
              end;
            if BAnd(opp_bits_low,$04000000) <> 0 then { if plat[C4] = adversaire then }
              begin
                if BAnd(opp_bits_low,$00040000) <> 0 then { if plat[C3] = adversaire then }
                  begin
                    if BAnd(opp_bits_low,$00000400) <> 0 then { if plat[C2] = adversaire then }
                      begin
                        if BAnd(my_bits_low,$00000004) <> 0 then { if plat[C1] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$04040400);
                            opp_bits_low := BXOr(opp_bits_low,$04040400);
                          end;
                      end
                    else
                    if BAnd(my_bits_low,$00000400) <> 0 then { if plat[C2] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$04040000);
                        opp_bits_low := BXOr(opp_bits_low,$04040000);
                      end;
                  end
                else
                if BAnd(my_bits_low,$00040000) <> 0 then { if plat[C3] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$04000000);
                    opp_bits_low := BXOr(opp_bits_low,$04000000);
                  end;
              end;
            if BAnd(opp_bits_low,$08000000) <> 0 then { if plat[D4] = adversaire then }
              begin
                if BAnd(opp_bits_low,$00100000) <> 0 then { if plat[E3] = adversaire then }
                  begin
                    if BAnd(opp_bits_low,$00002000) <> 0 then { if plat[F2] = adversaire then }
                      begin
                        if BAnd(my_bits_low,$00000040) <> 0 then { if plat[G1] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$08102000);
                            opp_bits_low := BXOr(opp_bits_low,$08102000);
                          end;
                      end
                    else
                    if BAnd(my_bits_low,$00002000) <> 0 then { if plat[F2] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$08100000);
                        opp_bits_low := BXOr(opp_bits_low,$08100000);
                      end;
                  end
                else
                if BAnd(my_bits_low,$00100000) <> 0 then { if plat[E3] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$08000000);
                    opp_bits_low := BXOr(opp_bits_low,$08000000);
                  end;
              end;
            if BAnd(opp_bits_high,$00000008) <> 0 then { if plat[D5] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00000010) <> 0 then { if plat[E5] = adversaire then }
                  begin
                    if BAnd(opp_bits_high,$00000020) <> 0 then { if plat[F5] = adversaire then }
                      begin
                        if BAnd(opp_bits_high,$00000040) <> 0 then { if plat[G5] = adversaire then }
                          begin
                            if BAnd(my_bits_high,$00000080) <> 0 then { if plat[H5] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_high := BOr(my_bits_high,$00000078);
                                opp_bits_high := BXOr(opp_bits_high,$00000078);
                              end;
                          end
                        else
                        if BAnd(my_bits_high,$00000040) <> 0 then { if plat[G5] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_high := BOr(my_bits_high,$00000038);
                            opp_bits_high := BXOr(opp_bits_high,$00000038);
                          end;
                      end
                    else
                    if BAnd(my_bits_high,$00000020) <> 0 then { if plat[F5] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$00000018);
                        opp_bits_high := BXOr(opp_bits_high,$00000018);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00000010) <> 0 then { if plat[E5] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00000008);
                    opp_bits_high := BXOr(opp_bits_high,$00000008);
                  end;
              end;
            if BAnd(opp_bits_high,$00000800) <> 0 then { if plat[D6] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00100000) <> 0 then { if plat[E7] = adversaire then }
                  begin
                    if BAnd(my_bits_high,$20000000) <> 0 then { if plat[F8] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$00100800);
                        opp_bits_high := BXOr(opp_bits_high,$00100800);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00100000) <> 0 then { if plat[E7] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00000800);
                    opp_bits_high := BXOr(opp_bits_high,$00000800);
                  end;
              end;
            if BAnd(opp_bits_high,$00000400) <> 0 then { if plat[C6] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00040000) <> 0 then { if plat[C7] = adversaire then }
                  begin
                    if BAnd(my_bits_high,$04000000) <> 0 then { if plat[C8] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$00040400);
                        opp_bits_high := BXOr(opp_bits_high,$00040400);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00040000) <> 0 then { if plat[C7] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00000400);
                    opp_bits_high := BXOr(opp_bits_high,$00000400);
                  end;
              end;
            if BAnd(opp_bits_high,$00000200) <> 0 then { if plat[B6] = adversaire then }
              begin
                if BAnd(my_bits_high,$00010000) <> 0 then { if plat[A7] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00000200);
                    opp_bits_high := BXOr(opp_bits_high,$00000200);
                  end;
              end;
            if BAnd(opp_bits_high,$00000002) <> 0 then { if plat[B5] = adversaire then }
              begin
                if BAnd(my_bits_high,$00000001) <> 0 then { if plat[A5] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00000002);
                    opp_bits_high := BXOr(opp_bits_high,$00000002);
                  end;
              end;
            if (nbPrise <> 0)
              then
                begin
                  diffPions := succ(diffPions+nbprise);
                  ModifPlatBitboard := BXOr(vecteurParite,$00000004);
                  my_bits_high := BOr(my_bits_high,$00000004);  { place the disc in C5 }
                  g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
                  g_my_bits_high  := opp_bits_high;
                  g_opp_bits_low  := my_bits_low;
                  g_opp_bits_high := my_bits_high;
                end
              else
                ModifPlatBitboard := vecteurParite;
          end;
        54 :    { D5 }
          begin
            if BAnd(opp_bits_low,$04000000) <> 0 then { if plat[C4] = adversaire then }
              begin
                if BAnd(opp_bits_low,$00020000) <> 0 then { if plat[B3] = adversaire then }
                  begin
                    if BAnd(my_bits_low,$00000100) <> 0 then { if plat[A2] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$04020000);
                        opp_bits_low := BXOr(opp_bits_low,$04020000);
                      end;
                  end
                else
                if BAnd(my_bits_low,$00020000) <> 0 then { if plat[B3] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$04000000);
                    opp_bits_low := BXOr(opp_bits_low,$04000000);
                  end;
              end;
            if BAnd(opp_bits_low,$08000000) <> 0 then { if plat[D4] = adversaire then }
              begin
                if BAnd(opp_bits_low,$00080000) <> 0 then { if plat[D3] = adversaire then }
                  begin
                    if BAnd(opp_bits_low,$00000800) <> 0 then { if plat[D2] = adversaire then }
                      begin
                        if BAnd(my_bits_low,$00000008) <> 0 then { if plat[D1] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$08080800);
                            opp_bits_low := BXOr(opp_bits_low,$08080800);
                          end;
                      end
                    else
                    if BAnd(my_bits_low,$00000800) <> 0 then { if plat[D2] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$08080000);
                        opp_bits_low := BXOr(opp_bits_low,$08080000);
                      end;
                  end
                else
                if BAnd(my_bits_low,$00080000) <> 0 then { if plat[D3] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$08000000);
                    opp_bits_low := BXOr(opp_bits_low,$08000000);
                  end;
              end;
            if BAnd(opp_bits_low,$10000000) <> 0 then { if plat[E4] = adversaire then }
              begin
                if BAnd(opp_bits_low,$00200000) <> 0 then { if plat[F3] = adversaire then }
                  begin
                    if BAnd(opp_bits_low,$00004000) <> 0 then { if plat[G2] = adversaire then }
                      begin
                        if BAnd(my_bits_low,$00000080) <> 0 then { if plat[H1] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$10204000);
                            opp_bits_low := BXOr(opp_bits_low,$10204000);
                          end;
                      end
                    else
                    if BAnd(my_bits_low,$00004000) <> 0 then { if plat[G2] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$10200000);
                        opp_bits_low := BXOr(opp_bits_low,$10200000);
                      end;
                  end
                else
                if BAnd(my_bits_low,$00200000) <> 0 then { if plat[F3] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$10000000);
                    opp_bits_low := BXOr(opp_bits_low,$10000000);
                  end;
              end;
            if BAnd(opp_bits_high,$00000010) <> 0 then { if plat[E5] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00000020) <> 0 then { if plat[F5] = adversaire then }
                  begin
                    if BAnd(opp_bits_high,$00000040) <> 0 then { if plat[G5] = adversaire then }
                      begin
                        if BAnd(my_bits_high,$00000080) <> 0 then { if plat[H5] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_high := BOr(my_bits_high,$00000070);
                            opp_bits_high := BXOr(opp_bits_high,$00000070);
                          end;
                      end
                    else
                    if BAnd(my_bits_high,$00000040) <> 0 then { if plat[G5] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$00000030);
                        opp_bits_high := BXOr(opp_bits_high,$00000030);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00000020) <> 0 then { if plat[F5] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00000010);
                    opp_bits_high := BXOr(opp_bits_high,$00000010);
                  end;
              end;
            if BAnd(opp_bits_high,$00001000) <> 0 then { if plat[E6] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00200000) <> 0 then { if plat[F7] = adversaire then }
                  begin
                    if BAnd(my_bits_high,$40000000) <> 0 then { if plat[G8] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$00201000);
                        opp_bits_high := BXOr(opp_bits_high,$00201000);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00200000) <> 0 then { if plat[F7] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00001000);
                    opp_bits_high := BXOr(opp_bits_high,$00001000);
                  end;
              end;
            if BAnd(opp_bits_high,$00000800) <> 0 then { if plat[D6] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00080000) <> 0 then { if plat[D7] = adversaire then }
                  begin
                    if BAnd(my_bits_high,$08000000) <> 0 then { if plat[D8] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$00080800);
                        opp_bits_high := BXOr(opp_bits_high,$00080800);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00080000) <> 0 then { if plat[D7] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00000800);
                    opp_bits_high := BXOr(opp_bits_high,$00000800);
                  end;
              end;
            if BAnd(opp_bits_high,$00000400) <> 0 then { if plat[C6] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00020000) <> 0 then { if plat[B7] = adversaire then }
                  begin
                    if BAnd(my_bits_high,$01000000) <> 0 then { if plat[A8] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$00020400);
                        opp_bits_high := BXOr(opp_bits_high,$00020400);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00020000) <> 0 then { if plat[B7] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00000400);
                    opp_bits_high := BXOr(opp_bits_high,$00000400);
                  end;
              end;
            if BAnd(opp_bits_high,$00000004) <> 0 then { if plat[C5] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00000002) <> 0 then { if plat[B5] = adversaire then }
                  begin
                    if BAnd(my_bits_high,$00000001) <> 0 then { if plat[A5] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$00000006);
                        opp_bits_high := BXOr(opp_bits_high,$00000006);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00000002) <> 0 then { if plat[B5] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00000004);
                    opp_bits_high := BXOr(opp_bits_high,$00000004);
                  end;
              end;
            if (nbPrise <> 0)
              then
                begin
                  diffPions := succ(diffPions+nbprise);
                  ModifPlatBitboard := BXOr(vecteurParite,$00000004);
                  my_bits_high := BOr(my_bits_high,$00000008);  { place the disc in D5 }
                  g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
                  g_my_bits_high  := opp_bits_high;
                  g_opp_bits_low  := my_bits_low;
                  g_opp_bits_high := my_bits_high;
                end
              else
                ModifPlatBitboard := vecteurParite;
          end;
        55 :    { E5 }
          begin
            if BAnd(opp_bits_low,$08000000) <> 0 then { if plat[D4] = adversaire then }
              begin
                if BAnd(opp_bits_low,$00040000) <> 0 then { if plat[C3] = adversaire then }
                  begin
                    if BAnd(opp_bits_low,$00000200) <> 0 then { if plat[B2] = adversaire then }
                      begin
                        if BAnd(my_bits_low,$00000001) <> 0 then { if plat[A1] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$08040200);
                            opp_bits_low := BXOr(opp_bits_low,$08040200);
                          end;
                      end
                    else
                    if BAnd(my_bits_low,$00000200) <> 0 then { if plat[B2] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$08040000);
                        opp_bits_low := BXOr(opp_bits_low,$08040000);
                      end;
                  end
                else
                if BAnd(my_bits_low,$00040000) <> 0 then { if plat[C3] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$08000000);
                    opp_bits_low := BXOr(opp_bits_low,$08000000);
                  end;
              end;
            if BAnd(opp_bits_low,$10000000) <> 0 then { if plat[E4] = adversaire then }
              begin
                if BAnd(opp_bits_low,$00100000) <> 0 then { if plat[E3] = adversaire then }
                  begin
                    if BAnd(opp_bits_low,$00001000) <> 0 then { if plat[E2] = adversaire then }
                      begin
                        if BAnd(my_bits_low,$00000010) <> 0 then { if plat[E1] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$10101000);
                            opp_bits_low := BXOr(opp_bits_low,$10101000);
                          end;
                      end
                    else
                    if BAnd(my_bits_low,$00001000) <> 0 then { if plat[E2] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$10100000);
                        opp_bits_low := BXOr(opp_bits_low,$10100000);
                      end;
                  end
                else
                if BAnd(my_bits_low,$00100000) <> 0 then { if plat[E3] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$10000000);
                    opp_bits_low := BXOr(opp_bits_low,$10000000);
                  end;
              end;
            if BAnd(opp_bits_low,$20000000) <> 0 then { if plat[F4] = adversaire then }
              begin
                if BAnd(opp_bits_low,$00400000) <> 0 then { if plat[G3] = adversaire then }
                  begin
                    if BAnd(my_bits_low,$00008000) <> 0 then { if plat[H2] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$20400000);
                        opp_bits_low := BXOr(opp_bits_low,$20400000);
                      end;
                  end
                else
                if BAnd(my_bits_low,$00400000) <> 0 then { if plat[G3] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$20000000);
                    opp_bits_low := BXOr(opp_bits_low,$20000000);
                  end;
              end;
            if BAnd(opp_bits_high,$00000020) <> 0 then { if plat[F5] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00000040) <> 0 then { if plat[G5] = adversaire then }
                  begin
                    if BAnd(my_bits_high,$00000080) <> 0 then { if plat[H5] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$00000060);
                        opp_bits_high := BXOr(opp_bits_high,$00000060);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00000040) <> 0 then { if plat[G5] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00000020);
                    opp_bits_high := BXOr(opp_bits_high,$00000020);
                  end;
              end;
            if BAnd(opp_bits_high,$00002000) <> 0 then { if plat[F6] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00400000) <> 0 then { if plat[G7] = adversaire then }
                  begin
                    if BAnd(my_bits_high,$80000000) <> 0 then { if plat[H8] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$00402000);
                        opp_bits_high := BXOr(opp_bits_high,$00402000);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00400000) <> 0 then { if plat[G7] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00002000);
                    opp_bits_high := BXOr(opp_bits_high,$00002000);
                  end;
              end;
            if BAnd(opp_bits_high,$00001000) <> 0 then { if plat[E6] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00100000) <> 0 then { if plat[E7] = adversaire then }
                  begin
                    if BAnd(my_bits_high,$10000000) <> 0 then { if plat[E8] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$00101000);
                        opp_bits_high := BXOr(opp_bits_high,$00101000);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00100000) <> 0 then { if plat[E7] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00001000);
                    opp_bits_high := BXOr(opp_bits_high,$00001000);
                  end;
              end;
            if BAnd(opp_bits_high,$00000800) <> 0 then { if plat[D6] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00040000) <> 0 then { if plat[C7] = adversaire then }
                  begin
                    if BAnd(my_bits_high,$02000000) <> 0 then { if plat[B8] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$00040800);
                        opp_bits_high := BXOr(opp_bits_high,$00040800);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00040000) <> 0 then { if plat[C7] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00000800);
                    opp_bits_high := BXOr(opp_bits_high,$00000800);
                  end;
              end;
            if BAnd(opp_bits_high,$00000008) <> 0 then { if plat[D5] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00000004) <> 0 then { if plat[C5] = adversaire then }
                  begin
                    if BAnd(opp_bits_high,$00000002) <> 0 then { if plat[B5] = adversaire then }
                      begin
                        if BAnd(my_bits_high,$00000001) <> 0 then { if plat[A5] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_high := BOr(my_bits_high,$0000000E);
                            opp_bits_high := BXOr(opp_bits_high,$0000000E);
                          end;
                      end
                    else
                    if BAnd(my_bits_high,$00000002) <> 0 then { if plat[B5] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$0000000C);
                        opp_bits_high := BXOr(opp_bits_high,$0000000C);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00000004) <> 0 then { if plat[C5] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00000008);
                    opp_bits_high := BXOr(opp_bits_high,$00000008);
                  end;
              end;
            if (nbPrise <> 0)
              then
                begin
                  diffPions := succ(diffPions+nbprise);
                  ModifPlatBitboard := BXOr(vecteurParite,$00000008);
                  my_bits_high := BOr(my_bits_high,$00000010);  { place the disc in E5 }
                  g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
                  g_my_bits_high  := opp_bits_high;
                  g_opp_bits_low  := my_bits_low;
                  g_opp_bits_high := my_bits_high;
                end
              else
                ModifPlatBitboard := vecteurParite;
          end;
        56 :    { F5 }
          begin
            if BAnd(opp_bits_low,$10000000) <> 0 then { if plat[E4] = adversaire then }
              begin
                if BAnd(opp_bits_low,$00080000) <> 0 then { if plat[D3] = adversaire then }
                  begin
                    if BAnd(opp_bits_low,$00000400) <> 0 then { if plat[C2] = adversaire then }
                      begin
                        if BAnd(my_bits_low,$00000002) <> 0 then { if plat[B1] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$10080400);
                            opp_bits_low := BXOr(opp_bits_low,$10080400);
                          end;
                      end
                    else
                    if BAnd(my_bits_low,$00000400) <> 0 then { if plat[C2] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$10080000);
                        opp_bits_low := BXOr(opp_bits_low,$10080000);
                      end;
                  end
                else
                if BAnd(my_bits_low,$00080000) <> 0 then { if plat[D3] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$10000000);
                    opp_bits_low := BXOr(opp_bits_low,$10000000);
                  end;
              end;
            if BAnd(opp_bits_low,$20000000) <> 0 then { if plat[F4] = adversaire then }
              begin
                if BAnd(opp_bits_low,$00200000) <> 0 then { if plat[F3] = adversaire then }
                  begin
                    if BAnd(opp_bits_low,$00002000) <> 0 then { if plat[F2] = adversaire then }
                      begin
                        if BAnd(my_bits_low,$00000020) <> 0 then { if plat[F1] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$20202000);
                            opp_bits_low := BXOr(opp_bits_low,$20202000);
                          end;
                      end
                    else
                    if BAnd(my_bits_low,$00002000) <> 0 then { if plat[F2] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$20200000);
                        opp_bits_low := BXOr(opp_bits_low,$20200000);
                      end;
                  end
                else
                if BAnd(my_bits_low,$00200000) <> 0 then { if plat[F3] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$20000000);
                    opp_bits_low := BXOr(opp_bits_low,$20000000);
                  end;
              end;
            if BAnd(opp_bits_low,$40000000) <> 0 then { if plat[G4] = adversaire then }
              begin
                if BAnd(my_bits_low,$00800000) <> 0 then { if plat[H3] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$40000000);
                    opp_bits_low := BXOr(opp_bits_low,$40000000);
                  end;
              end;
            if BAnd(opp_bits_high,$00000040) <> 0 then { if plat[G5] = adversaire then }
              begin
                if BAnd(my_bits_high,$00000080) <> 0 then { if plat[H5] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00000040);
                    opp_bits_high := BXOr(opp_bits_high,$00000040);
                  end;
              end;
            if BAnd(opp_bits_high,$00004000) <> 0 then { if plat[G6] = adversaire then }
              begin
                if BAnd(my_bits_high,$00800000) <> 0 then { if plat[H7] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00004000);
                    opp_bits_high := BXOr(opp_bits_high,$00004000);
                  end;
              end;
            if BAnd(opp_bits_high,$00002000) <> 0 then { if plat[F6] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00200000) <> 0 then { if plat[F7] = adversaire then }
                  begin
                    if BAnd(my_bits_high,$20000000) <> 0 then { if plat[F8] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$00202000);
                        opp_bits_high := BXOr(opp_bits_high,$00202000);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00200000) <> 0 then { if plat[F7] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00002000);
                    opp_bits_high := BXOr(opp_bits_high,$00002000);
                  end;
              end;
            if BAnd(opp_bits_high,$00001000) <> 0 then { if plat[E6] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00080000) <> 0 then { if plat[D7] = adversaire then }
                  begin
                    if BAnd(my_bits_high,$04000000) <> 0 then { if plat[C8] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$00081000);
                        opp_bits_high := BXOr(opp_bits_high,$00081000);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00080000) <> 0 then { if plat[D7] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00001000);
                    opp_bits_high := BXOr(opp_bits_high,$00001000);
                  end;
              end;
            if BAnd(opp_bits_high,$00000010) <> 0 then { if plat[E5] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00000008) <> 0 then { if plat[D5] = adversaire then }
                  begin
                    if BAnd(opp_bits_high,$00000004) <> 0 then { if plat[C5] = adversaire then }
                      begin
                        if BAnd(opp_bits_high,$00000002) <> 0 then { if plat[B5] = adversaire then }
                          begin
                            if BAnd(my_bits_high,$00000001) <> 0 then { if plat[A5] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_high := BOr(my_bits_high,$0000001E);
                                opp_bits_high := BXOr(opp_bits_high,$0000001E);
                              end;
                          end
                        else
                        if BAnd(my_bits_high,$00000002) <> 0 then { if plat[B5] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_high := BOr(my_bits_high,$0000001C);
                            opp_bits_high := BXOr(opp_bits_high,$0000001C);
                          end;
                      end
                    else
                    if BAnd(my_bits_high,$00000004) <> 0 then { if plat[C5] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$00000018);
                        opp_bits_high := BXOr(opp_bits_high,$00000018);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00000008) <> 0 then { if plat[D5] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00000010);
                    opp_bits_high := BXOr(opp_bits_high,$00000010);
                  end;
              end;
            if (nbPrise <> 0)
              then
                begin
                  diffPions := succ(diffPions+nbprise);
                  ModifPlatBitboard := BXOr(vecteurParite,$00000008);
                  my_bits_high := BOr(my_bits_high,$00000020);  { place the disc in F5 }
                  g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
                  g_my_bits_high  := opp_bits_high;
                  g_opp_bits_low  := my_bits_low;
                  g_opp_bits_high := my_bits_high;
                end
              else
                ModifPlatBitboard := vecteurParite;
          end;
        57 :    { G5 }
          begin
            if BAnd(opp_bits_high,$00004000) <> 0 then { if plat[G6] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00400000) <> 0 then { if plat[G7] = adversaire then }
                  begin
                    if BAnd(my_bits_high,$40000000) <> 0 then { if plat[G8] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$00404000);
                        opp_bits_high := BXOr(opp_bits_high,$00404000);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00400000) <> 0 then { if plat[G7] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00004000);
                    opp_bits_high := BXOr(opp_bits_high,$00004000);
                  end;
              end;
            if BAnd(opp_bits_high,$00002000) <> 0 then { if plat[F6] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00100000) <> 0 then { if plat[E7] = adversaire then }
                  begin
                    if BAnd(my_bits_high,$08000000) <> 0 then { if plat[D8] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$00102000);
                        opp_bits_high := BXOr(opp_bits_high,$00102000);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00100000) <> 0 then { if plat[E7] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00002000);
                    opp_bits_high := BXOr(opp_bits_high,$00002000);
                  end;
              end;
            if BAnd(opp_bits_high,$00000020) <> 0 then { if plat[F5] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00000010) <> 0 then { if plat[E5] = adversaire then }
                  begin
                    if BAnd(opp_bits_high,$00000008) <> 0 then { if plat[D5] = adversaire then }
                      begin
                        if BAnd(opp_bits_high,$00000004) <> 0 then { if plat[C5] = adversaire then }
                          begin
                            if BAnd(opp_bits_high,$00000002) <> 0 then { if plat[B5] = adversaire then }
                              begin
                                if BAnd(my_bits_high,$00000001) <> 0 then { if plat[A5] = couleur then }
                                  begin
                                    nbprise := nbprise + 10;
                                    my_bits_high := BOr(my_bits_high,$0000003E);
                                    opp_bits_high := BXOr(opp_bits_high,$0000003E);
                                  end;
                              end
                            else
                            if BAnd(my_bits_high,$00000002) <> 0 then { if plat[B5] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_high := BOr(my_bits_high,$0000003C);
                                opp_bits_high := BXOr(opp_bits_high,$0000003C);
                              end;
                          end
                        else
                        if BAnd(my_bits_high,$00000004) <> 0 then { if plat[C5] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_high := BOr(my_bits_high,$00000038);
                            opp_bits_high := BXOr(opp_bits_high,$00000038);
                          end;
                      end
                    else
                    if BAnd(my_bits_high,$00000008) <> 0 then { if plat[D5] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$00000030);
                        opp_bits_high := BXOr(opp_bits_high,$00000030);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00000010) <> 0 then { if plat[E5] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00000020);
                    opp_bits_high := BXOr(opp_bits_high,$00000020);
                  end;
              end;
            if BAnd(opp_bits_low,$20000000) <> 0 then { if plat[F4] = adversaire then }
              begin
                if BAnd(opp_bits_low,$00100000) <> 0 then { if plat[E3] = adversaire then }
                  begin
                    if BAnd(opp_bits_low,$00000800) <> 0 then { if plat[D2] = adversaire then }
                      begin
                        if BAnd(my_bits_low,$00000004) <> 0 then { if plat[C1] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$20100800);
                            opp_bits_low := BXOr(opp_bits_low,$20100800);
                          end;
                      end
                    else
                    if BAnd(my_bits_low,$00000800) <> 0 then { if plat[D2] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$20100000);
                        opp_bits_low := BXOr(opp_bits_low,$20100000);
                      end;
                  end
                else
                if BAnd(my_bits_low,$00100000) <> 0 then { if plat[E3] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$20000000);
                    opp_bits_low := BXOr(opp_bits_low,$20000000);
                  end;
              end;
            if BAnd(opp_bits_low,$40000000) <> 0 then { if plat[G4] = adversaire then }
              begin
                if BAnd(opp_bits_low,$00400000) <> 0 then { if plat[G3] = adversaire then }
                  begin
                    if BAnd(opp_bits_low,$00004000) <> 0 then { if plat[G2] = adversaire then }
                      begin
                        if BAnd(my_bits_low,$00000040) <> 0 then { if plat[G1] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$40404000);
                            opp_bits_low := BXOr(opp_bits_low,$40404000);
                          end;
                      end
                    else
                    if BAnd(my_bits_low,$00004000) <> 0 then { if plat[G2] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$40400000);
                        opp_bits_low := BXOr(opp_bits_low,$40400000);
                      end;
                  end
                else
                if BAnd(my_bits_low,$00400000) <> 0 then { if plat[G3] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$40000000);
                    opp_bits_low := BXOr(opp_bits_low,$40000000);
                  end;
              end;
            if (nbPrise <> 0)
              then
                begin
                  diffPions := succ(diffPions+nbprise);
                  ModifPlatBitboard := BXOr(vecteurParite,$00000008);
                  my_bits_high := BOr(my_bits_high,$00000040);  { place the disc in G5 }
                  g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
                  g_my_bits_high  := opp_bits_high;
                  g_opp_bits_low  := my_bits_low;
                  g_opp_bits_high := my_bits_high;
                end
              else
                ModifPlatBitboard := vecteurParite;
          end;
        58 :    { H5 }
          begin
            if BAnd(opp_bits_high,$00008000) <> 0 then { if plat[H6] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00800000) <> 0 then { if plat[H7] = adversaire then }
                  begin
                    if BAnd(my_bits_high,$80000000) <> 0 then { if plat[H8] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$00808000);
                        opp_bits_high := BXOr(opp_bits_high,$00808000);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00800000) <> 0 then { if plat[H7] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00008000);
                    opp_bits_high := BXOr(opp_bits_high,$00008000);
                  end;
              end;
            if BAnd(opp_bits_high,$00004000) <> 0 then { if plat[G6] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00200000) <> 0 then { if plat[F7] = adversaire then }
                  begin
                    if BAnd(my_bits_high,$10000000) <> 0 then { if plat[E8] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$00204000);
                        opp_bits_high := BXOr(opp_bits_high,$00204000);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00200000) <> 0 then { if plat[F7] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00004000);
                    opp_bits_high := BXOr(opp_bits_high,$00004000);
                  end;
              end;
            if BAnd(opp_bits_high,$00000040) <> 0 then { if plat[G5] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00000020) <> 0 then { if plat[F5] = adversaire then }
                  begin
                    if BAnd(opp_bits_high,$00000010) <> 0 then { if plat[E5] = adversaire then }
                      begin
                        if BAnd(opp_bits_high,$00000008) <> 0 then { if plat[D5] = adversaire then }
                          begin
                            if BAnd(opp_bits_high,$00000004) <> 0 then { if plat[C5] = adversaire then }
                              begin
                                if BAnd(opp_bits_high,$00000002) <> 0 then { if plat[B5] = adversaire then }
                                  begin
                                    if BAnd(my_bits_high,$00000001) <> 0 then { if plat[A5] = couleur then }
                                      begin
                                        nbprise := nbprise + 12;
                                        my_bits_high := BOr(my_bits_high,$0000007E);
                                        opp_bits_high := BXOr(opp_bits_high,$0000007E);
                                      end;
                                  end
                                else
                                if BAnd(my_bits_high,$00000002) <> 0 then { if plat[B5] = couleur then }
                                  begin
                                    nbprise := nbprise + 10;
                                    my_bits_high := BOr(my_bits_high,$0000007C);
                                    opp_bits_high := BXOr(opp_bits_high,$0000007C);
                                  end;
                              end
                            else
                            if BAnd(my_bits_high,$00000004) <> 0 then { if plat[C5] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_high := BOr(my_bits_high,$00000078);
                                opp_bits_high := BXOr(opp_bits_high,$00000078);
                              end;
                          end
                        else
                        if BAnd(my_bits_high,$00000008) <> 0 then { if plat[D5] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_high := BOr(my_bits_high,$00000070);
                            opp_bits_high := BXOr(opp_bits_high,$00000070);
                          end;
                      end
                    else
                    if BAnd(my_bits_high,$00000010) <> 0 then { if plat[E5] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$00000060);
                        opp_bits_high := BXOr(opp_bits_high,$00000060);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00000020) <> 0 then { if plat[F5] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00000040);
                    opp_bits_high := BXOr(opp_bits_high,$00000040);
                  end;
              end;
            if BAnd(opp_bits_low,$40000000) <> 0 then { if plat[G4] = adversaire then }
              begin
                if BAnd(opp_bits_low,$00200000) <> 0 then { if plat[F3] = adversaire then }
                  begin
                    if BAnd(opp_bits_low,$00001000) <> 0 then { if plat[E2] = adversaire then }
                      begin
                        if BAnd(my_bits_low,$00000008) <> 0 then { if plat[D1] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$40201000);
                            opp_bits_low := BXOr(opp_bits_low,$40201000);
                          end;
                      end
                    else
                    if BAnd(my_bits_low,$00001000) <> 0 then { if plat[E2] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$40200000);
                        opp_bits_low := BXOr(opp_bits_low,$40200000);
                      end;
                  end
                else
                if BAnd(my_bits_low,$00200000) <> 0 then { if plat[F3] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$40000000);
                    opp_bits_low := BXOr(opp_bits_low,$40000000);
                  end;
              end;
            if BAnd(opp_bits_low,$80000000) <> 0 then { if plat[H4] = adversaire then }
              begin
                if BAnd(opp_bits_low,$00800000) <> 0 then { if plat[H3] = adversaire then }
                  begin
                    if BAnd(opp_bits_low,$00008000) <> 0 then { if plat[H2] = adversaire then }
                      begin
                        if BAnd(my_bits_low,$00000080) <> 0 then { if plat[H1] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$80808000);
                            opp_bits_low := BXOr(opp_bits_low,$80808000);
                          end;
                      end
                    else
                    if BAnd(my_bits_low,$00008000) <> 0 then { if plat[H2] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$80800000);
                        opp_bits_low := BXOr(opp_bits_low,$80800000);
                      end;
                  end
                else
                if BAnd(my_bits_low,$00800000) <> 0 then { if plat[H3] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_low := BOr(my_bits_low,$80000000);
                    opp_bits_low := BXOr(opp_bits_low,$80000000);
                  end;
              end;
            if (nbPrise <> 0)
              then
                begin
                  diffPions := succ(diffPions+nbprise);
                  ModifPlatBitboard := BXOr(vecteurParite,$00000008);
                  my_bits_high := BOr(my_bits_high,$00000080);  { place the disc in H5 }
                  g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
                  g_my_bits_high  := opp_bits_high;
                  g_opp_bits_low  := my_bits_low;
                  g_opp_bits_high := my_bits_high;
                end
              else
                ModifPlatBitboard := vecteurParite;
          end;
        61 :    { A6 }
          begin
            if BAnd(opp_bits_high,$00000001) <> 0 then { if plat[A5] = adversaire then }
              begin
                if BAnd(opp_bits_low,$01000000) <> 0 then { if plat[A4] = adversaire then }
                  begin
                    if BAnd(opp_bits_low,$00010000) <> 0 then { if plat[A3] = adversaire then }
                      begin
                        if BAnd(opp_bits_low,$00000100) <> 0 then { if plat[A2] = adversaire then }
                          begin
                            if BAnd(my_bits_low,$00000001) <> 0 then { if plat[A1] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$01010100);
                                opp_bits_low := BXOr(opp_bits_low,$01010100);
                                my_bits_high := BOr(my_bits_high,$00000001);
                                opp_bits_high := BXOr(opp_bits_high,$00000001);
                              end;
                          end
                        else
                        if BAnd(my_bits_low,$00000100) <> 0 then { if plat[A2] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$01010000);
                            opp_bits_low := BXOr(opp_bits_low,$01010000);
                            my_bits_high := BOr(my_bits_high,$00000001);
                            opp_bits_high := BXOr(opp_bits_high,$00000001);
                          end;
                      end
                    else
                    if BAnd(my_bits_low,$00010000) <> 0 then { if plat[A3] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$01000000);
                        opp_bits_low := BXOr(opp_bits_low,$01000000);
                        my_bits_high := BOr(my_bits_high,$00000001);
                        opp_bits_high := BXOr(opp_bits_high,$00000001);
                      end;
                  end
                else
                if BAnd(my_bits_low,$01000000) <> 0 then { if plat[A4] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00000001);
                    opp_bits_high := BXOr(opp_bits_high,$00000001);
                  end;
              end;
            if BAnd(opp_bits_high,$00000002) <> 0 then { if plat[B5] = adversaire then }
              begin
                if BAnd(opp_bits_low,$04000000) <> 0 then { if plat[C4] = adversaire then }
                  begin
                    if BAnd(opp_bits_low,$00080000) <> 0 then { if plat[D3] = adversaire then }
                      begin
                        if BAnd(opp_bits_low,$00001000) <> 0 then { if plat[E2] = adversaire then }
                          begin
                            if BAnd(my_bits_low,$00000020) <> 0 then { if plat[F1] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$04081000);
                                opp_bits_low := BXOr(opp_bits_low,$04081000);
                                my_bits_high := BOr(my_bits_high,$00000002);
                                opp_bits_high := BXOr(opp_bits_high,$00000002);
                              end;
                          end
                        else
                        if BAnd(my_bits_low,$00001000) <> 0 then { if plat[E2] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$04080000);
                            opp_bits_low := BXOr(opp_bits_low,$04080000);
                            my_bits_high := BOr(my_bits_high,$00000002);
                            opp_bits_high := BXOr(opp_bits_high,$00000002);
                          end;
                      end
                    else
                    if BAnd(my_bits_low,$00080000) <> 0 then { if plat[D3] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$04000000);
                        opp_bits_low := BXOr(opp_bits_low,$04000000);
                        my_bits_high := BOr(my_bits_high,$00000002);
                        opp_bits_high := BXOr(opp_bits_high,$00000002);
                      end;
                  end
                else
                if BAnd(my_bits_low,$04000000) <> 0 then { if plat[C4] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00000002);
                    opp_bits_high := BXOr(opp_bits_high,$00000002);
                  end;
              end;
            if BAnd(opp_bits_high,$00000200) <> 0 then { if plat[B6] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00000400) <> 0 then { if plat[C6] = adversaire then }
                  begin
                    if BAnd(opp_bits_high,$00000800) <> 0 then { if plat[D6] = adversaire then }
                      begin
                        if BAnd(opp_bits_high,$00001000) <> 0 then { if plat[E6] = adversaire then }
                          begin
                            if BAnd(opp_bits_high,$00002000) <> 0 then { if plat[F6] = adversaire then }
                              begin
                                if BAnd(opp_bits_high,$00004000) <> 0 then { if plat[G6] = adversaire then }
                                  begin
                                    if BAnd(my_bits_high,$00008000) <> 0 then { if plat[H6] = couleur then }
                                      begin
                                        nbprise := nbprise + 12;
                                        my_bits_high := BOr(my_bits_high,$00007E00);
                                        opp_bits_high := BXOr(opp_bits_high,$00007E00);
                                      end;
                                  end
                                else
                                if BAnd(my_bits_high,$00004000) <> 0 then { if plat[G6] = couleur then }
                                  begin
                                    nbprise := nbprise + 10;
                                    my_bits_high := BOr(my_bits_high,$00003E00);
                                    opp_bits_high := BXOr(opp_bits_high,$00003E00);
                                  end;
                              end
                            else
                            if BAnd(my_bits_high,$00002000) <> 0 then { if plat[F6] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_high := BOr(my_bits_high,$00001E00);
                                opp_bits_high := BXOr(opp_bits_high,$00001E00);
                              end;
                          end
                        else
                        if BAnd(my_bits_high,$00001000) <> 0 then { if plat[E6] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_high := BOr(my_bits_high,$00000E00);
                            opp_bits_high := BXOr(opp_bits_high,$00000E00);
                          end;
                      end
                    else
                    if BAnd(my_bits_high,$00000800) <> 0 then { if plat[D6] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$00000600);
                        opp_bits_high := BXOr(opp_bits_high,$00000600);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00000400) <> 0 then { if plat[C6] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00000200);
                    opp_bits_high := BXOr(opp_bits_high,$00000200);
                  end;
              end;
            if BAnd(opp_bits_high,$00020000) <> 0 then { if plat[B7] = adversaire then }
              begin
                if BAnd(my_bits_high,$04000000) <> 0 then { if plat[C8] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00020000);
                    opp_bits_high := BXOr(opp_bits_high,$00020000);
                  end;
              end;
            if BAnd(opp_bits_high,$00010000) <> 0 then { if plat[A7] = adversaire then }
              begin
                if BAnd(my_bits_high,$01000000) <> 0 then { if plat[A8] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00010000);
                    opp_bits_high := BXOr(opp_bits_high,$00010000);
                  end;
              end;
            if (nbPrise <> 0)
              then
                begin
                  diffPions := succ(diffPions+nbprise);
                  ModifPlatBitboard := BXOr(vecteurParite,$00000004);
                  my_bits_high := BOr(my_bits_high,$00000100);  { place the disc in A6 }
                  g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
                  g_my_bits_high  := opp_bits_high;
                  g_opp_bits_low  := my_bits_low;
                  g_opp_bits_high := my_bits_high;
                end
              else
                ModifPlatBitboard := vecteurParite;
          end;
        62 :    { B6 }
          begin
            if BAnd(opp_bits_high,$00000002) <> 0 then { if plat[B5] = adversaire then }
              begin
                if BAnd(opp_bits_low,$02000000) <> 0 then { if plat[B4] = adversaire then }
                  begin
                    if BAnd(opp_bits_low,$00020000) <> 0 then { if plat[B3] = adversaire then }
                      begin
                        if BAnd(opp_bits_low,$00000200) <> 0 then { if plat[B2] = adversaire then }
                          begin
                            if BAnd(my_bits_low,$00000002) <> 0 then { if plat[B1] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$02020200);
                                opp_bits_low := BXOr(opp_bits_low,$02020200);
                                my_bits_high := BOr(my_bits_high,$00000002);
                                opp_bits_high := BXOr(opp_bits_high,$00000002);
                              end;
                          end
                        else
                        if BAnd(my_bits_low,$00000200) <> 0 then { if plat[B2] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$02020000);
                            opp_bits_low := BXOr(opp_bits_low,$02020000);
                            my_bits_high := BOr(my_bits_high,$00000002);
                            opp_bits_high := BXOr(opp_bits_high,$00000002);
                          end;
                      end
                    else
                    if BAnd(my_bits_low,$00020000) <> 0 then { if plat[B3] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$02000000);
                        opp_bits_low := BXOr(opp_bits_low,$02000000);
                        my_bits_high := BOr(my_bits_high,$00000002);
                        opp_bits_high := BXOr(opp_bits_high,$00000002);
                      end;
                  end
                else
                if BAnd(my_bits_low,$02000000) <> 0 then { if plat[B4] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00000002);
                    opp_bits_high := BXOr(opp_bits_high,$00000002);
                  end;
              end;
            if BAnd(opp_bits_high,$00000004) <> 0 then { if plat[C5] = adversaire then }
              begin
                if BAnd(opp_bits_low,$08000000) <> 0 then { if plat[D4] = adversaire then }
                  begin
                    if BAnd(opp_bits_low,$00100000) <> 0 then { if plat[E3] = adversaire then }
                      begin
                        if BAnd(opp_bits_low,$00002000) <> 0 then { if plat[F2] = adversaire then }
                          begin
                            if BAnd(my_bits_low,$00000040) <> 0 then { if plat[G1] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$08102000);
                                opp_bits_low := BXOr(opp_bits_low,$08102000);
                                my_bits_high := BOr(my_bits_high,$00000004);
                                opp_bits_high := BXOr(opp_bits_high,$00000004);
                              end;
                          end
                        else
                        if BAnd(my_bits_low,$00002000) <> 0 then { if plat[F2] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$08100000);
                            opp_bits_low := BXOr(opp_bits_low,$08100000);
                            my_bits_high := BOr(my_bits_high,$00000004);
                            opp_bits_high := BXOr(opp_bits_high,$00000004);
                          end;
                      end
                    else
                    if BAnd(my_bits_low,$00100000) <> 0 then { if plat[E3] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$08000000);
                        opp_bits_low := BXOr(opp_bits_low,$08000000);
                        my_bits_high := BOr(my_bits_high,$00000004);
                        opp_bits_high := BXOr(opp_bits_high,$00000004);
                      end;
                  end
                else
                if BAnd(my_bits_low,$08000000) <> 0 then { if plat[D4] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00000004);
                    opp_bits_high := BXOr(opp_bits_high,$00000004);
                  end;
              end;
            if BAnd(opp_bits_high,$00000400) <> 0 then { if plat[C6] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00000800) <> 0 then { if plat[D6] = adversaire then }
                  begin
                    if BAnd(opp_bits_high,$00001000) <> 0 then { if plat[E6] = adversaire then }
                      begin
                        if BAnd(opp_bits_high,$00002000) <> 0 then { if plat[F6] = adversaire then }
                          begin
                            if BAnd(opp_bits_high,$00004000) <> 0 then { if plat[G6] = adversaire then }
                              begin
                                if BAnd(my_bits_high,$00008000) <> 0 then { if plat[H6] = couleur then }
                                  begin
                                    nbprise := nbprise + 10;
                                    my_bits_high := BOr(my_bits_high,$00007C00);
                                    opp_bits_high := BXOr(opp_bits_high,$00007C00);
                                  end;
                              end
                            else
                            if BAnd(my_bits_high,$00004000) <> 0 then { if plat[G6] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_high := BOr(my_bits_high,$00003C00);
                                opp_bits_high := BXOr(opp_bits_high,$00003C00);
                              end;
                          end
                        else
                        if BAnd(my_bits_high,$00002000) <> 0 then { if plat[F6] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_high := BOr(my_bits_high,$00001C00);
                            opp_bits_high := BXOr(opp_bits_high,$00001C00);
                          end;
                      end
                    else
                    if BAnd(my_bits_high,$00001000) <> 0 then { if plat[E6] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$00000C00);
                        opp_bits_high := BXOr(opp_bits_high,$00000C00);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00000800) <> 0 then { if plat[D6] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00000400);
                    opp_bits_high := BXOr(opp_bits_high,$00000400);
                  end;
              end;
            if BAnd(opp_bits_high,$00040000) <> 0 then { if plat[C7] = adversaire then }
              begin
                if BAnd(my_bits_high,$08000000) <> 0 then { if plat[D8] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00040000);
                    opp_bits_high := BXOr(opp_bits_high,$00040000);
                  end;
              end;
            if BAnd(opp_bits_high,$00020000) <> 0 then { if plat[B7] = adversaire then }
              begin
                if BAnd(my_bits_high,$02000000) <> 0 then { if plat[B8] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00020000);
                    opp_bits_high := BXOr(opp_bits_high,$00020000);
                  end;
              end;
            if (nbPrise <> 0)
              then
                begin
                  diffPions := succ(diffPions+nbprise);
                  ModifPlatBitboard := BXOr(vecteurParite,$00000004);
                  my_bits_high := BOr(my_bits_high,$00000200);  { place the disc in B6 }
                  g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
                  g_my_bits_high  := opp_bits_high;
                  g_opp_bits_low  := my_bits_low;
                  g_opp_bits_high := my_bits_high;
                end
              else
                ModifPlatBitboard := vecteurParite;
          end;
        63 :    { C6 }
          begin
            if BAnd(opp_bits_high,$00000002) <> 0 then { if plat[B5] = adversaire then }
              begin
                if BAnd(my_bits_low,$01000000) <> 0 then { if plat[A4] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00000002);
                    opp_bits_high := BXOr(opp_bits_high,$00000002);
                  end;
              end;
            if BAnd(opp_bits_high,$00000004) <> 0 then { if plat[C5] = adversaire then }
              begin
                if BAnd(opp_bits_low,$04000000) <> 0 then { if plat[C4] = adversaire then }
                  begin
                    if BAnd(opp_bits_low,$00040000) <> 0 then { if plat[C3] = adversaire then }
                      begin
                        if BAnd(opp_bits_low,$00000400) <> 0 then { if plat[C2] = adversaire then }
                          begin
                            if BAnd(my_bits_low,$00000004) <> 0 then { if plat[C1] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$04040400);
                                opp_bits_low := BXOr(opp_bits_low,$04040400);
                                my_bits_high := BOr(my_bits_high,$00000004);
                                opp_bits_high := BXOr(opp_bits_high,$00000004);
                              end;
                          end
                        else
                        if BAnd(my_bits_low,$00000400) <> 0 then { if plat[C2] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$04040000);
                            opp_bits_low := BXOr(opp_bits_low,$04040000);
                            my_bits_high := BOr(my_bits_high,$00000004);
                            opp_bits_high := BXOr(opp_bits_high,$00000004);
                          end;
                      end
                    else
                    if BAnd(my_bits_low,$00040000) <> 0 then { if plat[C3] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$04000000);
                        opp_bits_low := BXOr(opp_bits_low,$04000000);
                        my_bits_high := BOr(my_bits_high,$00000004);
                        opp_bits_high := BXOr(opp_bits_high,$00000004);
                      end;
                  end
                else
                if BAnd(my_bits_low,$04000000) <> 0 then { if plat[C4] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00000004);
                    opp_bits_high := BXOr(opp_bits_high,$00000004);
                  end;
              end;
            if BAnd(opp_bits_high,$00000008) <> 0 then { if plat[D5] = adversaire then }
              begin
                if BAnd(opp_bits_low,$10000000) <> 0 then { if plat[E4] = adversaire then }
                  begin
                    if BAnd(opp_bits_low,$00200000) <> 0 then { if plat[F3] = adversaire then }
                      begin
                        if BAnd(opp_bits_low,$00004000) <> 0 then { if plat[G2] = adversaire then }
                          begin
                            if BAnd(my_bits_low,$00000080) <> 0 then { if plat[H1] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$10204000);
                                opp_bits_low := BXOr(opp_bits_low,$10204000);
                                my_bits_high := BOr(my_bits_high,$00000008);
                                opp_bits_high := BXOr(opp_bits_high,$00000008);
                              end;
                          end
                        else
                        if BAnd(my_bits_low,$00004000) <> 0 then { if plat[G2] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$10200000);
                            opp_bits_low := BXOr(opp_bits_low,$10200000);
                            my_bits_high := BOr(my_bits_high,$00000008);
                            opp_bits_high := BXOr(opp_bits_high,$00000008);
                          end;
                      end
                    else
                    if BAnd(my_bits_low,$00200000) <> 0 then { if plat[F3] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$10000000);
                        opp_bits_low := BXOr(opp_bits_low,$10000000);
                        my_bits_high := BOr(my_bits_high,$00000008);
                        opp_bits_high := BXOr(opp_bits_high,$00000008);
                      end;
                  end
                else
                if BAnd(my_bits_low,$10000000) <> 0 then { if plat[E4] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00000008);
                    opp_bits_high := BXOr(opp_bits_high,$00000008);
                  end;
              end;
            if BAnd(opp_bits_high,$00000800) <> 0 then { if plat[D6] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00001000) <> 0 then { if plat[E6] = adversaire then }
                  begin
                    if BAnd(opp_bits_high,$00002000) <> 0 then { if plat[F6] = adversaire then }
                      begin
                        if BAnd(opp_bits_high,$00004000) <> 0 then { if plat[G6] = adversaire then }
                          begin
                            if BAnd(my_bits_high,$00008000) <> 0 then { if plat[H6] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_high := BOr(my_bits_high,$00007800);
                                opp_bits_high := BXOr(opp_bits_high,$00007800);
                              end;
                          end
                        else
                        if BAnd(my_bits_high,$00004000) <> 0 then { if plat[G6] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_high := BOr(my_bits_high,$00003800);
                            opp_bits_high := BXOr(opp_bits_high,$00003800);
                          end;
                      end
                    else
                    if BAnd(my_bits_high,$00002000) <> 0 then { if plat[F6] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$00001800);
                        opp_bits_high := BXOr(opp_bits_high,$00001800);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00001000) <> 0 then { if plat[E6] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00000800);
                    opp_bits_high := BXOr(opp_bits_high,$00000800);
                  end;
              end;
            if BAnd(opp_bits_high,$00080000) <> 0 then { if plat[D7] = adversaire then }
              begin
                if BAnd(my_bits_high,$10000000) <> 0 then { if plat[E8] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00080000);
                    opp_bits_high := BXOr(opp_bits_high,$00080000);
                  end;
              end;
            if BAnd(opp_bits_high,$00040000) <> 0 then { if plat[C7] = adversaire then }
              begin
                if BAnd(my_bits_high,$04000000) <> 0 then { if plat[C8] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00040000);
                    opp_bits_high := BXOr(opp_bits_high,$00040000);
                  end;
              end;
            if BAnd(opp_bits_high,$00020000) <> 0 then { if plat[B7] = adversaire then }
              begin
                if BAnd(my_bits_high,$01000000) <> 0 then { if plat[A8] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00020000);
                    opp_bits_high := BXOr(opp_bits_high,$00020000);
                  end;
              end;
            if BAnd(opp_bits_high,$00000200) <> 0 then { if plat[B6] = adversaire then }
              begin
                if BAnd(my_bits_high,$00000100) <> 0 then { if plat[A6] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00000200);
                    opp_bits_high := BXOr(opp_bits_high,$00000200);
                  end;
              end;
            if (nbPrise <> 0)
              then
                begin
                  diffPions := succ(diffPions+nbprise);
                  ModifPlatBitboard := BXOr(vecteurParite,$00000004);
                  my_bits_high := BOr(my_bits_high,$00000400);  { place the disc in C6 }
                  g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
                  g_my_bits_high  := opp_bits_high;
                  g_opp_bits_low  := my_bits_low;
                  g_opp_bits_high := my_bits_high;
                end
              else
                ModifPlatBitboard := vecteurParite;
          end;
        64 :    { D6 }
          begin
            if BAnd(opp_bits_high,$00000004) <> 0 then { if plat[C5] = adversaire then }
              begin
                if BAnd(opp_bits_low,$02000000) <> 0 then { if plat[B4] = adversaire then }
                  begin
                    if BAnd(my_bits_low,$00010000) <> 0 then { if plat[A3] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$02000000);
                        opp_bits_low := BXOr(opp_bits_low,$02000000);
                        my_bits_high := BOr(my_bits_high,$00000004);
                        opp_bits_high := BXOr(opp_bits_high,$00000004);
                      end;
                  end
                else
                if BAnd(my_bits_low,$02000000) <> 0 then { if plat[B4] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00000004);
                    opp_bits_high := BXOr(opp_bits_high,$00000004);
                  end;
              end;
            if BAnd(opp_bits_high,$00000008) <> 0 then { if plat[D5] = adversaire then }
              begin
                if BAnd(opp_bits_low,$08000000) <> 0 then { if plat[D4] = adversaire then }
                  begin
                    if BAnd(opp_bits_low,$00080000) <> 0 then { if plat[D3] = adversaire then }
                      begin
                        if BAnd(opp_bits_low,$00000800) <> 0 then { if plat[D2] = adversaire then }
                          begin
                            if BAnd(my_bits_low,$00000008) <> 0 then { if plat[D1] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$08080800);
                                opp_bits_low := BXOr(opp_bits_low,$08080800);
                                my_bits_high := BOr(my_bits_high,$00000008);
                                opp_bits_high := BXOr(opp_bits_high,$00000008);
                              end;
                          end
                        else
                        if BAnd(my_bits_low,$00000800) <> 0 then { if plat[D2] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$08080000);
                            opp_bits_low := BXOr(opp_bits_low,$08080000);
                            my_bits_high := BOr(my_bits_high,$00000008);
                            opp_bits_high := BXOr(opp_bits_high,$00000008);
                          end;
                      end
                    else
                    if BAnd(my_bits_low,$00080000) <> 0 then { if plat[D3] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$08000000);
                        opp_bits_low := BXOr(opp_bits_low,$08000000);
                        my_bits_high := BOr(my_bits_high,$00000008);
                        opp_bits_high := BXOr(opp_bits_high,$00000008);
                      end;
                  end
                else
                if BAnd(my_bits_low,$08000000) <> 0 then { if plat[D4] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00000008);
                    opp_bits_high := BXOr(opp_bits_high,$00000008);
                  end;
              end;
            if BAnd(opp_bits_high,$00000010) <> 0 then { if plat[E5] = adversaire then }
              begin
                if BAnd(opp_bits_low,$20000000) <> 0 then { if plat[F4] = adversaire then }
                  begin
                    if BAnd(opp_bits_low,$00400000) <> 0 then { if plat[G3] = adversaire then }
                      begin
                        if BAnd(my_bits_low,$00008000) <> 0 then { if plat[H2] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$20400000);
                            opp_bits_low := BXOr(opp_bits_low,$20400000);
                            my_bits_high := BOr(my_bits_high,$00000010);
                            opp_bits_high := BXOr(opp_bits_high,$00000010);
                          end;
                      end
                    else
                    if BAnd(my_bits_low,$00400000) <> 0 then { if plat[G3] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$20000000);
                        opp_bits_low := BXOr(opp_bits_low,$20000000);
                        my_bits_high := BOr(my_bits_high,$00000010);
                        opp_bits_high := BXOr(opp_bits_high,$00000010);
                      end;
                  end
                else
                if BAnd(my_bits_low,$20000000) <> 0 then { if plat[F4] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00000010);
                    opp_bits_high := BXOr(opp_bits_high,$00000010);
                  end;
              end;
            if BAnd(opp_bits_high,$00001000) <> 0 then { if plat[E6] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00002000) <> 0 then { if plat[F6] = adversaire then }
                  begin
                    if BAnd(opp_bits_high,$00004000) <> 0 then { if plat[G6] = adversaire then }
                      begin
                        if BAnd(my_bits_high,$00008000) <> 0 then { if plat[H6] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_high := BOr(my_bits_high,$00007000);
                            opp_bits_high := BXOr(opp_bits_high,$00007000);
                          end;
                      end
                    else
                    if BAnd(my_bits_high,$00004000) <> 0 then { if plat[G6] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$00003000);
                        opp_bits_high := BXOr(opp_bits_high,$00003000);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00002000) <> 0 then { if plat[F6] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00001000);
                    opp_bits_high := BXOr(opp_bits_high,$00001000);
                  end;
              end;
            if BAnd(opp_bits_high,$00100000) <> 0 then { if plat[E7] = adversaire then }
              begin
                if BAnd(my_bits_high,$20000000) <> 0 then { if plat[F8] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00100000);
                    opp_bits_high := BXOr(opp_bits_high,$00100000);
                  end;
              end;
            if BAnd(opp_bits_high,$00080000) <> 0 then { if plat[D7] = adversaire then }
              begin
                if BAnd(my_bits_high,$08000000) <> 0 then { if plat[D8] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00080000);
                    opp_bits_high := BXOr(opp_bits_high,$00080000);
                  end;
              end;
            if BAnd(opp_bits_high,$00040000) <> 0 then { if plat[C7] = adversaire then }
              begin
                if BAnd(my_bits_high,$02000000) <> 0 then { if plat[B8] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00040000);
                    opp_bits_high := BXOr(opp_bits_high,$00040000);
                  end;
              end;
            if BAnd(opp_bits_high,$00000400) <> 0 then { if plat[C6] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00000200) <> 0 then { if plat[B6] = adversaire then }
                  begin
                    if BAnd(my_bits_high,$00000100) <> 0 then { if plat[A6] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$00000600);
                        opp_bits_high := BXOr(opp_bits_high,$00000600);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00000200) <> 0 then { if plat[B6] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00000400);
                    opp_bits_high := BXOr(opp_bits_high,$00000400);
                  end;
              end;
            if (nbPrise <> 0)
              then
                begin
                  diffPions := succ(diffPions+nbprise);
                  ModifPlatBitboard := BXOr(vecteurParite,$00000004);
                  my_bits_high := BOr(my_bits_high,$00000800);  { place the disc in D6 }
                  g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
                  g_my_bits_high  := opp_bits_high;
                  g_opp_bits_low  := my_bits_low;
                  g_opp_bits_high := my_bits_high;
                end
              else
                ModifPlatBitboard := vecteurParite;
          end;
        65 :    { E6 }
          begin
            if BAnd(opp_bits_high,$00000008) <> 0 then { if plat[D5] = adversaire then }
              begin
                if BAnd(opp_bits_low,$04000000) <> 0 then { if plat[C4] = adversaire then }
                  begin
                    if BAnd(opp_bits_low,$00020000) <> 0 then { if plat[B3] = adversaire then }
                      begin
                        if BAnd(my_bits_low,$00000100) <> 0 then { if plat[A2] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$04020000);
                            opp_bits_low := BXOr(opp_bits_low,$04020000);
                            my_bits_high := BOr(my_bits_high,$00000008);
                            opp_bits_high := BXOr(opp_bits_high,$00000008);
                          end;
                      end
                    else
                    if BAnd(my_bits_low,$00020000) <> 0 then { if plat[B3] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$04000000);
                        opp_bits_low := BXOr(opp_bits_low,$04000000);
                        my_bits_high := BOr(my_bits_high,$00000008);
                        opp_bits_high := BXOr(opp_bits_high,$00000008);
                      end;
                  end
                else
                if BAnd(my_bits_low,$04000000) <> 0 then { if plat[C4] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00000008);
                    opp_bits_high := BXOr(opp_bits_high,$00000008);
                  end;
              end;
            if BAnd(opp_bits_high,$00000010) <> 0 then { if plat[E5] = adversaire then }
              begin
                if BAnd(opp_bits_low,$10000000) <> 0 then { if plat[E4] = adversaire then }
                  begin
                    if BAnd(opp_bits_low,$00100000) <> 0 then { if plat[E3] = adversaire then }
                      begin
                        if BAnd(opp_bits_low,$00001000) <> 0 then { if plat[E2] = adversaire then }
                          begin
                            if BAnd(my_bits_low,$00000010) <> 0 then { if plat[E1] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$10101000);
                                opp_bits_low := BXOr(opp_bits_low,$10101000);
                                my_bits_high := BOr(my_bits_high,$00000010);
                                opp_bits_high := BXOr(opp_bits_high,$00000010);
                              end;
                          end
                        else
                        if BAnd(my_bits_low,$00001000) <> 0 then { if plat[E2] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$10100000);
                            opp_bits_low := BXOr(opp_bits_low,$10100000);
                            my_bits_high := BOr(my_bits_high,$00000010);
                            opp_bits_high := BXOr(opp_bits_high,$00000010);
                          end;
                      end
                    else
                    if BAnd(my_bits_low,$00100000) <> 0 then { if plat[E3] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$10000000);
                        opp_bits_low := BXOr(opp_bits_low,$10000000);
                        my_bits_high := BOr(my_bits_high,$00000010);
                        opp_bits_high := BXOr(opp_bits_high,$00000010);
                      end;
                  end
                else
                if BAnd(my_bits_low,$10000000) <> 0 then { if plat[E4] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00000010);
                    opp_bits_high := BXOr(opp_bits_high,$00000010);
                  end;
              end;
            if BAnd(opp_bits_high,$00000020) <> 0 then { if plat[F5] = adversaire then }
              begin
                if BAnd(opp_bits_low,$40000000) <> 0 then { if plat[G4] = adversaire then }
                  begin
                    if BAnd(my_bits_low,$00800000) <> 0 then { if plat[H3] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$40000000);
                        opp_bits_low := BXOr(opp_bits_low,$40000000);
                        my_bits_high := BOr(my_bits_high,$00000020);
                        opp_bits_high := BXOr(opp_bits_high,$00000020);
                      end;
                  end
                else
                if BAnd(my_bits_low,$40000000) <> 0 then { if plat[G4] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00000020);
                    opp_bits_high := BXOr(opp_bits_high,$00000020);
                  end;
              end;
            if BAnd(opp_bits_high,$00002000) <> 0 then { if plat[F6] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00004000) <> 0 then { if plat[G6] = adversaire then }
                  begin
                    if BAnd(my_bits_high,$00008000) <> 0 then { if plat[H6] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$00006000);
                        opp_bits_high := BXOr(opp_bits_high,$00006000);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00004000) <> 0 then { if plat[G6] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00002000);
                    opp_bits_high := BXOr(opp_bits_high,$00002000);
                  end;
              end;
            if BAnd(opp_bits_high,$00200000) <> 0 then { if plat[F7] = adversaire then }
              begin
                if BAnd(my_bits_high,$40000000) <> 0 then { if plat[G8] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00200000);
                    opp_bits_high := BXOr(opp_bits_high,$00200000);
                  end;
              end;
            if BAnd(opp_bits_high,$00100000) <> 0 then { if plat[E7] = adversaire then }
              begin
                if BAnd(my_bits_high,$10000000) <> 0 then { if plat[E8] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00100000);
                    opp_bits_high := BXOr(opp_bits_high,$00100000);
                  end;
              end;
            if BAnd(opp_bits_high,$00080000) <> 0 then { if plat[D7] = adversaire then }
              begin
                if BAnd(my_bits_high,$04000000) <> 0 then { if plat[C8] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00080000);
                    opp_bits_high := BXOr(opp_bits_high,$00080000);
                  end;
              end;
            if BAnd(opp_bits_high,$00000800) <> 0 then { if plat[D6] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00000400) <> 0 then { if plat[C6] = adversaire then }
                  begin
                    if BAnd(opp_bits_high,$00000200) <> 0 then { if plat[B6] = adversaire then }
                      begin
                        if BAnd(my_bits_high,$00000100) <> 0 then { if plat[A6] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_high := BOr(my_bits_high,$00000E00);
                            opp_bits_high := BXOr(opp_bits_high,$00000E00);
                          end;
                      end
                    else
                    if BAnd(my_bits_high,$00000200) <> 0 then { if plat[B6] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$00000C00);
                        opp_bits_high := BXOr(opp_bits_high,$00000C00);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00000400) <> 0 then { if plat[C6] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00000800);
                    opp_bits_high := BXOr(opp_bits_high,$00000800);
                  end;
              end;
            if (nbPrise <> 0)
              then
                begin
                  diffPions := succ(diffPions+nbprise);
                  ModifPlatBitboard := BXOr(vecteurParite,$00000008);
                  my_bits_high := BOr(my_bits_high,$00001000);  { place the disc in E6 }
                  g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
                  g_my_bits_high  := opp_bits_high;
                  g_opp_bits_low  := my_bits_low;
                  g_opp_bits_high := my_bits_high;
                end
              else
                ModifPlatBitboard := vecteurParite;
          end;
        66 :    { F6 }
          begin
            if BAnd(opp_bits_high,$00000010) <> 0 then { if plat[E5] = adversaire then }
              begin
                if BAnd(opp_bits_low,$08000000) <> 0 then { if plat[D4] = adversaire then }
                  begin
                    if BAnd(opp_bits_low,$00040000) <> 0 then { if plat[C3] = adversaire then }
                      begin
                        if BAnd(opp_bits_low,$00000200) <> 0 then { if plat[B2] = adversaire then }
                          begin
                            if BAnd(my_bits_low,$00000001) <> 0 then { if plat[A1] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$08040200);
                                opp_bits_low := BXOr(opp_bits_low,$08040200);
                                my_bits_high := BOr(my_bits_high,$00000010);
                                opp_bits_high := BXOr(opp_bits_high,$00000010);
                              end;
                          end
                        else
                        if BAnd(my_bits_low,$00000200) <> 0 then { if plat[B2] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$08040000);
                            opp_bits_low := BXOr(opp_bits_low,$08040000);
                            my_bits_high := BOr(my_bits_high,$00000010);
                            opp_bits_high := BXOr(opp_bits_high,$00000010);
                          end;
                      end
                    else
                    if BAnd(my_bits_low,$00040000) <> 0 then { if plat[C3] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$08000000);
                        opp_bits_low := BXOr(opp_bits_low,$08000000);
                        my_bits_high := BOr(my_bits_high,$00000010);
                        opp_bits_high := BXOr(opp_bits_high,$00000010);
                      end;
                  end
                else
                if BAnd(my_bits_low,$08000000) <> 0 then { if plat[D4] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00000010);
                    opp_bits_high := BXOr(opp_bits_high,$00000010);
                  end;
              end;
            if BAnd(opp_bits_high,$00000020) <> 0 then { if plat[F5] = adversaire then }
              begin
                if BAnd(opp_bits_low,$20000000) <> 0 then { if plat[F4] = adversaire then }
                  begin
                    if BAnd(opp_bits_low,$00200000) <> 0 then { if plat[F3] = adversaire then }
                      begin
                        if BAnd(opp_bits_low,$00002000) <> 0 then { if plat[F2] = adversaire then }
                          begin
                            if BAnd(my_bits_low,$00000020) <> 0 then { if plat[F1] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$20202000);
                                opp_bits_low := BXOr(opp_bits_low,$20202000);
                                my_bits_high := BOr(my_bits_high,$00000020);
                                opp_bits_high := BXOr(opp_bits_high,$00000020);
                              end;
                          end
                        else
                        if BAnd(my_bits_low,$00002000) <> 0 then { if plat[F2] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$20200000);
                            opp_bits_low := BXOr(opp_bits_low,$20200000);
                            my_bits_high := BOr(my_bits_high,$00000020);
                            opp_bits_high := BXOr(opp_bits_high,$00000020);
                          end;
                      end
                    else
                    if BAnd(my_bits_low,$00200000) <> 0 then { if plat[F3] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$20000000);
                        opp_bits_low := BXOr(opp_bits_low,$20000000);
                        my_bits_high := BOr(my_bits_high,$00000020);
                        opp_bits_high := BXOr(opp_bits_high,$00000020);
                      end;
                  end
                else
                if BAnd(my_bits_low,$20000000) <> 0 then { if plat[F4] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00000020);
                    opp_bits_high := BXOr(opp_bits_high,$00000020);
                  end;
              end;
            if BAnd(opp_bits_high,$00000040) <> 0 then { if plat[G5] = adversaire then }
              begin
                if BAnd(my_bits_low,$80000000) <> 0 then { if plat[H4] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00000040);
                    opp_bits_high := BXOr(opp_bits_high,$00000040);
                  end;
              end;
            if BAnd(opp_bits_high,$00004000) <> 0 then { if plat[G6] = adversaire then }
              begin
                if BAnd(my_bits_high,$00008000) <> 0 then { if plat[H6] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00004000);
                    opp_bits_high := BXOr(opp_bits_high,$00004000);
                  end;
              end;
            if BAnd(opp_bits_high,$00400000) <> 0 then { if plat[G7] = adversaire then }
              begin
                if BAnd(my_bits_high,$80000000) <> 0 then { if plat[H8] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00400000);
                    opp_bits_high := BXOr(opp_bits_high,$00400000);
                  end;
              end;
            if BAnd(opp_bits_high,$00200000) <> 0 then { if plat[F7] = adversaire then }
              begin
                if BAnd(my_bits_high,$20000000) <> 0 then { if plat[F8] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00200000);
                    opp_bits_high := BXOr(opp_bits_high,$00200000);
                  end;
              end;
            if BAnd(opp_bits_high,$00100000) <> 0 then { if plat[E7] = adversaire then }
              begin
                if BAnd(my_bits_high,$08000000) <> 0 then { if plat[D8] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00100000);
                    opp_bits_high := BXOr(opp_bits_high,$00100000);
                  end;
              end;
            if BAnd(opp_bits_high,$00001000) <> 0 then { if plat[E6] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00000800) <> 0 then { if plat[D6] = adversaire then }
                  begin
                    if BAnd(opp_bits_high,$00000400) <> 0 then { if plat[C6] = adversaire then }
                      begin
                        if BAnd(opp_bits_high,$00000200) <> 0 then { if plat[B6] = adversaire then }
                          begin
                            if BAnd(my_bits_high,$00000100) <> 0 then { if plat[A6] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_high := BOr(my_bits_high,$00001E00);
                                opp_bits_high := BXOr(opp_bits_high,$00001E00);
                              end;
                          end
                        else
                        if BAnd(my_bits_high,$00000200) <> 0 then { if plat[B6] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_high := BOr(my_bits_high,$00001C00);
                            opp_bits_high := BXOr(opp_bits_high,$00001C00);
                          end;
                      end
                    else
                    if BAnd(my_bits_high,$00000400) <> 0 then { if plat[C6] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$00001800);
                        opp_bits_high := BXOr(opp_bits_high,$00001800);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00000800) <> 0 then { if plat[D6] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00001000);
                    opp_bits_high := BXOr(opp_bits_high,$00001000);
                  end;
              end;
            if (nbPrise <> 0)
              then
                begin
                  diffPions := succ(diffPions+nbprise);
                  ModifPlatBitboard := BXOr(vecteurParite,$00000008);
                  my_bits_high := BOr(my_bits_high,$00002000);  { place the disc in F6 }
                  g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
                  g_my_bits_high  := opp_bits_high;
                  g_opp_bits_low  := my_bits_low;
                  g_opp_bits_high := my_bits_high;
                end
              else
                ModifPlatBitboard := vecteurParite;
          end;
        67 :    { G6 }
          begin
            if BAnd(opp_bits_high,$00400000) <> 0 then { if plat[G7] = adversaire then }
              begin
                if BAnd(my_bits_high,$40000000) <> 0 then { if plat[G8] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00400000);
                    opp_bits_high := BXOr(opp_bits_high,$00400000);
                  end;
              end;
            if BAnd(opp_bits_high,$00200000) <> 0 then { if plat[F7] = adversaire then }
              begin
                if BAnd(my_bits_high,$10000000) <> 0 then { if plat[E8] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00200000);
                    opp_bits_high := BXOr(opp_bits_high,$00200000);
                  end;
              end;
            if BAnd(opp_bits_high,$00002000) <> 0 then { if plat[F6] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00001000) <> 0 then { if plat[E6] = adversaire then }
                  begin
                    if BAnd(opp_bits_high,$00000800) <> 0 then { if plat[D6] = adversaire then }
                      begin
                        if BAnd(opp_bits_high,$00000400) <> 0 then { if plat[C6] = adversaire then }
                          begin
                            if BAnd(opp_bits_high,$00000200) <> 0 then { if plat[B6] = adversaire then }
                              begin
                                if BAnd(my_bits_high,$00000100) <> 0 then { if plat[A6] = couleur then }
                                  begin
                                    nbprise := nbprise + 10;
                                    my_bits_high := BOr(my_bits_high,$00003E00);
                                    opp_bits_high := BXOr(opp_bits_high,$00003E00);
                                  end;
                              end
                            else
                            if BAnd(my_bits_high,$00000200) <> 0 then { if plat[B6] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_high := BOr(my_bits_high,$00003C00);
                                opp_bits_high := BXOr(opp_bits_high,$00003C00);
                              end;
                          end
                        else
                        if BAnd(my_bits_high,$00000400) <> 0 then { if plat[C6] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_high := BOr(my_bits_high,$00003800);
                            opp_bits_high := BXOr(opp_bits_high,$00003800);
                          end;
                      end
                    else
                    if BAnd(my_bits_high,$00000800) <> 0 then { if plat[D6] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$00003000);
                        opp_bits_high := BXOr(opp_bits_high,$00003000);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00001000) <> 0 then { if plat[E6] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00002000);
                    opp_bits_high := BXOr(opp_bits_high,$00002000);
                  end;
              end;
            if BAnd(opp_bits_high,$00000020) <> 0 then { if plat[F5] = adversaire then }
              begin
                if BAnd(opp_bits_low,$10000000) <> 0 then { if plat[E4] = adversaire then }
                  begin
                    if BAnd(opp_bits_low,$00080000) <> 0 then { if plat[D3] = adversaire then }
                      begin
                        if BAnd(opp_bits_low,$00000400) <> 0 then { if plat[C2] = adversaire then }
                          begin
                            if BAnd(my_bits_low,$00000002) <> 0 then { if plat[B1] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$10080400);
                                opp_bits_low := BXOr(opp_bits_low,$10080400);
                                my_bits_high := BOr(my_bits_high,$00000020);
                                opp_bits_high := BXOr(opp_bits_high,$00000020);
                              end;
                          end
                        else
                        if BAnd(my_bits_low,$00000400) <> 0 then { if plat[C2] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$10080000);
                            opp_bits_low := BXOr(opp_bits_low,$10080000);
                            my_bits_high := BOr(my_bits_high,$00000020);
                            opp_bits_high := BXOr(opp_bits_high,$00000020);
                          end;
                      end
                    else
                    if BAnd(my_bits_low,$00080000) <> 0 then { if plat[D3] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$10000000);
                        opp_bits_low := BXOr(opp_bits_low,$10000000);
                        my_bits_high := BOr(my_bits_high,$00000020);
                        opp_bits_high := BXOr(opp_bits_high,$00000020);
                      end;
                  end
                else
                if BAnd(my_bits_low,$10000000) <> 0 then { if plat[E4] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00000020);
                    opp_bits_high := BXOr(opp_bits_high,$00000020);
                  end;
              end;
            if BAnd(opp_bits_high,$00000040) <> 0 then { if plat[G5] = adversaire then }
              begin
                if BAnd(opp_bits_low,$40000000) <> 0 then { if plat[G4] = adversaire then }
                  begin
                    if BAnd(opp_bits_low,$00400000) <> 0 then { if plat[G3] = adversaire then }
                      begin
                        if BAnd(opp_bits_low,$00004000) <> 0 then { if plat[G2] = adversaire then }
                          begin
                            if BAnd(my_bits_low,$00000040) <> 0 then { if plat[G1] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$40404000);
                                opp_bits_low := BXOr(opp_bits_low,$40404000);
                                my_bits_high := BOr(my_bits_high,$00000040);
                                opp_bits_high := BXOr(opp_bits_high,$00000040);
                              end;
                          end
                        else
                        if BAnd(my_bits_low,$00004000) <> 0 then { if plat[G2] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$40400000);
                            opp_bits_low := BXOr(opp_bits_low,$40400000);
                            my_bits_high := BOr(my_bits_high,$00000040);
                            opp_bits_high := BXOr(opp_bits_high,$00000040);
                          end;
                      end
                    else
                    if BAnd(my_bits_low,$00400000) <> 0 then { if plat[G3] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$40000000);
                        opp_bits_low := BXOr(opp_bits_low,$40000000);
                        my_bits_high := BOr(my_bits_high,$00000040);
                        opp_bits_high := BXOr(opp_bits_high,$00000040);
                      end;
                  end
                else
                if BAnd(my_bits_low,$40000000) <> 0 then { if plat[G4] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00000040);
                    opp_bits_high := BXOr(opp_bits_high,$00000040);
                  end;
              end;
            if (nbPrise <> 0)
              then
                begin
                  diffPions := succ(diffPions+nbprise);
                  ModifPlatBitboard := BXOr(vecteurParite,$00000008);
                  my_bits_high := BOr(my_bits_high,$00004000);  { place the disc in G6 }
                  g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
                  g_my_bits_high  := opp_bits_high;
                  g_opp_bits_low  := my_bits_low;
                  g_opp_bits_high := my_bits_high;
                end
              else
                ModifPlatBitboard := vecteurParite;
          end;
        68 :    { H6 }
          begin
            if BAnd(opp_bits_high,$00800000) <> 0 then { if plat[H7] = adversaire then }
              begin
                if BAnd(my_bits_high,$80000000) <> 0 then { if plat[H8] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00800000);
                    opp_bits_high := BXOr(opp_bits_high,$00800000);
                  end;
              end;
            if BAnd(opp_bits_high,$00400000) <> 0 then { if plat[G7] = adversaire then }
              begin
                if BAnd(my_bits_high,$20000000) <> 0 then { if plat[F8] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00400000);
                    opp_bits_high := BXOr(opp_bits_high,$00400000);
                  end;
              end;
            if BAnd(opp_bits_high,$00004000) <> 0 then { if plat[G6] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00002000) <> 0 then { if plat[F6] = adversaire then }
                  begin
                    if BAnd(opp_bits_high,$00001000) <> 0 then { if plat[E6] = adversaire then }
                      begin
                        if BAnd(opp_bits_high,$00000800) <> 0 then { if plat[D6] = adversaire then }
                          begin
                            if BAnd(opp_bits_high,$00000400) <> 0 then { if plat[C6] = adversaire then }
                              begin
                                if BAnd(opp_bits_high,$00000200) <> 0 then { if plat[B6] = adversaire then }
                                  begin
                                    if BAnd(my_bits_high,$00000100) <> 0 then { if plat[A6] = couleur then }
                                      begin
                                        nbprise := nbprise + 12;
                                        my_bits_high := BOr(my_bits_high,$00007E00);
                                        opp_bits_high := BXOr(opp_bits_high,$00007E00);
                                      end;
                                  end
                                else
                                if BAnd(my_bits_high,$00000200) <> 0 then { if plat[B6] = couleur then }
                                  begin
                                    nbprise := nbprise + 10;
                                    my_bits_high := BOr(my_bits_high,$00007C00);
                                    opp_bits_high := BXOr(opp_bits_high,$00007C00);
                                  end;
                              end
                            else
                            if BAnd(my_bits_high,$00000400) <> 0 then { if plat[C6] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_high := BOr(my_bits_high,$00007800);
                                opp_bits_high := BXOr(opp_bits_high,$00007800);
                              end;
                          end
                        else
                        if BAnd(my_bits_high,$00000800) <> 0 then { if plat[D6] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_high := BOr(my_bits_high,$00007000);
                            opp_bits_high := BXOr(opp_bits_high,$00007000);
                          end;
                      end
                    else
                    if BAnd(my_bits_high,$00001000) <> 0 then { if plat[E6] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$00006000);
                        opp_bits_high := BXOr(opp_bits_high,$00006000);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00002000) <> 0 then { if plat[F6] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00004000);
                    opp_bits_high := BXOr(opp_bits_high,$00004000);
                  end;
              end;
            if BAnd(opp_bits_high,$00000040) <> 0 then { if plat[G5] = adversaire then }
              begin
                if BAnd(opp_bits_low,$20000000) <> 0 then { if plat[F4] = adversaire then }
                  begin
                    if BAnd(opp_bits_low,$00100000) <> 0 then { if plat[E3] = adversaire then }
                      begin
                        if BAnd(opp_bits_low,$00000800) <> 0 then { if plat[D2] = adversaire then }
                          begin
                            if BAnd(my_bits_low,$00000004) <> 0 then { if plat[C1] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$20100800);
                                opp_bits_low := BXOr(opp_bits_low,$20100800);
                                my_bits_high := BOr(my_bits_high,$00000040);
                                opp_bits_high := BXOr(opp_bits_high,$00000040);
                              end;
                          end
                        else
                        if BAnd(my_bits_low,$00000800) <> 0 then { if plat[D2] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$20100000);
                            opp_bits_low := BXOr(opp_bits_low,$20100000);
                            my_bits_high := BOr(my_bits_high,$00000040);
                            opp_bits_high := BXOr(opp_bits_high,$00000040);
                          end;
                      end
                    else
                    if BAnd(my_bits_low,$00100000) <> 0 then { if plat[E3] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$20000000);
                        opp_bits_low := BXOr(opp_bits_low,$20000000);
                        my_bits_high := BOr(my_bits_high,$00000040);
                        opp_bits_high := BXOr(opp_bits_high,$00000040);
                      end;
                  end
                else
                if BAnd(my_bits_low,$20000000) <> 0 then { if plat[F4] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00000040);
                    opp_bits_high := BXOr(opp_bits_high,$00000040);
                  end;
              end;
            if BAnd(opp_bits_high,$00000080) <> 0 then { if plat[H5] = adversaire then }
              begin
                if BAnd(opp_bits_low,$80000000) <> 0 then { if plat[H4] = adversaire then }
                  begin
                    if BAnd(opp_bits_low,$00800000) <> 0 then { if plat[H3] = adversaire then }
                      begin
                        if BAnd(opp_bits_low,$00008000) <> 0 then { if plat[H2] = adversaire then }
                          begin
                            if BAnd(my_bits_low,$00000080) <> 0 then { if plat[H1] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$80808000);
                                opp_bits_low := BXOr(opp_bits_low,$80808000);
                                my_bits_high := BOr(my_bits_high,$00000080);
                                opp_bits_high := BXOr(opp_bits_high,$00000080);
                              end;
                          end
                        else
                        if BAnd(my_bits_low,$00008000) <> 0 then { if plat[H2] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$80800000);
                            opp_bits_low := BXOr(opp_bits_low,$80800000);
                            my_bits_high := BOr(my_bits_high,$00000080);
                            opp_bits_high := BXOr(opp_bits_high,$00000080);
                          end;
                      end
                    else
                    if BAnd(my_bits_low,$00800000) <> 0 then { if plat[H3] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_low := BOr(my_bits_low,$80000000);
                        opp_bits_low := BXOr(opp_bits_low,$80000000);
                        my_bits_high := BOr(my_bits_high,$00000080);
                        opp_bits_high := BXOr(opp_bits_high,$00000080);
                      end;
                  end
                else
                if BAnd(my_bits_low,$80000000) <> 0 then { if plat[H4] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00000080);
                    opp_bits_high := BXOr(opp_bits_high,$00000080);
                  end;
              end;
            if (nbPrise <> 0)
              then
                begin
                  diffPions := succ(diffPions+nbprise);
                  ModifPlatBitboard := BXOr(vecteurParite,$00000008);
                  my_bits_high := BOr(my_bits_high,$00008000);  { place the disc in H6 }
                  g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
                  g_my_bits_high  := opp_bits_high;
                  g_opp_bits_low  := my_bits_low;
                  g_opp_bits_high := my_bits_high;
                end
              else
                ModifPlatBitboard := vecteurParite;
          end;
        71 :    { A7 }
          begin
            if BAnd(opp_bits_high,$00000100) <> 0 then { if plat[A6] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00000001) <> 0 then { if plat[A5] = adversaire then }
                  begin
                    if BAnd(opp_bits_low,$01000000) <> 0 then { if plat[A4] = adversaire then }
                      begin
                        if BAnd(opp_bits_low,$00010000) <> 0 then { if plat[A3] = adversaire then }
                          begin
                            if BAnd(opp_bits_low,$00000100) <> 0 then { if plat[A2] = adversaire then }
                              begin
                                if BAnd(my_bits_low,$00000001) <> 0 then { if plat[A1] = couleur then }
                                  begin
                                    nbprise := nbprise + 10;
                                    my_bits_low := BOr(my_bits_low,$01010100);
                                    opp_bits_low := BXOr(opp_bits_low,$01010100);
                                    my_bits_high := BOr(my_bits_high,$00000101);
                                    opp_bits_high := BXOr(opp_bits_high,$00000101);
                                  end;
                              end
                            else
                            if BAnd(my_bits_low,$00000100) <> 0 then { if plat[A2] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$01010000);
                                opp_bits_low := BXOr(opp_bits_low,$01010000);
                                my_bits_high := BOr(my_bits_high,$00000101);
                                opp_bits_high := BXOr(opp_bits_high,$00000101);
                              end;
                          end
                        else
                        if BAnd(my_bits_low,$00010000) <> 0 then { if plat[A3] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$01000000);
                            opp_bits_low := BXOr(opp_bits_low,$01000000);
                            my_bits_high := BOr(my_bits_high,$00000101);
                            opp_bits_high := BXOr(opp_bits_high,$00000101);
                          end;
                      end
                    else
                    if BAnd(my_bits_low,$01000000) <> 0 then { if plat[A4] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$00000101);
                        opp_bits_high := BXOr(opp_bits_high,$00000101);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00000001) <> 0 then { if plat[A5] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00000100);
                    opp_bits_high := BXOr(opp_bits_high,$00000100);
                  end;
              end;
            if BAnd(opp_bits_high,$00000200) <> 0 then { if plat[B6] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00000004) <> 0 then { if plat[C5] = adversaire then }
                  begin
                    if BAnd(opp_bits_low,$08000000) <> 0 then { if plat[D4] = adversaire then }
                      begin
                        if BAnd(opp_bits_low,$00100000) <> 0 then { if plat[E3] = adversaire then }
                          begin
                            if BAnd(opp_bits_low,$00002000) <> 0 then { if plat[F2] = adversaire then }
                              begin
                                if BAnd(my_bits_low,$00000040) <> 0 then { if plat[G1] = couleur then }
                                  begin
                                    nbprise := nbprise + 10;
                                    my_bits_low := BOr(my_bits_low,$08102000);
                                    opp_bits_low := BXOr(opp_bits_low,$08102000);
                                    my_bits_high := BOr(my_bits_high,$00000204);
                                    opp_bits_high := BXOr(opp_bits_high,$00000204);
                                  end;
                              end
                            else
                            if BAnd(my_bits_low,$00002000) <> 0 then { if plat[F2] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$08100000);
                                opp_bits_low := BXOr(opp_bits_low,$08100000);
                                my_bits_high := BOr(my_bits_high,$00000204);
                                opp_bits_high := BXOr(opp_bits_high,$00000204);
                              end;
                          end
                        else
                        if BAnd(my_bits_low,$00100000) <> 0 then { if plat[E3] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$08000000);
                            opp_bits_low := BXOr(opp_bits_low,$08000000);
                            my_bits_high := BOr(my_bits_high,$00000204);
                            opp_bits_high := BXOr(opp_bits_high,$00000204);
                          end;
                      end
                    else
                    if BAnd(my_bits_low,$08000000) <> 0 then { if plat[D4] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$00000204);
                        opp_bits_high := BXOr(opp_bits_high,$00000204);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00000004) <> 0 then { if plat[C5] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00000200);
                    opp_bits_high := BXOr(opp_bits_high,$00000200);
                  end;
              end;
            if BAnd(opp_bits_high,$00020000) <> 0 then { if plat[B7] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00040000) <> 0 then { if plat[C7] = adversaire then }
                  begin
                    if BAnd(opp_bits_high,$00080000) <> 0 then { if plat[D7] = adversaire then }
                      begin
                        if BAnd(opp_bits_high,$00100000) <> 0 then { if plat[E7] = adversaire then }
                          begin
                            if BAnd(opp_bits_high,$00200000) <> 0 then { if plat[F7] = adversaire then }
                              begin
                                if BAnd(opp_bits_high,$00400000) <> 0 then { if plat[G7] = adversaire then }
                                  begin
                                    if BAnd(my_bits_high,$00800000) <> 0 then { if plat[H7] = couleur then }
                                      begin
                                        nbprise := nbprise + 12;
                                        my_bits_high := BOr(my_bits_high,$007E0000);
                                        opp_bits_high := BXOr(opp_bits_high,$007E0000);
                                      end;
                                  end
                                else
                                if BAnd(my_bits_high,$00400000) <> 0 then { if plat[G7] = couleur then }
                                  begin
                                    nbprise := nbprise + 10;
                                    my_bits_high := BOr(my_bits_high,$003E0000);
                                    opp_bits_high := BXOr(opp_bits_high,$003E0000);
                                  end;
                              end
                            else
                            if BAnd(my_bits_high,$00200000) <> 0 then { if plat[F7] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_high := BOr(my_bits_high,$001E0000);
                                opp_bits_high := BXOr(opp_bits_high,$001E0000);
                              end;
                          end
                        else
                        if BAnd(my_bits_high,$00100000) <> 0 then { if plat[E7] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_high := BOr(my_bits_high,$000E0000);
                            opp_bits_high := BXOr(opp_bits_high,$000E0000);
                          end;
                      end
                    else
                    if BAnd(my_bits_high,$00080000) <> 0 then { if plat[D7] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$00060000);
                        opp_bits_high := BXOr(opp_bits_high,$00060000);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00040000) <> 0 then { if plat[C7] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00020000);
                    opp_bits_high := BXOr(opp_bits_high,$00020000);
                  end;
              end;
            if (nbPrise <> 0)
              then
                begin
                  diffPions := succ(diffPions+nbprise);
                  ModifPlatBitboard := BXOr(vecteurParite,$00000004);
                  my_bits_high := BOr(my_bits_high,$00010000);  { place the disc in A7 }
                  g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
                  g_my_bits_high  := opp_bits_high;
                  g_opp_bits_low  := my_bits_low;
                  g_opp_bits_high := my_bits_high;
                end
              else
                ModifPlatBitboard := vecteurParite;
          end;
        72 :    { B7 }
          begin
            if BAnd(opp_bits_high,$00000200) <> 0 then { if plat[B6] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00000002) <> 0 then { if plat[B5] = adversaire then }
                  begin
                    if BAnd(opp_bits_low,$02000000) <> 0 then { if plat[B4] = adversaire then }
                      begin
                        if BAnd(opp_bits_low,$00020000) <> 0 then { if plat[B3] = adversaire then }
                          begin
                            if BAnd(opp_bits_low,$00000200) <> 0 then { if plat[B2] = adversaire then }
                              begin
                                if BAnd(my_bits_low,$00000002) <> 0 then { if plat[B1] = couleur then }
                                  begin
                                    nbprise := nbprise + 10;
                                    my_bits_low := BOr(my_bits_low,$02020200);
                                    opp_bits_low := BXOr(opp_bits_low,$02020200);
                                    my_bits_high := BOr(my_bits_high,$00000202);
                                    opp_bits_high := BXOr(opp_bits_high,$00000202);
                                  end;
                              end
                            else
                            if BAnd(my_bits_low,$00000200) <> 0 then { if plat[B2] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$02020000);
                                opp_bits_low := BXOr(opp_bits_low,$02020000);
                                my_bits_high := BOr(my_bits_high,$00000202);
                                opp_bits_high := BXOr(opp_bits_high,$00000202);
                              end;
                          end
                        else
                        if BAnd(my_bits_low,$00020000) <> 0 then { if plat[B3] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$02000000);
                            opp_bits_low := BXOr(opp_bits_low,$02000000);
                            my_bits_high := BOr(my_bits_high,$00000202);
                            opp_bits_high := BXOr(opp_bits_high,$00000202);
                          end;
                      end
                    else
                    if BAnd(my_bits_low,$02000000) <> 0 then { if plat[B4] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$00000202);
                        opp_bits_high := BXOr(opp_bits_high,$00000202);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00000002) <> 0 then { if plat[B5] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00000200);
                    opp_bits_high := BXOr(opp_bits_high,$00000200);
                  end;
              end;
            if BAnd(opp_bits_high,$00000400) <> 0 then { if plat[C6] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00000008) <> 0 then { if plat[D5] = adversaire then }
                  begin
                    if BAnd(opp_bits_low,$10000000) <> 0 then { if plat[E4] = adversaire then }
                      begin
                        if BAnd(opp_bits_low,$00200000) <> 0 then { if plat[F3] = adversaire then }
                          begin
                            if BAnd(opp_bits_low,$00004000) <> 0 then { if plat[G2] = adversaire then }
                              begin
                                if BAnd(my_bits_low,$00000080) <> 0 then { if plat[H1] = couleur then }
                                  begin
                                    nbprise := nbprise + 10;
                                    my_bits_low := BOr(my_bits_low,$10204000);
                                    opp_bits_low := BXOr(opp_bits_low,$10204000);
                                    my_bits_high := BOr(my_bits_high,$00000408);
                                    opp_bits_high := BXOr(opp_bits_high,$00000408);
                                  end;
                              end
                            else
                            if BAnd(my_bits_low,$00004000) <> 0 then { if plat[G2] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$10200000);
                                opp_bits_low := BXOr(opp_bits_low,$10200000);
                                my_bits_high := BOr(my_bits_high,$00000408);
                                opp_bits_high := BXOr(opp_bits_high,$00000408);
                              end;
                          end
                        else
                        if BAnd(my_bits_low,$00200000) <> 0 then { if plat[F3] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$10000000);
                            opp_bits_low := BXOr(opp_bits_low,$10000000);
                            my_bits_high := BOr(my_bits_high,$00000408);
                            opp_bits_high := BXOr(opp_bits_high,$00000408);
                          end;
                      end
                    else
                    if BAnd(my_bits_low,$10000000) <> 0 then { if plat[E4] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$00000408);
                        opp_bits_high := BXOr(opp_bits_high,$00000408);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00000008) <> 0 then { if plat[D5] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00000400);
                    opp_bits_high := BXOr(opp_bits_high,$00000400);
                  end;
              end;
            if BAnd(opp_bits_high,$00040000) <> 0 then { if plat[C7] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00080000) <> 0 then { if plat[D7] = adversaire then }
                  begin
                    if BAnd(opp_bits_high,$00100000) <> 0 then { if plat[E7] = adversaire then }
                      begin
                        if BAnd(opp_bits_high,$00200000) <> 0 then { if plat[F7] = adversaire then }
                          begin
                            if BAnd(opp_bits_high,$00400000) <> 0 then { if plat[G7] = adversaire then }
                              begin
                                if BAnd(my_bits_high,$00800000) <> 0 then { if plat[H7] = couleur then }
                                  begin
                                    nbprise := nbprise + 10;
                                    my_bits_high := BOr(my_bits_high,$007C0000);
                                    opp_bits_high := BXOr(opp_bits_high,$007C0000);
                                  end;
                              end
                            else
                            if BAnd(my_bits_high,$00400000) <> 0 then { if plat[G7] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_high := BOr(my_bits_high,$003C0000);
                                opp_bits_high := BXOr(opp_bits_high,$003C0000);
                              end;
                          end
                        else
                        if BAnd(my_bits_high,$00200000) <> 0 then { if plat[F7] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_high := BOr(my_bits_high,$001C0000);
                            opp_bits_high := BXOr(opp_bits_high,$001C0000);
                          end;
                      end
                    else
                    if BAnd(my_bits_high,$00100000) <> 0 then { if plat[E7] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$000C0000);
                        opp_bits_high := BXOr(opp_bits_high,$000C0000);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00080000) <> 0 then { if plat[D7] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00040000);
                    opp_bits_high := BXOr(opp_bits_high,$00040000);
                  end;
              end;
            if (nbPrise <> 0)
              then
                begin
                  diffPions := succ(diffPions+nbprise);
                  ModifPlatBitboard := BXOr(vecteurParite,$00000004);
                  my_bits_high := BOr(my_bits_high,$00020000);  { place the disc in B7 }
                  g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
                  g_my_bits_high  := opp_bits_high;
                  g_opp_bits_low  := my_bits_low;
                  g_opp_bits_high := my_bits_high;
                end
              else
                ModifPlatBitboard := vecteurParite;
          end;
        73 :    { C7 }
          begin
            if BAnd(opp_bits_high,$00020000) <> 0 then { if plat[B7] = adversaire then }
              begin
                if BAnd(my_bits_high,$00010000) <> 0 then { if plat[A7] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00020000);
                    opp_bits_high := BXOr(opp_bits_high,$00020000);
                  end;
              end;
            if BAnd(opp_bits_high,$00000200) <> 0 then { if plat[B6] = adversaire then }
              begin
                if BAnd(my_bits_high,$00000001) <> 0 then { if plat[A5] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00000200);
                    opp_bits_high := BXOr(opp_bits_high,$00000200);
                  end;
              end;
            if BAnd(opp_bits_high,$00000400) <> 0 then { if plat[C6] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00000004) <> 0 then { if plat[C5] = adversaire then }
                  begin
                    if BAnd(opp_bits_low,$04000000) <> 0 then { if plat[C4] = adversaire then }
                      begin
                        if BAnd(opp_bits_low,$00040000) <> 0 then { if plat[C3] = adversaire then }
                          begin
                            if BAnd(opp_bits_low,$00000400) <> 0 then { if plat[C2] = adversaire then }
                              begin
                                if BAnd(my_bits_low,$00000004) <> 0 then { if plat[C1] = couleur then }
                                  begin
                                    nbprise := nbprise + 10;
                                    my_bits_low := BOr(my_bits_low,$04040400);
                                    opp_bits_low := BXOr(opp_bits_low,$04040400);
                                    my_bits_high := BOr(my_bits_high,$00000404);
                                    opp_bits_high := BXOr(opp_bits_high,$00000404);
                                  end;
                              end
                            else
                            if BAnd(my_bits_low,$00000400) <> 0 then { if plat[C2] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$04040000);
                                opp_bits_low := BXOr(opp_bits_low,$04040000);
                                my_bits_high := BOr(my_bits_high,$00000404);
                                opp_bits_high := BXOr(opp_bits_high,$00000404);
                              end;
                          end
                        else
                        if BAnd(my_bits_low,$00040000) <> 0 then { if plat[C3] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$04000000);
                            opp_bits_low := BXOr(opp_bits_low,$04000000);
                            my_bits_high := BOr(my_bits_high,$00000404);
                            opp_bits_high := BXOr(opp_bits_high,$00000404);
                          end;
                      end
                    else
                    if BAnd(my_bits_low,$04000000) <> 0 then { if plat[C4] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$00000404);
                        opp_bits_high := BXOr(opp_bits_high,$00000404);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00000004) <> 0 then { if plat[C5] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00000400);
                    opp_bits_high := BXOr(opp_bits_high,$00000400);
                  end;
              end;
            if BAnd(opp_bits_high,$00000800) <> 0 then { if plat[D6] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00000010) <> 0 then { if plat[E5] = adversaire then }
                  begin
                    if BAnd(opp_bits_low,$20000000) <> 0 then { if plat[F4] = adversaire then }
                      begin
                        if BAnd(opp_bits_low,$00400000) <> 0 then { if plat[G3] = adversaire then }
                          begin
                            if BAnd(my_bits_low,$00008000) <> 0 then { if plat[H2] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$20400000);
                                opp_bits_low := BXOr(opp_bits_low,$20400000);
                                my_bits_high := BOr(my_bits_high,$00000810);
                                opp_bits_high := BXOr(opp_bits_high,$00000810);
                              end;
                          end
                        else
                        if BAnd(my_bits_low,$00400000) <> 0 then { if plat[G3] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$20000000);
                            opp_bits_low := BXOr(opp_bits_low,$20000000);
                            my_bits_high := BOr(my_bits_high,$00000810);
                            opp_bits_high := BXOr(opp_bits_high,$00000810);
                          end;
                      end
                    else
                    if BAnd(my_bits_low,$20000000) <> 0 then { if plat[F4] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$00000810);
                        opp_bits_high := BXOr(opp_bits_high,$00000810);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00000010) <> 0 then { if plat[E5] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00000800);
                    opp_bits_high := BXOr(opp_bits_high,$00000800);
                  end;
              end;
            if BAnd(opp_bits_high,$00080000) <> 0 then { if plat[D7] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00100000) <> 0 then { if plat[E7] = adversaire then }
                  begin
                    if BAnd(opp_bits_high,$00200000) <> 0 then { if plat[F7] = adversaire then }
                      begin
                        if BAnd(opp_bits_high,$00400000) <> 0 then { if plat[G7] = adversaire then }
                          begin
                            if BAnd(my_bits_high,$00800000) <> 0 then { if plat[H7] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_high := BOr(my_bits_high,$00780000);
                                opp_bits_high := BXOr(opp_bits_high,$00780000);
                              end;
                          end
                        else
                        if BAnd(my_bits_high,$00400000) <> 0 then { if plat[G7] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_high := BOr(my_bits_high,$00380000);
                            opp_bits_high := BXOr(opp_bits_high,$00380000);
                          end;
                      end
                    else
                    if BAnd(my_bits_high,$00200000) <> 0 then { if plat[F7] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$00180000);
                        opp_bits_high := BXOr(opp_bits_high,$00180000);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00100000) <> 0 then { if plat[E7] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00080000);
                    opp_bits_high := BXOr(opp_bits_high,$00080000);
                  end;
              end;
            if (nbPrise <> 0)
              then
                begin
                  diffPions := succ(diffPions+nbprise);
                  ModifPlatBitboard := BXOr(vecteurParite,$00000004);
                  my_bits_high := BOr(my_bits_high,$00040000);  { place the disc in C7 }
                  g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
                  g_my_bits_high  := opp_bits_high;
                  g_opp_bits_low  := my_bits_low;
                  g_opp_bits_high := my_bits_high;
                end
              else
                ModifPlatBitboard := vecteurParite;
          end;
        74 :    { D7 }
          begin
            if BAnd(opp_bits_high,$00040000) <> 0 then { if plat[C7] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00020000) <> 0 then { if plat[B7] = adversaire then }
                  begin
                    if BAnd(my_bits_high,$00010000) <> 0 then { if plat[A7] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$00060000);
                        opp_bits_high := BXOr(opp_bits_high,$00060000);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00020000) <> 0 then { if plat[B7] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00040000);
                    opp_bits_high := BXOr(opp_bits_high,$00040000);
                  end;
              end;
            if BAnd(opp_bits_high,$00000400) <> 0 then { if plat[C6] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00000002) <> 0 then { if plat[B5] = adversaire then }
                  begin
                    if BAnd(my_bits_low,$01000000) <> 0 then { if plat[A4] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$00000402);
                        opp_bits_high := BXOr(opp_bits_high,$00000402);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00000002) <> 0 then { if plat[B5] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00000400);
                    opp_bits_high := BXOr(opp_bits_high,$00000400);
                  end;
              end;
            if BAnd(opp_bits_high,$00000800) <> 0 then { if plat[D6] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00000008) <> 0 then { if plat[D5] = adversaire then }
                  begin
                    if BAnd(opp_bits_low,$08000000) <> 0 then { if plat[D4] = adversaire then }
                      begin
                        if BAnd(opp_bits_low,$00080000) <> 0 then { if plat[D3] = adversaire then }
                          begin
                            if BAnd(opp_bits_low,$00000800) <> 0 then { if plat[D2] = adversaire then }
                              begin
                                if BAnd(my_bits_low,$00000008) <> 0 then { if plat[D1] = couleur then }
                                  begin
                                    nbprise := nbprise + 10;
                                    my_bits_low := BOr(my_bits_low,$08080800);
                                    opp_bits_low := BXOr(opp_bits_low,$08080800);
                                    my_bits_high := BOr(my_bits_high,$00000808);
                                    opp_bits_high := BXOr(opp_bits_high,$00000808);
                                  end;
                              end
                            else
                            if BAnd(my_bits_low,$00000800) <> 0 then { if plat[D2] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$08080000);
                                opp_bits_low := BXOr(opp_bits_low,$08080000);
                                my_bits_high := BOr(my_bits_high,$00000808);
                                opp_bits_high := BXOr(opp_bits_high,$00000808);
                              end;
                          end
                        else
                        if BAnd(my_bits_low,$00080000) <> 0 then { if plat[D3] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$08000000);
                            opp_bits_low := BXOr(opp_bits_low,$08000000);
                            my_bits_high := BOr(my_bits_high,$00000808);
                            opp_bits_high := BXOr(opp_bits_high,$00000808);
                          end;
                      end
                    else
                    if BAnd(my_bits_low,$08000000) <> 0 then { if plat[D4] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$00000808);
                        opp_bits_high := BXOr(opp_bits_high,$00000808);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00000008) <> 0 then { if plat[D5] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00000800);
                    opp_bits_high := BXOr(opp_bits_high,$00000800);
                  end;
              end;
            if BAnd(opp_bits_high,$00001000) <> 0 then { if plat[E6] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00000020) <> 0 then { if plat[F5] = adversaire then }
                  begin
                    if BAnd(opp_bits_low,$40000000) <> 0 then { if plat[G4] = adversaire then }
                      begin
                        if BAnd(my_bits_low,$00800000) <> 0 then { if plat[H3] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$40000000);
                            opp_bits_low := BXOr(opp_bits_low,$40000000);
                            my_bits_high := BOr(my_bits_high,$00001020);
                            opp_bits_high := BXOr(opp_bits_high,$00001020);
                          end;
                      end
                    else
                    if BAnd(my_bits_low,$40000000) <> 0 then { if plat[G4] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$00001020);
                        opp_bits_high := BXOr(opp_bits_high,$00001020);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00000020) <> 0 then { if plat[F5] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00001000);
                    opp_bits_high := BXOr(opp_bits_high,$00001000);
                  end;
              end;
            if BAnd(opp_bits_high,$00100000) <> 0 then { if plat[E7] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00200000) <> 0 then { if plat[F7] = adversaire then }
                  begin
                    if BAnd(opp_bits_high,$00400000) <> 0 then { if plat[G7] = adversaire then }
                      begin
                        if BAnd(my_bits_high,$00800000) <> 0 then { if plat[H7] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_high := BOr(my_bits_high,$00700000);
                            opp_bits_high := BXOr(opp_bits_high,$00700000);
                          end;
                      end
                    else
                    if BAnd(my_bits_high,$00400000) <> 0 then { if plat[G7] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$00300000);
                        opp_bits_high := BXOr(opp_bits_high,$00300000);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00200000) <> 0 then { if plat[F7] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00100000);
                    opp_bits_high := BXOr(opp_bits_high,$00100000);
                  end;
              end;
            if (nbPrise <> 0)
              then
                begin
                  diffPions := succ(diffPions+nbprise);
                  ModifPlatBitboard := BXOr(vecteurParite,$00000004);
                  my_bits_high := BOr(my_bits_high,$00080000);  { place the disc in D7 }
                  g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
                  g_my_bits_high  := opp_bits_high;
                  g_opp_bits_low  := my_bits_low;
                  g_opp_bits_high := my_bits_high;
                end
              else
                ModifPlatBitboard := vecteurParite;
          end;
        75 :    { E7 }
          begin
            if BAnd(opp_bits_high,$00080000) <> 0 then { if plat[D7] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00040000) <> 0 then { if plat[C7] = adversaire then }
                  begin
                    if BAnd(opp_bits_high,$00020000) <> 0 then { if plat[B7] = adversaire then }
                      begin
                        if BAnd(my_bits_high,$00010000) <> 0 then { if plat[A7] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_high := BOr(my_bits_high,$000E0000);
                            opp_bits_high := BXOr(opp_bits_high,$000E0000);
                          end;
                      end
                    else
                    if BAnd(my_bits_high,$00020000) <> 0 then { if plat[B7] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$000C0000);
                        opp_bits_high := BXOr(opp_bits_high,$000C0000);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00040000) <> 0 then { if plat[C7] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00080000);
                    opp_bits_high := BXOr(opp_bits_high,$00080000);
                  end;
              end;
            if BAnd(opp_bits_high,$00000800) <> 0 then { if plat[D6] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00000004) <> 0 then { if plat[C5] = adversaire then }
                  begin
                    if BAnd(opp_bits_low,$02000000) <> 0 then { if plat[B4] = adversaire then }
                      begin
                        if BAnd(my_bits_low,$00010000) <> 0 then { if plat[A3] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$02000000);
                            opp_bits_low := BXOr(opp_bits_low,$02000000);
                            my_bits_high := BOr(my_bits_high,$00000804);
                            opp_bits_high := BXOr(opp_bits_high,$00000804);
                          end;
                      end
                    else
                    if BAnd(my_bits_low,$02000000) <> 0 then { if plat[B4] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$00000804);
                        opp_bits_high := BXOr(opp_bits_high,$00000804);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00000004) <> 0 then { if plat[C5] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00000800);
                    opp_bits_high := BXOr(opp_bits_high,$00000800);
                  end;
              end;
            if BAnd(opp_bits_high,$00001000) <> 0 then { if plat[E6] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00000010) <> 0 then { if plat[E5] = adversaire then }
                  begin
                    if BAnd(opp_bits_low,$10000000) <> 0 then { if plat[E4] = adversaire then }
                      begin
                        if BAnd(opp_bits_low,$00100000) <> 0 then { if plat[E3] = adversaire then }
                          begin
                            if BAnd(opp_bits_low,$00001000) <> 0 then { if plat[E2] = adversaire then }
                              begin
                                if BAnd(my_bits_low,$00000010) <> 0 then { if plat[E1] = couleur then }
                                  begin
                                    nbprise := nbprise + 10;
                                    my_bits_low := BOr(my_bits_low,$10101000);
                                    opp_bits_low := BXOr(opp_bits_low,$10101000);
                                    my_bits_high := BOr(my_bits_high,$00001010);
                                    opp_bits_high := BXOr(opp_bits_high,$00001010);
                                  end;
                              end
                            else
                            if BAnd(my_bits_low,$00001000) <> 0 then { if plat[E2] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$10100000);
                                opp_bits_low := BXOr(opp_bits_low,$10100000);
                                my_bits_high := BOr(my_bits_high,$00001010);
                                opp_bits_high := BXOr(opp_bits_high,$00001010);
                              end;
                          end
                        else
                        if BAnd(my_bits_low,$00100000) <> 0 then { if plat[E3] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$10000000);
                            opp_bits_low := BXOr(opp_bits_low,$10000000);
                            my_bits_high := BOr(my_bits_high,$00001010);
                            opp_bits_high := BXOr(opp_bits_high,$00001010);
                          end;
                      end
                    else
                    if BAnd(my_bits_low,$10000000) <> 0 then { if plat[E4] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$00001010);
                        opp_bits_high := BXOr(opp_bits_high,$00001010);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00000010) <> 0 then { if plat[E5] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00001000);
                    opp_bits_high := BXOr(opp_bits_high,$00001000);
                  end;
              end;
            if BAnd(opp_bits_high,$00002000) <> 0 then { if plat[F6] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00000040) <> 0 then { if plat[G5] = adversaire then }
                  begin
                    if BAnd(my_bits_low,$80000000) <> 0 then { if plat[H4] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$00002040);
                        opp_bits_high := BXOr(opp_bits_high,$00002040);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00000040) <> 0 then { if plat[G5] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00002000);
                    opp_bits_high := BXOr(opp_bits_high,$00002000);
                  end;
              end;
            if BAnd(opp_bits_high,$00200000) <> 0 then { if plat[F7] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00400000) <> 0 then { if plat[G7] = adversaire then }
                  begin
                    if BAnd(my_bits_high,$00800000) <> 0 then { if plat[H7] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$00600000);
                        opp_bits_high := BXOr(opp_bits_high,$00600000);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00400000) <> 0 then { if plat[G7] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00200000);
                    opp_bits_high := BXOr(opp_bits_high,$00200000);
                  end;
              end;
            if (nbPrise <> 0)
              then
                begin
                  diffPions := succ(diffPions+nbprise);
                  ModifPlatBitboard := BXOr(vecteurParite,$00000008);
                  my_bits_high := BOr(my_bits_high,$00100000);  { place the disc in E7 }
                  g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
                  g_my_bits_high  := opp_bits_high;
                  g_opp_bits_low  := my_bits_low;
                  g_opp_bits_high := my_bits_high;
                end
              else
                ModifPlatBitboard := vecteurParite;
          end;
        76 :    { F7 }
          begin
            if BAnd(opp_bits_high,$00100000) <> 0 then { if plat[E7] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00080000) <> 0 then { if plat[D7] = adversaire then }
                  begin
                    if BAnd(opp_bits_high,$00040000) <> 0 then { if plat[C7] = adversaire then }
                      begin
                        if BAnd(opp_bits_high,$00020000) <> 0 then { if plat[B7] = adversaire then }
                          begin
                            if BAnd(my_bits_high,$00010000) <> 0 then { if plat[A7] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_high := BOr(my_bits_high,$001E0000);
                                opp_bits_high := BXOr(opp_bits_high,$001E0000);
                              end;
                          end
                        else
                        if BAnd(my_bits_high,$00020000) <> 0 then { if plat[B7] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_high := BOr(my_bits_high,$001C0000);
                            opp_bits_high := BXOr(opp_bits_high,$001C0000);
                          end;
                      end
                    else
                    if BAnd(my_bits_high,$00040000) <> 0 then { if plat[C7] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$00180000);
                        opp_bits_high := BXOr(opp_bits_high,$00180000);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00080000) <> 0 then { if plat[D7] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00100000);
                    opp_bits_high := BXOr(opp_bits_high,$00100000);
                  end;
              end;
            if BAnd(opp_bits_high,$00001000) <> 0 then { if plat[E6] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00000008) <> 0 then { if plat[D5] = adversaire then }
                  begin
                    if BAnd(opp_bits_low,$04000000) <> 0 then { if plat[C4] = adversaire then }
                      begin
                        if BAnd(opp_bits_low,$00020000) <> 0 then { if plat[B3] = adversaire then }
                          begin
                            if BAnd(my_bits_low,$00000100) <> 0 then { if plat[A2] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$04020000);
                                opp_bits_low := BXOr(opp_bits_low,$04020000);
                                my_bits_high := BOr(my_bits_high,$00001008);
                                opp_bits_high := BXOr(opp_bits_high,$00001008);
                              end;
                          end
                        else
                        if BAnd(my_bits_low,$00020000) <> 0 then { if plat[B3] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$04000000);
                            opp_bits_low := BXOr(opp_bits_low,$04000000);
                            my_bits_high := BOr(my_bits_high,$00001008);
                            opp_bits_high := BXOr(opp_bits_high,$00001008);
                          end;
                      end
                    else
                    if BAnd(my_bits_low,$04000000) <> 0 then { if plat[C4] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$00001008);
                        opp_bits_high := BXOr(opp_bits_high,$00001008);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00000008) <> 0 then { if plat[D5] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00001000);
                    opp_bits_high := BXOr(opp_bits_high,$00001000);
                  end;
              end;
            if BAnd(opp_bits_high,$00002000) <> 0 then { if plat[F6] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00000020) <> 0 then { if plat[F5] = adversaire then }
                  begin
                    if BAnd(opp_bits_low,$20000000) <> 0 then { if plat[F4] = adversaire then }
                      begin
                        if BAnd(opp_bits_low,$00200000) <> 0 then { if plat[F3] = adversaire then }
                          begin
                            if BAnd(opp_bits_low,$00002000) <> 0 then { if plat[F2] = adversaire then }
                              begin
                                if BAnd(my_bits_low,$00000020) <> 0 then { if plat[F1] = couleur then }
                                  begin
                                    nbprise := nbprise + 10;
                                    my_bits_low := BOr(my_bits_low,$20202000);
                                    opp_bits_low := BXOr(opp_bits_low,$20202000);
                                    my_bits_high := BOr(my_bits_high,$00002020);
                                    opp_bits_high := BXOr(opp_bits_high,$00002020);
                                  end;
                              end
                            else
                            if BAnd(my_bits_low,$00002000) <> 0 then { if plat[F2] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$20200000);
                                opp_bits_low := BXOr(opp_bits_low,$20200000);
                                my_bits_high := BOr(my_bits_high,$00002020);
                                opp_bits_high := BXOr(opp_bits_high,$00002020);
                              end;
                          end
                        else
                        if BAnd(my_bits_low,$00200000) <> 0 then { if plat[F3] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$20000000);
                            opp_bits_low := BXOr(opp_bits_low,$20000000);
                            my_bits_high := BOr(my_bits_high,$00002020);
                            opp_bits_high := BXOr(opp_bits_high,$00002020);
                          end;
                      end
                    else
                    if BAnd(my_bits_low,$20000000) <> 0 then { if plat[F4] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$00002020);
                        opp_bits_high := BXOr(opp_bits_high,$00002020);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00000020) <> 0 then { if plat[F5] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00002000);
                    opp_bits_high := BXOr(opp_bits_high,$00002000);
                  end;
              end;
            if BAnd(opp_bits_high,$00004000) <> 0 then { if plat[G6] = adversaire then }
              begin
                if BAnd(my_bits_high,$00000080) <> 0 then { if plat[H5] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00004000);
                    opp_bits_high := BXOr(opp_bits_high,$00004000);
                  end;
              end;
            if BAnd(opp_bits_high,$00400000) <> 0 then { if plat[G7] = adversaire then }
              begin
                if BAnd(my_bits_high,$00800000) <> 0 then { if plat[H7] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00400000);
                    opp_bits_high := BXOr(opp_bits_high,$00400000);
                  end;
              end;
            if (nbPrise <> 0)
              then
                begin
                  diffPions := succ(diffPions+nbprise);
                  ModifPlatBitboard := BXOr(vecteurParite,$00000008);
                  my_bits_high := BOr(my_bits_high,$00200000);  { place the disc in F7 }
                  g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
                  g_my_bits_high  := opp_bits_high;
                  g_opp_bits_low  := my_bits_low;
                  g_opp_bits_high := my_bits_high;
                end
              else
                ModifPlatBitboard := vecteurParite;
          end;
        77 :    { G7 }
          begin
            if BAnd(opp_bits_high,$00200000) <> 0 then { if plat[F7] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00100000) <> 0 then { if plat[E7] = adversaire then }
                  begin
                    if BAnd(opp_bits_high,$00080000) <> 0 then { if plat[D7] = adversaire then }
                      begin
                        if BAnd(opp_bits_high,$00040000) <> 0 then { if plat[C7] = adversaire then }
                          begin
                            if BAnd(opp_bits_high,$00020000) <> 0 then { if plat[B7] = adversaire then }
                              begin
                                if BAnd(my_bits_high,$00010000) <> 0 then { if plat[A7] = couleur then }
                                  begin
                                    nbprise := nbprise + 10;
                                    my_bits_high := BOr(my_bits_high,$003E0000);
                                    opp_bits_high := BXOr(opp_bits_high,$003E0000);
                                  end;
                              end
                            else
                            if BAnd(my_bits_high,$00020000) <> 0 then { if plat[B7] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_high := BOr(my_bits_high,$003C0000);
                                opp_bits_high := BXOr(opp_bits_high,$003C0000);
                              end;
                          end
                        else
                        if BAnd(my_bits_high,$00040000) <> 0 then { if plat[C7] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_high := BOr(my_bits_high,$00380000);
                            opp_bits_high := BXOr(opp_bits_high,$00380000);
                          end;
                      end
                    else
                    if BAnd(my_bits_high,$00080000) <> 0 then { if plat[D7] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$00300000);
                        opp_bits_high := BXOr(opp_bits_high,$00300000);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00100000) <> 0 then { if plat[E7] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00200000);
                    opp_bits_high := BXOr(opp_bits_high,$00200000);
                  end;
              end;
            if BAnd(opp_bits_high,$00002000) <> 0 then { if plat[F6] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00000010) <> 0 then { if plat[E5] = adversaire then }
                  begin
                    if BAnd(opp_bits_low,$08000000) <> 0 then { if plat[D4] = adversaire then }
                      begin
                        if BAnd(opp_bits_low,$00040000) <> 0 then { if plat[C3] = adversaire then }
                          begin
                            if BAnd(opp_bits_low,$00000200) <> 0 then { if plat[B2] = adversaire then }
                              begin
                                if BAnd(my_bits_low,$00000001) <> 0 then { if plat[A1] = couleur then }
                                  begin
                                    nbprise := nbprise + 10;
                                    my_bits_low := BOr(my_bits_low,$08040200);
                                    opp_bits_low := BXOr(opp_bits_low,$08040200);
                                    my_bits_high := BOr(my_bits_high,$00002010);
                                    opp_bits_high := BXOr(opp_bits_high,$00002010);
                                  end;
                              end
                            else
                            if BAnd(my_bits_low,$00000200) <> 0 then { if plat[B2] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$08040000);
                                opp_bits_low := BXOr(opp_bits_low,$08040000);
                                my_bits_high := BOr(my_bits_high,$00002010);
                                opp_bits_high := BXOr(opp_bits_high,$00002010);
                              end;
                          end
                        else
                        if BAnd(my_bits_low,$00040000) <> 0 then { if plat[C3] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$08000000);
                            opp_bits_low := BXOr(opp_bits_low,$08000000);
                            my_bits_high := BOr(my_bits_high,$00002010);
                            opp_bits_high := BXOr(opp_bits_high,$00002010);
                          end;
                      end
                    else
                    if BAnd(my_bits_low,$08000000) <> 0 then { if plat[D4] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$00002010);
                        opp_bits_high := BXOr(opp_bits_high,$00002010);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00000010) <> 0 then { if plat[E5] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00002000);
                    opp_bits_high := BXOr(opp_bits_high,$00002000);
                  end;
              end;
            if BAnd(opp_bits_high,$00004000) <> 0 then { if plat[G6] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00000040) <> 0 then { if plat[G5] = adversaire then }
                  begin
                    if BAnd(opp_bits_low,$40000000) <> 0 then { if plat[G4] = adversaire then }
                      begin
                        if BAnd(opp_bits_low,$00400000) <> 0 then { if plat[G3] = adversaire then }
                          begin
                            if BAnd(opp_bits_low,$00004000) <> 0 then { if plat[G2] = adversaire then }
                              begin
                                if BAnd(my_bits_low,$00000040) <> 0 then { if plat[G1] = couleur then }
                                  begin
                                    nbprise := nbprise + 10;
                                    my_bits_low := BOr(my_bits_low,$40404000);
                                    opp_bits_low := BXOr(opp_bits_low,$40404000);
                                    my_bits_high := BOr(my_bits_high,$00004040);
                                    opp_bits_high := BXOr(opp_bits_high,$00004040);
                                  end;
                              end
                            else
                            if BAnd(my_bits_low,$00004000) <> 0 then { if plat[G2] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$40400000);
                                opp_bits_low := BXOr(opp_bits_low,$40400000);
                                my_bits_high := BOr(my_bits_high,$00004040);
                                opp_bits_high := BXOr(opp_bits_high,$00004040);
                              end;
                          end
                        else
                        if BAnd(my_bits_low,$00400000) <> 0 then { if plat[G3] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$40000000);
                            opp_bits_low := BXOr(opp_bits_low,$40000000);
                            my_bits_high := BOr(my_bits_high,$00004040);
                            opp_bits_high := BXOr(opp_bits_high,$00004040);
                          end;
                      end
                    else
                    if BAnd(my_bits_low,$40000000) <> 0 then { if plat[G4] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$00004040);
                        opp_bits_high := BXOr(opp_bits_high,$00004040);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00000040) <> 0 then { if plat[G5] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00004000);
                    opp_bits_high := BXOr(opp_bits_high,$00004000);
                  end;
              end;
            if (nbPrise <> 0)
              then
                begin
                  diffPions := succ(diffPions+nbprise);
                  ModifPlatBitboard := BXOr(vecteurParite,$00000008);
                  my_bits_high := BOr(my_bits_high,$00400000);  { place the disc in G7 }
                  g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
                  g_my_bits_high  := opp_bits_high;
                  g_opp_bits_low  := my_bits_low;
                  g_opp_bits_high := my_bits_high;
                end
              else
                ModifPlatBitboard := vecteurParite;
          end;
        78 :    { H7 }
          begin
            if BAnd(opp_bits_high,$00400000) <> 0 then { if plat[G7] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00200000) <> 0 then { if plat[F7] = adversaire then }
                  begin
                    if BAnd(opp_bits_high,$00100000) <> 0 then { if plat[E7] = adversaire then }
                      begin
                        if BAnd(opp_bits_high,$00080000) <> 0 then { if plat[D7] = adversaire then }
                          begin
                            if BAnd(opp_bits_high,$00040000) <> 0 then { if plat[C7] = adversaire then }
                              begin
                                if BAnd(opp_bits_high,$00020000) <> 0 then { if plat[B7] = adversaire then }
                                  begin
                                    if BAnd(my_bits_high,$00010000) <> 0 then { if plat[A7] = couleur then }
                                      begin
                                        nbprise := nbprise + 12;
                                        my_bits_high := BOr(my_bits_high,$007E0000);
                                        opp_bits_high := BXOr(opp_bits_high,$007E0000);
                                      end;
                                  end
                                else
                                if BAnd(my_bits_high,$00020000) <> 0 then { if plat[B7] = couleur then }
                                  begin
                                    nbprise := nbprise + 10;
                                    my_bits_high := BOr(my_bits_high,$007C0000);
                                    opp_bits_high := BXOr(opp_bits_high,$007C0000);
                                  end;
                              end
                            else
                            if BAnd(my_bits_high,$00040000) <> 0 then { if plat[C7] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_high := BOr(my_bits_high,$00780000);
                                opp_bits_high := BXOr(opp_bits_high,$00780000);
                              end;
                          end
                        else
                        if BAnd(my_bits_high,$00080000) <> 0 then { if plat[D7] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_high := BOr(my_bits_high,$00700000);
                            opp_bits_high := BXOr(opp_bits_high,$00700000);
                          end;
                      end
                    else
                    if BAnd(my_bits_high,$00100000) <> 0 then { if plat[E7] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$00600000);
                        opp_bits_high := BXOr(opp_bits_high,$00600000);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00200000) <> 0 then { if plat[F7] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00400000);
                    opp_bits_high := BXOr(opp_bits_high,$00400000);
                  end;
              end;
            if BAnd(opp_bits_high,$00004000) <> 0 then { if plat[G6] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00000020) <> 0 then { if plat[F5] = adversaire then }
                  begin
                    if BAnd(opp_bits_low,$10000000) <> 0 then { if plat[E4] = adversaire then }
                      begin
                        if BAnd(opp_bits_low,$00080000) <> 0 then { if plat[D3] = adversaire then }
                          begin
                            if BAnd(opp_bits_low,$00000400) <> 0 then { if plat[C2] = adversaire then }
                              begin
                                if BAnd(my_bits_low,$00000002) <> 0 then { if plat[B1] = couleur then }
                                  begin
                                    nbprise := nbprise + 10;
                                    my_bits_low := BOr(my_bits_low,$10080400);
                                    opp_bits_low := BXOr(opp_bits_low,$10080400);
                                    my_bits_high := BOr(my_bits_high,$00004020);
                                    opp_bits_high := BXOr(opp_bits_high,$00004020);
                                  end;
                              end
                            else
                            if BAnd(my_bits_low,$00000400) <> 0 then { if plat[C2] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$10080000);
                                opp_bits_low := BXOr(opp_bits_low,$10080000);
                                my_bits_high := BOr(my_bits_high,$00004020);
                                opp_bits_high := BXOr(opp_bits_high,$00004020);
                              end;
                          end
                        else
                        if BAnd(my_bits_low,$00080000) <> 0 then { if plat[D3] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$10000000);
                            opp_bits_low := BXOr(opp_bits_low,$10000000);
                            my_bits_high := BOr(my_bits_high,$00004020);
                            opp_bits_high := BXOr(opp_bits_high,$00004020);
                          end;
                      end
                    else
                    if BAnd(my_bits_low,$10000000) <> 0 then { if plat[E4] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$00004020);
                        opp_bits_high := BXOr(opp_bits_high,$00004020);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00000020) <> 0 then { if plat[F5] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00004000);
                    opp_bits_high := BXOr(opp_bits_high,$00004000);
                  end;
              end;
            if BAnd(opp_bits_high,$00008000) <> 0 then { if plat[H6] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00000080) <> 0 then { if plat[H5] = adversaire then }
                  begin
                    if BAnd(opp_bits_low,$80000000) <> 0 then { if plat[H4] = adversaire then }
                      begin
                        if BAnd(opp_bits_low,$00800000) <> 0 then { if plat[H3] = adversaire then }
                          begin
                            if BAnd(opp_bits_low,$00008000) <> 0 then { if plat[H2] = adversaire then }
                              begin
                                if BAnd(my_bits_low,$00000080) <> 0 then { if plat[H1] = couleur then }
                                  begin
                                    nbprise := nbprise + 10;
                                    my_bits_low := BOr(my_bits_low,$80808000);
                                    opp_bits_low := BXOr(opp_bits_low,$80808000);
                                    my_bits_high := BOr(my_bits_high,$00008080);
                                    opp_bits_high := BXOr(opp_bits_high,$00008080);
                                  end;
                              end
                            else
                            if BAnd(my_bits_low,$00008000) <> 0 then { if plat[H2] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$80800000);
                                opp_bits_low := BXOr(opp_bits_low,$80800000);
                                my_bits_high := BOr(my_bits_high,$00008080);
                                opp_bits_high := BXOr(opp_bits_high,$00008080);
                              end;
                          end
                        else
                        if BAnd(my_bits_low,$00800000) <> 0 then { if plat[H3] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_low := BOr(my_bits_low,$80000000);
                            opp_bits_low := BXOr(opp_bits_low,$80000000);
                            my_bits_high := BOr(my_bits_high,$00008080);
                            opp_bits_high := BXOr(opp_bits_high,$00008080);
                          end;
                      end
                    else
                    if BAnd(my_bits_low,$80000000) <> 0 then { if plat[H4] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$00008080);
                        opp_bits_high := BXOr(opp_bits_high,$00008080);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00000080) <> 0 then { if plat[H5] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00008000);
                    opp_bits_high := BXOr(opp_bits_high,$00008000);
                  end;
              end;
            if (nbPrise <> 0)
              then
                begin
                  diffPions := succ(diffPions+nbprise);
                  ModifPlatBitboard := BXOr(vecteurParite,$00000008);
                  my_bits_high := BOr(my_bits_high,$00800000);  { place the disc in H7 }
                  g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
                  g_my_bits_high  := opp_bits_high;
                  g_opp_bits_low  := my_bits_low;
                  g_opp_bits_high := my_bits_high;
                end
              else
                ModifPlatBitboard := vecteurParite;
          end;
        81 :    { A8 }
          begin
            if BAnd(opp_bits_high,$00010000) <> 0 then { if plat[A7] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00000100) <> 0 then { if plat[A6] = adversaire then }
                  begin
                    if BAnd(opp_bits_high,$00000001) <> 0 then { if plat[A5] = adversaire then }
                      begin
                        if BAnd(opp_bits_low,$01000000) <> 0 then { if plat[A4] = adversaire then }
                          begin
                            if BAnd(opp_bits_low,$00010000) <> 0 then { if plat[A3] = adversaire then }
                              begin
                                if BAnd(opp_bits_low,$00000100) <> 0 then { if plat[A2] = adversaire then }
                                  begin
                                    if BAnd(my_bits_low,$00000001) <> 0 then { if plat[A1] = couleur then }
                                      begin
                                        nbprise := nbprise + 12;
                                        my_bits_low := BOr(my_bits_low,$01010100);
                                        opp_bits_low := BXOr(opp_bits_low,$01010100);
                                        my_bits_high := BOr(my_bits_high,$00010101);
                                        opp_bits_high := BXOr(opp_bits_high,$00010101);
                                      end;
                                  end
                                else
                                if BAnd(my_bits_low,$00000100) <> 0 then { if plat[A2] = couleur then }
                                  begin
                                    nbprise := nbprise + 10;
                                    my_bits_low := BOr(my_bits_low,$01010000);
                                    opp_bits_low := BXOr(opp_bits_low,$01010000);
                                    my_bits_high := BOr(my_bits_high,$00010101);
                                    opp_bits_high := BXOr(opp_bits_high,$00010101);
                                  end;
                              end
                            else
                            if BAnd(my_bits_low,$00010000) <> 0 then { if plat[A3] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$01000000);
                                opp_bits_low := BXOr(opp_bits_low,$01000000);
                                my_bits_high := BOr(my_bits_high,$00010101);
                                opp_bits_high := BXOr(opp_bits_high,$00010101);
                              end;
                          end
                        else
                        if BAnd(my_bits_low,$01000000) <> 0 then { if plat[A4] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_high := BOr(my_bits_high,$00010101);
                            opp_bits_high := BXOr(opp_bits_high,$00010101);
                          end;
                      end
                    else
                    if BAnd(my_bits_high,$00000001) <> 0 then { if plat[A5] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$00010100);
                        opp_bits_high := BXOr(opp_bits_high,$00010100);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00000100) <> 0 then { if plat[A6] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00010000);
                    opp_bits_high := BXOr(opp_bits_high,$00010000);
                  end;
              end;
            if BAnd(opp_bits_high,$00020000) <> 0 then { if plat[B7] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00000400) <> 0 then { if plat[C6] = adversaire then }
                  begin
                    if BAnd(opp_bits_high,$00000008) <> 0 then { if plat[D5] = adversaire then }
                      begin
                        if BAnd(opp_bits_low,$10000000) <> 0 then { if plat[E4] = adversaire then }
                          begin
                            if BAnd(opp_bits_low,$00200000) <> 0 then { if plat[F3] = adversaire then }
                              begin
                                if BAnd(opp_bits_low,$00004000) <> 0 then { if plat[G2] = adversaire then }
                                  begin
                                    if BAnd(my_bits_low,$00000080) <> 0 then { if plat[H1] = couleur then }
                                      begin
                                        nbprise := nbprise + 12;
                                        my_bits_low := BOr(my_bits_low,$10204000);
                                        opp_bits_low := BXOr(opp_bits_low,$10204000);
                                        my_bits_high := BOr(my_bits_high,$00020408);
                                        opp_bits_high := BXOr(opp_bits_high,$00020408);
                                      end;
                                  end
                                else
                                if BAnd(my_bits_low,$00004000) <> 0 then { if plat[G2] = couleur then }
                                  begin
                                    nbprise := nbprise + 10;
                                    my_bits_low := BOr(my_bits_low,$10200000);
                                    opp_bits_low := BXOr(opp_bits_low,$10200000);
                                    my_bits_high := BOr(my_bits_high,$00020408);
                                    opp_bits_high := BXOr(opp_bits_high,$00020408);
                                  end;
                              end
                            else
                            if BAnd(my_bits_low,$00200000) <> 0 then { if plat[F3] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$10000000);
                                opp_bits_low := BXOr(opp_bits_low,$10000000);
                                my_bits_high := BOr(my_bits_high,$00020408);
                                opp_bits_high := BXOr(opp_bits_high,$00020408);
                              end;
                          end
                        else
                        if BAnd(my_bits_low,$10000000) <> 0 then { if plat[E4] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_high := BOr(my_bits_high,$00020408);
                            opp_bits_high := BXOr(opp_bits_high,$00020408);
                          end;
                      end
                    else
                    if BAnd(my_bits_high,$00000008) <> 0 then { if plat[D5] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$00020400);
                        opp_bits_high := BXOr(opp_bits_high,$00020400);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00000400) <> 0 then { if plat[C6] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00020000);
                    opp_bits_high := BXOr(opp_bits_high,$00020000);
                  end;
              end;
            if BAnd(opp_bits_high,$02000000) <> 0 then { if plat[B8] = adversaire then }
              begin
                if BAnd(opp_bits_high,$04000000) <> 0 then { if plat[C8] = adversaire then }
                  begin
                    if BAnd(opp_bits_high,$08000000) <> 0 then { if plat[D8] = adversaire then }
                      begin
                        if BAnd(opp_bits_high,$10000000) <> 0 then { if plat[E8] = adversaire then }
                          begin
                            if BAnd(opp_bits_high,$20000000) <> 0 then { if plat[F8] = adversaire then }
                              begin
                                if BAnd(opp_bits_high,$40000000) <> 0 then { if plat[G8] = adversaire then }
                                  begin
                                    if BAnd(my_bits_high,$80000000) <> 0 then { if plat[H8] = couleur then }
                                      begin
                                        nbprise := nbprise + 12;
                                        my_bits_high := BOr(my_bits_high,$7E000000);
                                        opp_bits_high := BXOr(opp_bits_high,$7E000000);
                                      end;
                                  end
                                else
                                if BAnd(my_bits_high,$40000000) <> 0 then { if plat[G8] = couleur then }
                                  begin
                                    nbprise := nbprise + 10;
                                    my_bits_high := BOr(my_bits_high,$3E000000);
                                    opp_bits_high := BXOr(opp_bits_high,$3E000000);
                                  end;
                              end
                            else
                            if BAnd(my_bits_high,$20000000) <> 0 then { if plat[F8] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_high := BOr(my_bits_high,$1E000000);
                                opp_bits_high := BXOr(opp_bits_high,$1E000000);
                              end;
                          end
                        else
                        if BAnd(my_bits_high,$10000000) <> 0 then { if plat[E8] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_high := BOr(my_bits_high,$0E000000);
                            opp_bits_high := BXOr(opp_bits_high,$0E000000);
                          end;
                      end
                    else
                    if BAnd(my_bits_high,$08000000) <> 0 then { if plat[D8] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$06000000);
                        opp_bits_high := BXOr(opp_bits_high,$06000000);
                      end;
                  end
                else
                if BAnd(my_bits_high,$04000000) <> 0 then { if plat[C8] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$02000000);
                    opp_bits_high := BXOr(opp_bits_high,$02000000);
                  end;
              end;
            if (nbPrise <> 0)
              then
                begin
                  diffPions := succ(diffPions+nbprise);
                  ModifPlatBitboard := BXOr(vecteurParite,$00000004);
                  my_bits_high := BOr(my_bits_high,$01000000);  { place the disc in A8 }
                  g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
                  g_my_bits_high  := opp_bits_high;
                  g_opp_bits_low  := my_bits_low;
                  g_opp_bits_high := my_bits_high;
                end
              else
                ModifPlatBitboard := vecteurParite;
          end;
        82 :    { B8 }
          begin
            if BAnd(opp_bits_high,$00020000) <> 0 then { if plat[B7] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00000200) <> 0 then { if plat[B6] = adversaire then }
                  begin
                    if BAnd(opp_bits_high,$00000002) <> 0 then { if plat[B5] = adversaire then }
                      begin
                        if BAnd(opp_bits_low,$02000000) <> 0 then { if plat[B4] = adversaire then }
                          begin
                            if BAnd(opp_bits_low,$00020000) <> 0 then { if plat[B3] = adversaire then }
                              begin
                                if BAnd(opp_bits_low,$00000200) <> 0 then { if plat[B2] = adversaire then }
                                  begin
                                    if BAnd(my_bits_low,$00000002) <> 0 then { if plat[B1] = couleur then }
                                      begin
                                        nbprise := nbprise + 12;
                                        my_bits_low := BOr(my_bits_low,$02020200);
                                        opp_bits_low := BXOr(opp_bits_low,$02020200);
                                        my_bits_high := BOr(my_bits_high,$00020202);
                                        opp_bits_high := BXOr(opp_bits_high,$00020202);
                                      end;
                                  end
                                else
                                if BAnd(my_bits_low,$00000200) <> 0 then { if plat[B2] = couleur then }
                                  begin
                                    nbprise := nbprise + 10;
                                    my_bits_low := BOr(my_bits_low,$02020000);
                                    opp_bits_low := BXOr(opp_bits_low,$02020000);
                                    my_bits_high := BOr(my_bits_high,$00020202);
                                    opp_bits_high := BXOr(opp_bits_high,$00020202);
                                  end;
                              end
                            else
                            if BAnd(my_bits_low,$00020000) <> 0 then { if plat[B3] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$02000000);
                                opp_bits_low := BXOr(opp_bits_low,$02000000);
                                my_bits_high := BOr(my_bits_high,$00020202);
                                opp_bits_high := BXOr(opp_bits_high,$00020202);
                              end;
                          end
                        else
                        if BAnd(my_bits_low,$02000000) <> 0 then { if plat[B4] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_high := BOr(my_bits_high,$00020202);
                            opp_bits_high := BXOr(opp_bits_high,$00020202);
                          end;
                      end
                    else
                    if BAnd(my_bits_high,$00000002) <> 0 then { if plat[B5] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$00020200);
                        opp_bits_high := BXOr(opp_bits_high,$00020200);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00000200) <> 0 then { if plat[B6] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00020000);
                    opp_bits_high := BXOr(opp_bits_high,$00020000);
                  end;
              end;
            if BAnd(opp_bits_high,$00040000) <> 0 then { if plat[C7] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00000800) <> 0 then { if plat[D6] = adversaire then }
                  begin
                    if BAnd(opp_bits_high,$00000010) <> 0 then { if plat[E5] = adversaire then }
                      begin
                        if BAnd(opp_bits_low,$20000000) <> 0 then { if plat[F4] = adversaire then }
                          begin
                            if BAnd(opp_bits_low,$00400000) <> 0 then { if plat[G3] = adversaire then }
                              begin
                                if BAnd(my_bits_low,$00008000) <> 0 then { if plat[H2] = couleur then }
                                  begin
                                    nbprise := nbprise + 10;
                                    my_bits_low := BOr(my_bits_low,$20400000);
                                    opp_bits_low := BXOr(opp_bits_low,$20400000);
                                    my_bits_high := BOr(my_bits_high,$00040810);
                                    opp_bits_high := BXOr(opp_bits_high,$00040810);
                                  end;
                              end
                            else
                            if BAnd(my_bits_low,$00400000) <> 0 then { if plat[G3] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$20000000);
                                opp_bits_low := BXOr(opp_bits_low,$20000000);
                                my_bits_high := BOr(my_bits_high,$00040810);
                                opp_bits_high := BXOr(opp_bits_high,$00040810);
                              end;
                          end
                        else
                        if BAnd(my_bits_low,$20000000) <> 0 then { if plat[F4] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_high := BOr(my_bits_high,$00040810);
                            opp_bits_high := BXOr(opp_bits_high,$00040810);
                          end;
                      end
                    else
                    if BAnd(my_bits_high,$00000010) <> 0 then { if plat[E5] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$00040800);
                        opp_bits_high := BXOr(opp_bits_high,$00040800);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00000800) <> 0 then { if plat[D6] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00040000);
                    opp_bits_high := BXOr(opp_bits_high,$00040000);
                  end;
              end;
            if BAnd(opp_bits_high,$04000000) <> 0 then { if plat[C8] = adversaire then }
              begin
                if BAnd(opp_bits_high,$08000000) <> 0 then { if plat[D8] = adversaire then }
                  begin
                    if BAnd(opp_bits_high,$10000000) <> 0 then { if plat[E8] = adversaire then }
                      begin
                        if BAnd(opp_bits_high,$20000000) <> 0 then { if plat[F8] = adversaire then }
                          begin
                            if BAnd(opp_bits_high,$40000000) <> 0 then { if plat[G8] = adversaire then }
                              begin
                                if BAnd(my_bits_high,$80000000) <> 0 then { if plat[H8] = couleur then }
                                  begin
                                    nbprise := nbprise + 10;
                                    my_bits_high := BOr(my_bits_high,$7C000000);
                                    opp_bits_high := BXOr(opp_bits_high,$7C000000);
                                  end;
                              end
                            else
                            if BAnd(my_bits_high,$40000000) <> 0 then { if plat[G8] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_high := BOr(my_bits_high,$3C000000);
                                opp_bits_high := BXOr(opp_bits_high,$3C000000);
                              end;
                          end
                        else
                        if BAnd(my_bits_high,$20000000) <> 0 then { if plat[F8] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_high := BOr(my_bits_high,$1C000000);
                            opp_bits_high := BXOr(opp_bits_high,$1C000000);
                          end;
                      end
                    else
                    if BAnd(my_bits_high,$10000000) <> 0 then { if plat[E8] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$0C000000);
                        opp_bits_high := BXOr(opp_bits_high,$0C000000);
                      end;
                  end
                else
                if BAnd(my_bits_high,$08000000) <> 0 then { if plat[D8] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$04000000);
                    opp_bits_high := BXOr(opp_bits_high,$04000000);
                  end;
              end;
            if (nbPrise <> 0)
              then
                begin
                  diffPions := succ(diffPions+nbprise);
                  ModifPlatBitboard := BXOr(vecteurParite,$00000004);
                  my_bits_high := BOr(my_bits_high,$02000000);  { place the disc in B8 }
                  g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
                  g_my_bits_high  := opp_bits_high;
                  g_opp_bits_low  := my_bits_low;
                  g_opp_bits_high := my_bits_high;
                end
              else
                ModifPlatBitboard := vecteurParite;
          end;
        83 :    { C8 }
          begin
            if BAnd(opp_bits_high,$02000000) <> 0 then { if plat[B8] = adversaire then }
              begin
                if BAnd(my_bits_high,$01000000) <> 0 then { if plat[A8] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$02000000);
                    opp_bits_high := BXOr(opp_bits_high,$02000000);
                  end;
              end;
            if BAnd(opp_bits_high,$00020000) <> 0 then { if plat[B7] = adversaire then }
              begin
                if BAnd(my_bits_high,$00000100) <> 0 then { if plat[A6] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00020000);
                    opp_bits_high := BXOr(opp_bits_high,$00020000);
                  end;
              end;
            if BAnd(opp_bits_high,$00040000) <> 0 then { if plat[C7] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00000400) <> 0 then { if plat[C6] = adversaire then }
                  begin
                    if BAnd(opp_bits_high,$00000004) <> 0 then { if plat[C5] = adversaire then }
                      begin
                        if BAnd(opp_bits_low,$04000000) <> 0 then { if plat[C4] = adversaire then }
                          begin
                            if BAnd(opp_bits_low,$00040000) <> 0 then { if plat[C3] = adversaire then }
                              begin
                                if BAnd(opp_bits_low,$00000400) <> 0 then { if plat[C2] = adversaire then }
                                  begin
                                    if BAnd(my_bits_low,$00000004) <> 0 then { if plat[C1] = couleur then }
                                      begin
                                        nbprise := nbprise + 12;
                                        my_bits_low := BOr(my_bits_low,$04040400);
                                        opp_bits_low := BXOr(opp_bits_low,$04040400);
                                        my_bits_high := BOr(my_bits_high,$00040404);
                                        opp_bits_high := BXOr(opp_bits_high,$00040404);
                                      end;
                                  end
                                else
                                if BAnd(my_bits_low,$00000400) <> 0 then { if plat[C2] = couleur then }
                                  begin
                                    nbprise := nbprise + 10;
                                    my_bits_low := BOr(my_bits_low,$04040000);
                                    opp_bits_low := BXOr(opp_bits_low,$04040000);
                                    my_bits_high := BOr(my_bits_high,$00040404);
                                    opp_bits_high := BXOr(opp_bits_high,$00040404);
                                  end;
                              end
                            else
                            if BAnd(my_bits_low,$00040000) <> 0 then { if plat[C3] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$04000000);
                                opp_bits_low := BXOr(opp_bits_low,$04000000);
                                my_bits_high := BOr(my_bits_high,$00040404);
                                opp_bits_high := BXOr(opp_bits_high,$00040404);
                              end;
                          end
                        else
                        if BAnd(my_bits_low,$04000000) <> 0 then { if plat[C4] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_high := BOr(my_bits_high,$00040404);
                            opp_bits_high := BXOr(opp_bits_high,$00040404);
                          end;
                      end
                    else
                    if BAnd(my_bits_high,$00000004) <> 0 then { if plat[C5] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$00040400);
                        opp_bits_high := BXOr(opp_bits_high,$00040400);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00000400) <> 0 then { if plat[C6] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00040000);
                    opp_bits_high := BXOr(opp_bits_high,$00040000);
                  end;
              end;
            if BAnd(opp_bits_high,$00080000) <> 0 then { if plat[D7] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00001000) <> 0 then { if plat[E6] = adversaire then }
                  begin
                    if BAnd(opp_bits_high,$00000020) <> 0 then { if plat[F5] = adversaire then }
                      begin
                        if BAnd(opp_bits_low,$40000000) <> 0 then { if plat[G4] = adversaire then }
                          begin
                            if BAnd(my_bits_low,$00800000) <> 0 then { if plat[H3] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$40000000);
                                opp_bits_low := BXOr(opp_bits_low,$40000000);
                                my_bits_high := BOr(my_bits_high,$00081020);
                                opp_bits_high := BXOr(opp_bits_high,$00081020);
                              end;
                          end
                        else
                        if BAnd(my_bits_low,$40000000) <> 0 then { if plat[G4] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_high := BOr(my_bits_high,$00081020);
                            opp_bits_high := BXOr(opp_bits_high,$00081020);
                          end;
                      end
                    else
                    if BAnd(my_bits_high,$00000020) <> 0 then { if plat[F5] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$00081000);
                        opp_bits_high := BXOr(opp_bits_high,$00081000);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00001000) <> 0 then { if plat[E6] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00080000);
                    opp_bits_high := BXOr(opp_bits_high,$00080000);
                  end;
              end;
            if BAnd(opp_bits_high,$08000000) <> 0 then { if plat[D8] = adversaire then }
              begin
                if BAnd(opp_bits_high,$10000000) <> 0 then { if plat[E8] = adversaire then }
                  begin
                    if BAnd(opp_bits_high,$20000000) <> 0 then { if plat[F8] = adversaire then }
                      begin
                        if BAnd(opp_bits_high,$40000000) <> 0 then { if plat[G8] = adversaire then }
                          begin
                            if BAnd(my_bits_high,$80000000) <> 0 then { if plat[H8] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_high := BOr(my_bits_high,$78000000);
                                opp_bits_high := BXOr(opp_bits_high,$78000000);
                              end;
                          end
                        else
                        if BAnd(my_bits_high,$40000000) <> 0 then { if plat[G8] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_high := BOr(my_bits_high,$38000000);
                            opp_bits_high := BXOr(opp_bits_high,$38000000);
                          end;
                      end
                    else
                    if BAnd(my_bits_high,$20000000) <> 0 then { if plat[F8] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$18000000);
                        opp_bits_high := BXOr(opp_bits_high,$18000000);
                      end;
                  end
                else
                if BAnd(my_bits_high,$10000000) <> 0 then { if plat[E8] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$08000000);
                    opp_bits_high := BXOr(opp_bits_high,$08000000);
                  end;
              end;
            if (nbPrise <> 0)
              then
                begin
                  diffPions := succ(diffPions+nbprise);
                  ModifPlatBitboard := BXOr(vecteurParite,$00000004);
                  my_bits_high := BOr(my_bits_high,$04000000);  { place the disc in C8 }
                  g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
                  g_my_bits_high  := opp_bits_high;
                  g_opp_bits_low  := my_bits_low;
                  g_opp_bits_high := my_bits_high;
                end
              else
                ModifPlatBitboard := vecteurParite;
          end;
        84 :    { D8 }
          begin
            if BAnd(opp_bits_high,$04000000) <> 0 then { if plat[C8] = adversaire then }
              begin
                if BAnd(opp_bits_high,$02000000) <> 0 then { if plat[B8] = adversaire then }
                  begin
                    if BAnd(my_bits_high,$01000000) <> 0 then { if plat[A8] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$06000000);
                        opp_bits_high := BXOr(opp_bits_high,$06000000);
                      end;
                  end
                else
                if BAnd(my_bits_high,$02000000) <> 0 then { if plat[B8] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$04000000);
                    opp_bits_high := BXOr(opp_bits_high,$04000000);
                  end;
              end;
            if BAnd(opp_bits_high,$00040000) <> 0 then { if plat[C7] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00000200) <> 0 then { if plat[B6] = adversaire then }
                  begin
                    if BAnd(my_bits_high,$00000001) <> 0 then { if plat[A5] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$00040200);
                        opp_bits_high := BXOr(opp_bits_high,$00040200);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00000200) <> 0 then { if plat[B6] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00040000);
                    opp_bits_high := BXOr(opp_bits_high,$00040000);
                  end;
              end;
            if BAnd(opp_bits_high,$00080000) <> 0 then { if plat[D7] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00000800) <> 0 then { if plat[D6] = adversaire then }
                  begin
                    if BAnd(opp_bits_high,$00000008) <> 0 then { if plat[D5] = adversaire then }
                      begin
                        if BAnd(opp_bits_low,$08000000) <> 0 then { if plat[D4] = adversaire then }
                          begin
                            if BAnd(opp_bits_low,$00080000) <> 0 then { if plat[D3] = adversaire then }
                              begin
                                if BAnd(opp_bits_low,$00000800) <> 0 then { if plat[D2] = adversaire then }
                                  begin
                                    if BAnd(my_bits_low,$00000008) <> 0 then { if plat[D1] = couleur then }
                                      begin
                                        nbprise := nbprise + 12;
                                        my_bits_low := BOr(my_bits_low,$08080800);
                                        opp_bits_low := BXOr(opp_bits_low,$08080800);
                                        my_bits_high := BOr(my_bits_high,$00080808);
                                        opp_bits_high := BXOr(opp_bits_high,$00080808);
                                      end;
                                  end
                                else
                                if BAnd(my_bits_low,$00000800) <> 0 then { if plat[D2] = couleur then }
                                  begin
                                    nbprise := nbprise + 10;
                                    my_bits_low := BOr(my_bits_low,$08080000);
                                    opp_bits_low := BXOr(opp_bits_low,$08080000);
                                    my_bits_high := BOr(my_bits_high,$00080808);
                                    opp_bits_high := BXOr(opp_bits_high,$00080808);
                                  end;
                              end
                            else
                            if BAnd(my_bits_low,$00080000) <> 0 then { if plat[D3] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$08000000);
                                opp_bits_low := BXOr(opp_bits_low,$08000000);
                                my_bits_high := BOr(my_bits_high,$00080808);
                                opp_bits_high := BXOr(opp_bits_high,$00080808);
                              end;
                          end
                        else
                        if BAnd(my_bits_low,$08000000) <> 0 then { if plat[D4] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_high := BOr(my_bits_high,$00080808);
                            opp_bits_high := BXOr(opp_bits_high,$00080808);
                          end;
                      end
                    else
                    if BAnd(my_bits_high,$00000008) <> 0 then { if plat[D5] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$00080800);
                        opp_bits_high := BXOr(opp_bits_high,$00080800);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00000800) <> 0 then { if plat[D6] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00080000);
                    opp_bits_high := BXOr(opp_bits_high,$00080000);
                  end;
              end;
            if BAnd(opp_bits_high,$00100000) <> 0 then { if plat[E7] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00002000) <> 0 then { if plat[F6] = adversaire then }
                  begin
                    if BAnd(opp_bits_high,$00000040) <> 0 then { if plat[G5] = adversaire then }
                      begin
                        if BAnd(my_bits_low,$80000000) <> 0 then { if plat[H4] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_high := BOr(my_bits_high,$00102040);
                            opp_bits_high := BXOr(opp_bits_high,$00102040);
                          end;
                      end
                    else
                    if BAnd(my_bits_high,$00000040) <> 0 then { if plat[G5] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$00102000);
                        opp_bits_high := BXOr(opp_bits_high,$00102000);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00002000) <> 0 then { if plat[F6] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00100000);
                    opp_bits_high := BXOr(opp_bits_high,$00100000);
                  end;
              end;
            if BAnd(opp_bits_high,$10000000) <> 0 then { if plat[E8] = adversaire then }
              begin
                if BAnd(opp_bits_high,$20000000) <> 0 then { if plat[F8] = adversaire then }
                  begin
                    if BAnd(opp_bits_high,$40000000) <> 0 then { if plat[G8] = adversaire then }
                      begin
                        if BAnd(my_bits_high,$80000000) <> 0 then { if plat[H8] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_high := BOr(my_bits_high,$70000000);
                            opp_bits_high := BXOr(opp_bits_high,$70000000);
                          end;
                      end
                    else
                    if BAnd(my_bits_high,$40000000) <> 0 then { if plat[G8] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$30000000);
                        opp_bits_high := BXOr(opp_bits_high,$30000000);
                      end;
                  end
                else
                if BAnd(my_bits_high,$20000000) <> 0 then { if plat[F8] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$10000000);
                    opp_bits_high := BXOr(opp_bits_high,$10000000);
                  end;
              end;
            if (nbPrise <> 0)
              then
                begin
                  diffPions := succ(diffPions+nbprise);
                  ModifPlatBitboard := BXOr(vecteurParite,$00000004);
                  my_bits_high := BOr(my_bits_high,$08000000);  { place the disc in D8 }
                  g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
                  g_my_bits_high  := opp_bits_high;
                  g_opp_bits_low  := my_bits_low;
                  g_opp_bits_high := my_bits_high;
                end
              else
                ModifPlatBitboard := vecteurParite;
          end;
        85 :    { E8 }
          begin
            if BAnd(opp_bits_high,$08000000) <> 0 then { if plat[D8] = adversaire then }
              begin
                if BAnd(opp_bits_high,$04000000) <> 0 then { if plat[C8] = adversaire then }
                  begin
                    if BAnd(opp_bits_high,$02000000) <> 0 then { if plat[B8] = adversaire then }
                      begin
                        if BAnd(my_bits_high,$01000000) <> 0 then { if plat[A8] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_high := BOr(my_bits_high,$0E000000);
                            opp_bits_high := BXOr(opp_bits_high,$0E000000);
                          end;
                      end
                    else
                    if BAnd(my_bits_high,$02000000) <> 0 then { if plat[B8] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$0C000000);
                        opp_bits_high := BXOr(opp_bits_high,$0C000000);
                      end;
                  end
                else
                if BAnd(my_bits_high,$04000000) <> 0 then { if plat[C8] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$08000000);
                    opp_bits_high := BXOr(opp_bits_high,$08000000);
                  end;
              end;
            if BAnd(opp_bits_high,$00080000) <> 0 then { if plat[D7] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00000400) <> 0 then { if plat[C6] = adversaire then }
                  begin
                    if BAnd(opp_bits_high,$00000002) <> 0 then { if plat[B5] = adversaire then }
                      begin
                        if BAnd(my_bits_low,$01000000) <> 0 then { if plat[A4] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_high := BOr(my_bits_high,$00080402);
                            opp_bits_high := BXOr(opp_bits_high,$00080402);
                          end;
                      end
                    else
                    if BAnd(my_bits_high,$00000002) <> 0 then { if plat[B5] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$00080400);
                        opp_bits_high := BXOr(opp_bits_high,$00080400);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00000400) <> 0 then { if plat[C6] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00080000);
                    opp_bits_high := BXOr(opp_bits_high,$00080000);
                  end;
              end;
            if BAnd(opp_bits_high,$00100000) <> 0 then { if plat[E7] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00001000) <> 0 then { if plat[E6] = adversaire then }
                  begin
                    if BAnd(opp_bits_high,$00000010) <> 0 then { if plat[E5] = adversaire then }
                      begin
                        if BAnd(opp_bits_low,$10000000) <> 0 then { if plat[E4] = adversaire then }
                          begin
                            if BAnd(opp_bits_low,$00100000) <> 0 then { if plat[E3] = adversaire then }
                              begin
                                if BAnd(opp_bits_low,$00001000) <> 0 then { if plat[E2] = adversaire then }
                                  begin
                                    if BAnd(my_bits_low,$00000010) <> 0 then { if plat[E1] = couleur then }
                                      begin
                                        nbprise := nbprise + 12;
                                        my_bits_low := BOr(my_bits_low,$10101000);
                                        opp_bits_low := BXOr(opp_bits_low,$10101000);
                                        my_bits_high := BOr(my_bits_high,$00101010);
                                        opp_bits_high := BXOr(opp_bits_high,$00101010);
                                      end;
                                  end
                                else
                                if BAnd(my_bits_low,$00001000) <> 0 then { if plat[E2] = couleur then }
                                  begin
                                    nbprise := nbprise + 10;
                                    my_bits_low := BOr(my_bits_low,$10100000);
                                    opp_bits_low := BXOr(opp_bits_low,$10100000);
                                    my_bits_high := BOr(my_bits_high,$00101010);
                                    opp_bits_high := BXOr(opp_bits_high,$00101010);
                                  end;
                              end
                            else
                            if BAnd(my_bits_low,$00100000) <> 0 then { if plat[E3] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$10000000);
                                opp_bits_low := BXOr(opp_bits_low,$10000000);
                                my_bits_high := BOr(my_bits_high,$00101010);
                                opp_bits_high := BXOr(opp_bits_high,$00101010);
                              end;
                          end
                        else
                        if BAnd(my_bits_low,$10000000) <> 0 then { if plat[E4] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_high := BOr(my_bits_high,$00101010);
                            opp_bits_high := BXOr(opp_bits_high,$00101010);
                          end;
                      end
                    else
                    if BAnd(my_bits_high,$00000010) <> 0 then { if plat[E5] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$00101000);
                        opp_bits_high := BXOr(opp_bits_high,$00101000);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00001000) <> 0 then { if plat[E6] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00100000);
                    opp_bits_high := BXOr(opp_bits_high,$00100000);
                  end;
              end;
            if BAnd(opp_bits_high,$00200000) <> 0 then { if plat[F7] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00004000) <> 0 then { if plat[G6] = adversaire then }
                  begin
                    if BAnd(my_bits_high,$00000080) <> 0 then { if plat[H5] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$00204000);
                        opp_bits_high := BXOr(opp_bits_high,$00204000);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00004000) <> 0 then { if plat[G6] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00200000);
                    opp_bits_high := BXOr(opp_bits_high,$00200000);
                  end;
              end;
            if BAnd(opp_bits_high,$20000000) <> 0 then { if plat[F8] = adversaire then }
              begin
                if BAnd(opp_bits_high,$40000000) <> 0 then { if plat[G8] = adversaire then }
                  begin
                    if BAnd(my_bits_high,$80000000) <> 0 then { if plat[H8] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$60000000);
                        opp_bits_high := BXOr(opp_bits_high,$60000000);
                      end;
                  end
                else
                if BAnd(my_bits_high,$40000000) <> 0 then { if plat[G8] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$20000000);
                    opp_bits_high := BXOr(opp_bits_high,$20000000);
                  end;
              end;
            if (nbPrise <> 0)
              then
                begin
                  diffPions := succ(diffPions+nbprise);
                  ModifPlatBitboard := BXOr(vecteurParite,$00000008);
                  my_bits_high := BOr(my_bits_high,$10000000);  { place the disc in E8 }
                  g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
                  g_my_bits_high  := opp_bits_high;
                  g_opp_bits_low  := my_bits_low;
                  g_opp_bits_high := my_bits_high;
                end
              else
                ModifPlatBitboard := vecteurParite;
          end;
        86 :    { F8 }
          begin
            if BAnd(opp_bits_high,$10000000) <> 0 then { if plat[E8] = adversaire then }
              begin
                if BAnd(opp_bits_high,$08000000) <> 0 then { if plat[D8] = adversaire then }
                  begin
                    if BAnd(opp_bits_high,$04000000) <> 0 then { if plat[C8] = adversaire then }
                      begin
                        if BAnd(opp_bits_high,$02000000) <> 0 then { if plat[B8] = adversaire then }
                          begin
                            if BAnd(my_bits_high,$01000000) <> 0 then { if plat[A8] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_high := BOr(my_bits_high,$1E000000);
                                opp_bits_high := BXOr(opp_bits_high,$1E000000);
                              end;
                          end
                        else
                        if BAnd(my_bits_high,$02000000) <> 0 then { if plat[B8] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_high := BOr(my_bits_high,$1C000000);
                            opp_bits_high := BXOr(opp_bits_high,$1C000000);
                          end;
                      end
                    else
                    if BAnd(my_bits_high,$04000000) <> 0 then { if plat[C8] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$18000000);
                        opp_bits_high := BXOr(opp_bits_high,$18000000);
                      end;
                  end
                else
                if BAnd(my_bits_high,$08000000) <> 0 then { if plat[D8] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$10000000);
                    opp_bits_high := BXOr(opp_bits_high,$10000000);
                  end;
              end;
            if BAnd(opp_bits_high,$00100000) <> 0 then { if plat[E7] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00000800) <> 0 then { if plat[D6] = adversaire then }
                  begin
                    if BAnd(opp_bits_high,$00000004) <> 0 then { if plat[C5] = adversaire then }
                      begin
                        if BAnd(opp_bits_low,$02000000) <> 0 then { if plat[B4] = adversaire then }
                          begin
                            if BAnd(my_bits_low,$00010000) <> 0 then { if plat[A3] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$02000000);
                                opp_bits_low := BXOr(opp_bits_low,$02000000);
                                my_bits_high := BOr(my_bits_high,$00100804);
                                opp_bits_high := BXOr(opp_bits_high,$00100804);
                              end;
                          end
                        else
                        if BAnd(my_bits_low,$02000000) <> 0 then { if plat[B4] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_high := BOr(my_bits_high,$00100804);
                            opp_bits_high := BXOr(opp_bits_high,$00100804);
                          end;
                      end
                    else
                    if BAnd(my_bits_high,$00000004) <> 0 then { if plat[C5] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$00100800);
                        opp_bits_high := BXOr(opp_bits_high,$00100800);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00000800) <> 0 then { if plat[D6] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00100000);
                    opp_bits_high := BXOr(opp_bits_high,$00100000);
                  end;
              end;
            if BAnd(opp_bits_high,$00200000) <> 0 then { if plat[F7] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00002000) <> 0 then { if plat[F6] = adversaire then }
                  begin
                    if BAnd(opp_bits_high,$00000020) <> 0 then { if plat[F5] = adversaire then }
                      begin
                        if BAnd(opp_bits_low,$20000000) <> 0 then { if plat[F4] = adversaire then }
                          begin
                            if BAnd(opp_bits_low,$00200000) <> 0 then { if plat[F3] = adversaire then }
                              begin
                                if BAnd(opp_bits_low,$00002000) <> 0 then { if plat[F2] = adversaire then }
                                  begin
                                    if BAnd(my_bits_low,$00000020) <> 0 then { if plat[F1] = couleur then }
                                      begin
                                        nbprise := nbprise + 12;
                                        my_bits_low := BOr(my_bits_low,$20202000);
                                        opp_bits_low := BXOr(opp_bits_low,$20202000);
                                        my_bits_high := BOr(my_bits_high,$00202020);
                                        opp_bits_high := BXOr(opp_bits_high,$00202020);
                                      end;
                                  end
                                else
                                if BAnd(my_bits_low,$00002000) <> 0 then { if plat[F2] = couleur then }
                                  begin
                                    nbprise := nbprise + 10;
                                    my_bits_low := BOr(my_bits_low,$20200000);
                                    opp_bits_low := BXOr(opp_bits_low,$20200000);
                                    my_bits_high := BOr(my_bits_high,$00202020);
                                    opp_bits_high := BXOr(opp_bits_high,$00202020);
                                  end;
                              end
                            else
                            if BAnd(my_bits_low,$00200000) <> 0 then { if plat[F3] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$20000000);
                                opp_bits_low := BXOr(opp_bits_low,$20000000);
                                my_bits_high := BOr(my_bits_high,$00202020);
                                opp_bits_high := BXOr(opp_bits_high,$00202020);
                              end;
                          end
                        else
                        if BAnd(my_bits_low,$20000000) <> 0 then { if plat[F4] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_high := BOr(my_bits_high,$00202020);
                            opp_bits_high := BXOr(opp_bits_high,$00202020);
                          end;
                      end
                    else
                    if BAnd(my_bits_high,$00000020) <> 0 then { if plat[F5] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$00202000);
                        opp_bits_high := BXOr(opp_bits_high,$00202000);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00002000) <> 0 then { if plat[F6] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00200000);
                    opp_bits_high := BXOr(opp_bits_high,$00200000);
                  end;
              end;
            if BAnd(opp_bits_high,$00400000) <> 0 then { if plat[G7] = adversaire then }
              begin
                if BAnd(my_bits_high,$00008000) <> 0 then { if plat[H6] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00400000);
                    opp_bits_high := BXOr(opp_bits_high,$00400000);
                  end;
              end;
            if BAnd(opp_bits_high,$40000000) <> 0 then { if plat[G8] = adversaire then }
              begin
                if BAnd(my_bits_high,$80000000) <> 0 then { if plat[H8] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$40000000);
                    opp_bits_high := BXOr(opp_bits_high,$40000000);
                  end;
              end;
            if (nbPrise <> 0)
              then
                begin
                  diffPions := succ(diffPions+nbprise);
                  ModifPlatBitboard := BXOr(vecteurParite,$00000008);
                  my_bits_high := BOr(my_bits_high,$20000000);  { place the disc in F8 }
                  g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
                  g_my_bits_high  := opp_bits_high;
                  g_opp_bits_low  := my_bits_low;
                  g_opp_bits_high := my_bits_high;
                end
              else
                ModifPlatBitboard := vecteurParite;
          end;
        87 :    { G8 }
          begin
            if BAnd(opp_bits_high,$20000000) <> 0 then { if plat[F8] = adversaire then }
              begin
                if BAnd(opp_bits_high,$10000000) <> 0 then { if plat[E8] = adversaire then }
                  begin
                    if BAnd(opp_bits_high,$08000000) <> 0 then { if plat[D8] = adversaire then }
                      begin
                        if BAnd(opp_bits_high,$04000000) <> 0 then { if plat[C8] = adversaire then }
                          begin
                            if BAnd(opp_bits_high,$02000000) <> 0 then { if plat[B8] = adversaire then }
                              begin
                                if BAnd(my_bits_high,$01000000) <> 0 then { if plat[A8] = couleur then }
                                  begin
                                    nbprise := nbprise + 10;
                                    my_bits_high := BOr(my_bits_high,$3E000000);
                                    opp_bits_high := BXOr(opp_bits_high,$3E000000);
                                  end;
                              end
                            else
                            if BAnd(my_bits_high,$02000000) <> 0 then { if plat[B8] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_high := BOr(my_bits_high,$3C000000);
                                opp_bits_high := BXOr(opp_bits_high,$3C000000);
                              end;
                          end
                        else
                        if BAnd(my_bits_high,$04000000) <> 0 then { if plat[C8] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_high := BOr(my_bits_high,$38000000);
                            opp_bits_high := BXOr(opp_bits_high,$38000000);
                          end;
                      end
                    else
                    if BAnd(my_bits_high,$08000000) <> 0 then { if plat[D8] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$30000000);
                        opp_bits_high := BXOr(opp_bits_high,$30000000);
                      end;
                  end
                else
                if BAnd(my_bits_high,$10000000) <> 0 then { if plat[E8] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$20000000);
                    opp_bits_high := BXOr(opp_bits_high,$20000000);
                  end;
              end;
            if BAnd(opp_bits_high,$00200000) <> 0 then { if plat[F7] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00001000) <> 0 then { if plat[E6] = adversaire then }
                  begin
                    if BAnd(opp_bits_high,$00000008) <> 0 then { if plat[D5] = adversaire then }
                      begin
                        if BAnd(opp_bits_low,$04000000) <> 0 then { if plat[C4] = adversaire then }
                          begin
                            if BAnd(opp_bits_low,$00020000) <> 0 then { if plat[B3] = adversaire then }
                              begin
                                if BAnd(my_bits_low,$00000100) <> 0 then { if plat[A2] = couleur then }
                                  begin
                                    nbprise := nbprise + 10;
                                    my_bits_low := BOr(my_bits_low,$04020000);
                                    opp_bits_low := BXOr(opp_bits_low,$04020000);
                                    my_bits_high := BOr(my_bits_high,$00201008);
                                    opp_bits_high := BXOr(opp_bits_high,$00201008);
                                  end;
                              end
                            else
                            if BAnd(my_bits_low,$00020000) <> 0 then { if plat[B3] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$04000000);
                                opp_bits_low := BXOr(opp_bits_low,$04000000);
                                my_bits_high := BOr(my_bits_high,$00201008);
                                opp_bits_high := BXOr(opp_bits_high,$00201008);
                              end;
                          end
                        else
                        if BAnd(my_bits_low,$04000000) <> 0 then { if plat[C4] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_high := BOr(my_bits_high,$00201008);
                            opp_bits_high := BXOr(opp_bits_high,$00201008);
                          end;
                      end
                    else
                    if BAnd(my_bits_high,$00000008) <> 0 then { if plat[D5] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$00201000);
                        opp_bits_high := BXOr(opp_bits_high,$00201000);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00001000) <> 0 then { if plat[E6] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00200000);
                    opp_bits_high := BXOr(opp_bits_high,$00200000);
                  end;
              end;
            if BAnd(opp_bits_high,$00400000) <> 0 then { if plat[G7] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00004000) <> 0 then { if plat[G6] = adversaire then }
                  begin
                    if BAnd(opp_bits_high,$00000040) <> 0 then { if plat[G5] = adversaire then }
                      begin
                        if BAnd(opp_bits_low,$40000000) <> 0 then { if plat[G4] = adversaire then }
                          begin
                            if BAnd(opp_bits_low,$00400000) <> 0 then { if plat[G3] = adversaire then }
                              begin
                                if BAnd(opp_bits_low,$00004000) <> 0 then { if plat[G2] = adversaire then }
                                  begin
                                    if BAnd(my_bits_low,$00000040) <> 0 then { if plat[G1] = couleur then }
                                      begin
                                        nbprise := nbprise + 12;
                                        my_bits_low := BOr(my_bits_low,$40404000);
                                        opp_bits_low := BXOr(opp_bits_low,$40404000);
                                        my_bits_high := BOr(my_bits_high,$00404040);
                                        opp_bits_high := BXOr(opp_bits_high,$00404040);
                                      end;
                                  end
                                else
                                if BAnd(my_bits_low,$00004000) <> 0 then { if plat[G2] = couleur then }
                                  begin
                                    nbprise := nbprise + 10;
                                    my_bits_low := BOr(my_bits_low,$40400000);
                                    opp_bits_low := BXOr(opp_bits_low,$40400000);
                                    my_bits_high := BOr(my_bits_high,$00404040);
                                    opp_bits_high := BXOr(opp_bits_high,$00404040);
                                  end;
                              end
                            else
                            if BAnd(my_bits_low,$00400000) <> 0 then { if plat[G3] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$40000000);
                                opp_bits_low := BXOr(opp_bits_low,$40000000);
                                my_bits_high := BOr(my_bits_high,$00404040);
                                opp_bits_high := BXOr(opp_bits_high,$00404040);
                              end;
                          end
                        else
                        if BAnd(my_bits_low,$40000000) <> 0 then { if plat[G4] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_high := BOr(my_bits_high,$00404040);
                            opp_bits_high := BXOr(opp_bits_high,$00404040);
                          end;
                      end
                    else
                    if BAnd(my_bits_high,$00000040) <> 0 then { if plat[G5] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$00404000);
                        opp_bits_high := BXOr(opp_bits_high,$00404000);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00004000) <> 0 then { if plat[G6] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00400000);
                    opp_bits_high := BXOr(opp_bits_high,$00400000);
                  end;
              end;
            if (nbPrise <> 0)
              then
                begin
                  diffPions := succ(diffPions+nbprise);
                  ModifPlatBitboard := BXOr(vecteurParite,$00000008);
                  my_bits_high := BOr(my_bits_high,$40000000);  { place the disc in G8 }
                  g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
                  g_my_bits_high  := opp_bits_high;
                  g_opp_bits_low  := my_bits_low;
                  g_opp_bits_high := my_bits_high;
                end
              else
                ModifPlatBitboard := vecteurParite;
          end;
        88 :    { H8 }
          begin
            if BAnd(opp_bits_high,$40000000) <> 0 then { if plat[G8] = adversaire then }
              begin
                if BAnd(opp_bits_high,$20000000) <> 0 then { if plat[F8] = adversaire then }
                  begin
                    if BAnd(opp_bits_high,$10000000) <> 0 then { if plat[E8] = adversaire then }
                      begin
                        if BAnd(opp_bits_high,$08000000) <> 0 then { if plat[D8] = adversaire then }
                          begin
                            if BAnd(opp_bits_high,$04000000) <> 0 then { if plat[C8] = adversaire then }
                              begin
                                if BAnd(opp_bits_high,$02000000) <> 0 then { if plat[B8] = adversaire then }
                                  begin
                                    if BAnd(my_bits_high,$01000000) <> 0 then { if plat[A8] = couleur then }
                                      begin
                                        nbprise := nbprise + 12;
                                        my_bits_high := BOr(my_bits_high,$7E000000);
                                        opp_bits_high := BXOr(opp_bits_high,$7E000000);
                                      end;
                                  end
                                else
                                if BAnd(my_bits_high,$02000000) <> 0 then { if plat[B8] = couleur then }
                                  begin
                                    nbprise := nbprise + 10;
                                    my_bits_high := BOr(my_bits_high,$7C000000);
                                    opp_bits_high := BXOr(opp_bits_high,$7C000000);
                                  end;
                              end
                            else
                            if BAnd(my_bits_high,$04000000) <> 0 then { if plat[C8] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_high := BOr(my_bits_high,$78000000);
                                opp_bits_high := BXOr(opp_bits_high,$78000000);
                              end;
                          end
                        else
                        if BAnd(my_bits_high,$08000000) <> 0 then { if plat[D8] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_high := BOr(my_bits_high,$70000000);
                            opp_bits_high := BXOr(opp_bits_high,$70000000);
                          end;
                      end
                    else
                    if BAnd(my_bits_high,$10000000) <> 0 then { if plat[E8] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$60000000);
                        opp_bits_high := BXOr(opp_bits_high,$60000000);
                      end;
                  end
                else
                if BAnd(my_bits_high,$20000000) <> 0 then { if plat[F8] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$40000000);
                    opp_bits_high := BXOr(opp_bits_high,$40000000);
                  end;
              end;
            if BAnd(opp_bits_high,$00400000) <> 0 then { if plat[G7] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00002000) <> 0 then { if plat[F6] = adversaire then }
                  begin
                    if BAnd(opp_bits_high,$00000010) <> 0 then { if plat[E5] = adversaire then }
                      begin
                        if BAnd(opp_bits_low,$08000000) <> 0 then { if plat[D4] = adversaire then }
                          begin
                            if BAnd(opp_bits_low,$00040000) <> 0 then { if plat[C3] = adversaire then }
                              begin
                                if BAnd(opp_bits_low,$00000200) <> 0 then { if plat[B2] = adversaire then }
                                  begin
                                    if BAnd(my_bits_low,$00000001) <> 0 then { if plat[A1] = couleur then }
                                      begin
                                        nbprise := nbprise + 12;
                                        my_bits_low := BOr(my_bits_low,$08040200);
                                        opp_bits_low := BXOr(opp_bits_low,$08040200);
                                        my_bits_high := BOr(my_bits_high,$00402010);
                                        opp_bits_high := BXOr(opp_bits_high,$00402010);
                                      end;
                                  end
                                else
                                if BAnd(my_bits_low,$00000200) <> 0 then { if plat[B2] = couleur then }
                                  begin
                                    nbprise := nbprise + 10;
                                    my_bits_low := BOr(my_bits_low,$08040000);
                                    opp_bits_low := BXOr(opp_bits_low,$08040000);
                                    my_bits_high := BOr(my_bits_high,$00402010);
                                    opp_bits_high := BXOr(opp_bits_high,$00402010);
                                  end;
                              end
                            else
                            if BAnd(my_bits_low,$00040000) <> 0 then { if plat[C3] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$08000000);
                                opp_bits_low := BXOr(opp_bits_low,$08000000);
                                my_bits_high := BOr(my_bits_high,$00402010);
                                opp_bits_high := BXOr(opp_bits_high,$00402010);
                              end;
                          end
                        else
                        if BAnd(my_bits_low,$08000000) <> 0 then { if plat[D4] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_high := BOr(my_bits_high,$00402010);
                            opp_bits_high := BXOr(opp_bits_high,$00402010);
                          end;
                      end
                    else
                    if BAnd(my_bits_high,$00000010) <> 0 then { if plat[E5] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$00402000);
                        opp_bits_high := BXOr(opp_bits_high,$00402000);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00002000) <> 0 then { if plat[F6] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00400000);
                    opp_bits_high := BXOr(opp_bits_high,$00400000);
                  end;
              end;
            if BAnd(opp_bits_high,$00800000) <> 0 then { if plat[H7] = adversaire then }
              begin
                if BAnd(opp_bits_high,$00008000) <> 0 then { if plat[H6] = adversaire then }
                  begin
                    if BAnd(opp_bits_high,$00000080) <> 0 then { if plat[H5] = adversaire then }
                      begin
                        if BAnd(opp_bits_low,$80000000) <> 0 then { if plat[H4] = adversaire then }
                          begin
                            if BAnd(opp_bits_low,$00800000) <> 0 then { if plat[H3] = adversaire then }
                              begin
                                if BAnd(opp_bits_low,$00008000) <> 0 then { if plat[H2] = adversaire then }
                                  begin
                                    if BAnd(my_bits_low,$00000080) <> 0 then { if plat[H1] = couleur then }
                                      begin
                                        nbprise := nbprise + 12;
                                        my_bits_low := BOr(my_bits_low,$80808000);
                                        opp_bits_low := BXOr(opp_bits_low,$80808000);
                                        my_bits_high := BOr(my_bits_high,$00808080);
                                        opp_bits_high := BXOr(opp_bits_high,$00808080);
                                      end;
                                  end
                                else
                                if BAnd(my_bits_low,$00008000) <> 0 then { if plat[H2] = couleur then }
                                  begin
                                    nbprise := nbprise + 10;
                                    my_bits_low := BOr(my_bits_low,$80800000);
                                    opp_bits_low := BXOr(opp_bits_low,$80800000);
                                    my_bits_high := BOr(my_bits_high,$00808080);
                                    opp_bits_high := BXOr(opp_bits_high,$00808080);
                                  end;
                              end
                            else
                            if BAnd(my_bits_low,$00800000) <> 0 then { if plat[H3] = couleur then }
                              begin
                                nbprise := nbprise + 8;
                                my_bits_low := BOr(my_bits_low,$80000000);
                                opp_bits_low := BXOr(opp_bits_low,$80000000);
                                my_bits_high := BOr(my_bits_high,$00808080);
                                opp_bits_high := BXOr(opp_bits_high,$00808080);
                              end;
                          end
                        else
                        if BAnd(my_bits_low,$80000000) <> 0 then { if plat[H4] = couleur then }
                          begin
                            nbprise := nbprise + 6;
                            my_bits_high := BOr(my_bits_high,$00808080);
                            opp_bits_high := BXOr(opp_bits_high,$00808080);
                          end;
                      end
                    else
                    if BAnd(my_bits_high,$00000080) <> 0 then { if plat[H5] = couleur then }
                      begin
                        nbprise := nbprise + 4;
                        my_bits_high := BOr(my_bits_high,$00808000);
                        opp_bits_high := BXOr(opp_bits_high,$00808000);
                      end;
                  end
                else
                if BAnd(my_bits_high,$00008000) <> 0 then { if plat[H6] = couleur then }
                  begin
                    nbprise := nbprise + 2;
                    my_bits_high := BOr(my_bits_high,$00800000);
                    opp_bits_high := BXOr(opp_bits_high,$00800000);
                  end;
              end;
            if (nbPrise <> 0)
              then
                begin
                  diffPions := succ(diffPions+nbprise);
                  ModifPlatBitboard := BXOr(vecteurParite,$00000008);
                  my_bits_high := BOr(my_bits_high,$80000000);  { place the disc in H8 }
                  g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
                  g_my_bits_high  := opp_bits_high;
                  g_opp_bits_low  := my_bits_low;
                  g_opp_bits_high := my_bits_high;
                end
              else
                ModifPlatBitboard := vecteurParite;
          end;
		  end;{case}
  end;
end;



function ModifPlatBitboard_a1(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32;
                           var resultat : bitboard; var diffPions : SInt32) : SInt32;
var nbPrise : SInt32;
begin
  with resultat do
    begin
      nbPrise := 0;
      if BAnd(opp_bits_low,$00000002) <> 0 then { if plat[B1] = adversaire then }
        begin
          if BAnd(opp_bits_low,$00000004) <> 0 then { if plat[C1] = adversaire then }
            begin
              if BAnd(opp_bits_low,$00000008) <> 0 then { if plat[D1] = adversaire then }
                begin
                  if BAnd(opp_bits_low,$00000010) <> 0 then { if plat[E1] = adversaire then }
                    begin
                      if BAnd(opp_bits_low,$00000020) <> 0 then { if plat[F1] = adversaire then }
                        begin
                          if BAnd(opp_bits_low,$00000040) <> 0 then { if plat[G1] = adversaire then }
                            begin
                              if BAnd(my_bits_low,$00000080) <> 0 then { if plat[H1] = couleur then }
                                begin
                                  nbPrise := nbPrise + 12;
                                  my_bits_low := BOr(my_bits_low,$0000007E);
                                  opp_bits_low := BXOr(opp_bits_low,$0000007E);
                                end;
                            end
                          else
                          if BAnd(my_bits_low,$00000040) <> 0 then { if plat[G1] = couleur then }
                            begin
                              nbPrise := nbPrise + 10;
                              my_bits_low := BOr(my_bits_low,$0000003E);
                              opp_bits_low := BXOr(opp_bits_low,$0000003E);
                            end;
                        end
                      else
                      if BAnd(my_bits_low,$00000020) <> 0 then { if plat[F1] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$0000001E);
                          opp_bits_low := BXOr(opp_bits_low,$0000001E);
                        end;
                    end
                  else
                  if BAnd(my_bits_low,$00000010) <> 0 then { if plat[E1] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$0000000E);
                      opp_bits_low := BXOr(opp_bits_low,$0000000E);
                    end;
                end
              else
              if BAnd(my_bits_low,$00000008) <> 0 then { if plat[D1] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$00000006);
                  opp_bits_low := BXOr(opp_bits_low,$00000006);
                end;
            end
          else
          if BAnd(my_bits_low,$00000004) <> 0 then { if plat[C1] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00000002);
              opp_bits_low := BXOr(opp_bits_low,$00000002);
            end;
        end;
      if BAnd(opp_bits_low,$00000200) <> 0 then { if plat[B2] = adversaire then }
        begin
          if BAnd(opp_bits_low,$00040000) <> 0 then { if plat[C3] = adversaire then }
            begin
              if BAnd(opp_bits_low,$08000000) <> 0 then { if plat[D4] = adversaire then }
                begin
                  if BAnd(opp_bits_high,$00000010) <> 0 then { if plat[E5] = adversaire then }
                    begin
                      if BAnd(opp_bits_high,$00002000) <> 0 then { if plat[F6] = adversaire then }
                        begin
                          if BAnd(opp_bits_high,$00400000) <> 0 then { if plat[G7] = adversaire then }
                            begin
                              if BAnd(my_bits_high,$80000000) <> 0 then { if plat[H8] = couleur then }
                                begin
                                  nbPrise := nbPrise + 12;
                                  my_bits_low := BOr(my_bits_low,$08040200);
                                  opp_bits_low := BXOr(opp_bits_low,$08040200);
                                  my_bits_high := BOr(my_bits_high,$00402010);
                                  opp_bits_high := BXOr(opp_bits_high,$00402010);
                                end;
                            end
                          else
                          if BAnd(my_bits_high,$00400000) <> 0 then { if plat[G7] = couleur then }
                            begin
                              nbPrise := nbPrise + 10;
                              my_bits_low := BOr(my_bits_low,$08040200);
                              opp_bits_low := BXOr(opp_bits_low,$08040200);
                              my_bits_high := BOr(my_bits_high,$00002010);
                              opp_bits_high := BXOr(opp_bits_high,$00002010);
                            end;
                        end
                      else
                      if BAnd(my_bits_high,$00002000) <> 0 then { if plat[F6] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$08040200);
                          opp_bits_low := BXOr(opp_bits_low,$08040200);
                          my_bits_high := BOr(my_bits_high,$00000010);
                          opp_bits_high := BXOr(opp_bits_high,$00000010);
                        end;
                    end
                  else
                  if BAnd(my_bits_high,$00000010) <> 0 then { if plat[E5] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$08040200);
                      opp_bits_low := BXOr(opp_bits_low,$08040200);
                    end;
                end
              else
              if BAnd(my_bits_low,$08000000) <> 0 then { if plat[D4] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$00040200);
                  opp_bits_low := BXOr(opp_bits_low,$00040200);
                end;
            end
          else
          if BAnd(my_bits_low,$00040000) <> 0 then { if plat[C3] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00000200);
              opp_bits_low := BXOr(opp_bits_low,$00000200);
            end;
        end;
      if BAnd(opp_bits_low,$00000100) <> 0 then { if plat[A2] = adversaire then }
        begin
          if BAnd(opp_bits_low,$00010000) <> 0 then { if plat[A3] = adversaire then }
            begin
              if BAnd(opp_bits_low,$01000000) <> 0 then { if plat[A4] = adversaire then }
                begin
                  if BAnd(opp_bits_high,$00000001) <> 0 then { if plat[A5] = adversaire then }
                    begin
                      if BAnd(opp_bits_high,$00000100) <> 0 then { if plat[A6] = adversaire then }
                        begin
                          if BAnd(opp_bits_high,$00010000) <> 0 then { if plat[A7] = adversaire then }
                            begin
                              if BAnd(my_bits_high,$01000000) <> 0 then { if plat[A8] = couleur then }
                                begin
                                  nbPrise := nbPrise + 12;
                                  my_bits_low := BOr(my_bits_low,$01010100);
                                  opp_bits_low := BXOr(opp_bits_low,$01010100);
                                  my_bits_high := BOr(my_bits_high,$00010101);
                                  opp_bits_high := BXOr(opp_bits_high,$00010101);
                                end;
                            end
                          else
                          if BAnd(my_bits_high,$00010000) <> 0 then { if plat[A7] = couleur then }
                            begin
                              nbPrise := nbPrise + 10;
                              my_bits_low := BOr(my_bits_low,$01010100);
                              opp_bits_low := BXOr(opp_bits_low,$01010100);
                              my_bits_high := BOr(my_bits_high,$00000101);
                              opp_bits_high := BXOr(opp_bits_high,$00000101);
                            end;
                        end
                      else
                      if BAnd(my_bits_high,$00000100) <> 0 then { if plat[A6] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$01010100);
                          opp_bits_low := BXOr(opp_bits_low,$01010100);
                          my_bits_high := BOr(my_bits_high,$00000001);
                          opp_bits_high := BXOr(opp_bits_high,$00000001);
                        end;
                    end
                  else
                  if BAnd(my_bits_high,$00000001) <> 0 then { if plat[A5] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$01010100);
                      opp_bits_low := BXOr(opp_bits_low,$01010100);
                    end;
                end
              else
              if BAnd(my_bits_low,$01000000) <> 0 then { if plat[A4] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$00010100);
                  opp_bits_low := BXOr(opp_bits_low,$00010100);
                end;
            end
          else
          if BAnd(my_bits_low,$00010000) <> 0 then { if plat[A3] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00000100);
              opp_bits_low := BXOr(opp_bits_low,$00000100);
            end;
        end;
    if (nbPrise <> 0)
      then
        begin
          diffPions := succ(diffPions+nbPrise);
          ModifPlatBitboard_a1 := BXOr(vecteurParite,$00000001);
          my_bits_low := BOr(my_bits_low,$00000001);  { place the disc in A1 }
          g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
          g_my_bits_high  := opp_bits_high;
          g_opp_bits_low  := my_bits_low;
          g_opp_bits_high := my_bits_high;
        end
      else
        ModifPlatBitboard_a1 := vecteurParite;
  end;
end;



function ModifPlatBitboard_b1(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32;
                           var resultat : bitboard; var diffPions : SInt32) : SInt32;
var nbPrise : SInt32;
begin
  with resultat do
    begin
      nbPrise := 0;
      if BAnd(opp_bits_low,$00000004) <> 0 then { if plat[C1] = adversaire then }
        begin
          if BAnd(opp_bits_low,$00000008) <> 0 then { if plat[D1] = adversaire then }
            begin
              if BAnd(opp_bits_low,$00000010) <> 0 then { if plat[E1] = adversaire then }
                begin
                  if BAnd(opp_bits_low,$00000020) <> 0 then { if plat[F1] = adversaire then }
                    begin
                      if BAnd(opp_bits_low,$00000040) <> 0 then { if plat[G1] = adversaire then }
                        begin
                          if BAnd(my_bits_low,$00000080) <> 0 then { if plat[H1] = couleur then }
                            begin
                              nbPrise := nbPrise + 10;
                              my_bits_low := BOr(my_bits_low,$0000007C);
                              opp_bits_low := BXOr(opp_bits_low,$0000007C);
                            end;
                        end
                      else
                      if BAnd(my_bits_low,$00000040) <> 0 then { if plat[G1] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$0000003C);
                          opp_bits_low := BXOr(opp_bits_low,$0000003C);
                        end;
                    end
                  else
                  if BAnd(my_bits_low,$00000020) <> 0 then { if plat[F1] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$0000001C);
                      opp_bits_low := BXOr(opp_bits_low,$0000001C);
                    end;
                end
              else
              if BAnd(my_bits_low,$00000010) <> 0 then { if plat[E1] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$0000000C);
                  opp_bits_low := BXOr(opp_bits_low,$0000000C);
                end;
            end
          else
          if BAnd(my_bits_low,$00000008) <> 0 then { if plat[D1] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00000004);
              opp_bits_low := BXOr(opp_bits_low,$00000004);
            end;
        end;
      if BAnd(opp_bits_low,$00000400) <> 0 then { if plat[C2] = adversaire then }
        begin
          if BAnd(opp_bits_low,$00080000) <> 0 then { if plat[D3] = adversaire then }
            begin
              if BAnd(opp_bits_low,$10000000) <> 0 then { if plat[E4] = adversaire then }
                begin
                  if BAnd(opp_bits_high,$00000020) <> 0 then { if plat[F5] = adversaire then }
                    begin
                      if BAnd(opp_bits_high,$00004000) <> 0 then { if plat[G6] = adversaire then }
                        begin
                          if BAnd(my_bits_high,$00800000) <> 0 then { if plat[H7] = couleur then }
                            begin
                              nbPrise := nbPrise + 10;
                              my_bits_low := BOr(my_bits_low,$10080400);
                              opp_bits_low := BXOr(opp_bits_low,$10080400);
                              my_bits_high := BOr(my_bits_high,$00004020);
                              opp_bits_high := BXOr(opp_bits_high,$00004020);
                            end;
                        end
                      else
                      if BAnd(my_bits_high,$00004000) <> 0 then { if plat[G6] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$10080400);
                          opp_bits_low := BXOr(opp_bits_low,$10080400);
                          my_bits_high := BOr(my_bits_high,$00000020);
                          opp_bits_high := BXOr(opp_bits_high,$00000020);
                        end;
                    end
                  else
                  if BAnd(my_bits_high,$00000020) <> 0 then { if plat[F5] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$10080400);
                      opp_bits_low := BXOr(opp_bits_low,$10080400);
                    end;
                end
              else
              if BAnd(my_bits_low,$10000000) <> 0 then { if plat[E4] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$00080400);
                  opp_bits_low := BXOr(opp_bits_low,$00080400);
                end;
            end
          else
          if BAnd(my_bits_low,$00080000) <> 0 then { if plat[D3] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00000400);
              opp_bits_low := BXOr(opp_bits_low,$00000400);
            end;
        end;
      if BAnd(opp_bits_low,$00000200) <> 0 then { if plat[B2] = adversaire then }
        begin
          if BAnd(opp_bits_low,$00020000) <> 0 then { if plat[B3] = adversaire then }
            begin
              if BAnd(opp_bits_low,$02000000) <> 0 then { if plat[B4] = adversaire then }
                begin
                  if BAnd(opp_bits_high,$00000002) <> 0 then { if plat[B5] = adversaire then }
                    begin
                      if BAnd(opp_bits_high,$00000200) <> 0 then { if plat[B6] = adversaire then }
                        begin
                          if BAnd(opp_bits_high,$00020000) <> 0 then { if plat[B7] = adversaire then }
                            begin
                              if BAnd(my_bits_high,$02000000) <> 0 then { if plat[B8] = couleur then }
                                begin
                                  nbPrise := nbPrise + 12;
                                  my_bits_low := BOr(my_bits_low,$02020200);
                                  opp_bits_low := BXOr(opp_bits_low,$02020200);
                                  my_bits_high := BOr(my_bits_high,$00020202);
                                  opp_bits_high := BXOr(opp_bits_high,$00020202);
                                end;
                            end
                          else
                          if BAnd(my_bits_high,$00020000) <> 0 then { if plat[B7] = couleur then }
                            begin
                              nbPrise := nbPrise + 10;
                              my_bits_low := BOr(my_bits_low,$02020200);
                              opp_bits_low := BXOr(opp_bits_low,$02020200);
                              my_bits_high := BOr(my_bits_high,$00000202);
                              opp_bits_high := BXOr(opp_bits_high,$00000202);
                            end;
                        end
                      else
                      if BAnd(my_bits_high,$00000200) <> 0 then { if plat[B6] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$02020200);
                          opp_bits_low := BXOr(opp_bits_low,$02020200);
                          my_bits_high := BOr(my_bits_high,$00000002);
                          opp_bits_high := BXOr(opp_bits_high,$00000002);
                        end;
                    end
                  else
                  if BAnd(my_bits_high,$00000002) <> 0 then { if plat[B5] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$02020200);
                      opp_bits_low := BXOr(opp_bits_low,$02020200);
                    end;
                end
              else
              if BAnd(my_bits_low,$02000000) <> 0 then { if plat[B4] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$00020200);
                  opp_bits_low := BXOr(opp_bits_low,$00020200);
                end;
            end
          else
          if BAnd(my_bits_low,$00020000) <> 0 then { if plat[B3] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00000200);
              opp_bits_low := BXOr(opp_bits_low,$00000200);
            end;
        end;
    if (nbPrise <> 0)
      then
        begin
          diffPions := succ(diffPions+nbPrise);
          ModifPlatBitboard_b1 := BXOr(vecteurParite,$00000001);
          my_bits_low := BOr(my_bits_low,$00000002);  { place the disc in B1 }
          g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
          g_my_bits_high  := opp_bits_high;
          g_opp_bits_low  := my_bits_low;
          g_opp_bits_high := my_bits_high;
        end
      else
        ModifPlatBitboard_b1 := vecteurParite;
  end;
end;



function ModifPlatBitboard_c1(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32;
                           var resultat : bitboard; var diffPions : SInt32) : SInt32;
var nbPrise : SInt32;
begin
  with resultat do
    begin
      nbPrise := 0;
      if BAnd(opp_bits_low,$00000008) <> 0 then { if plat[D1] = adversaire then }
        begin
          if BAnd(opp_bits_low,$00000010) <> 0 then { if plat[E1] = adversaire then }
            begin
              if BAnd(opp_bits_low,$00000020) <> 0 then { if plat[F1] = adversaire then }
                begin
                  if BAnd(opp_bits_low,$00000040) <> 0 then { if plat[G1] = adversaire then }
                    begin
                      if BAnd(my_bits_low,$00000080) <> 0 then { if plat[H1] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$00000078);
                          opp_bits_low := BXOr(opp_bits_low,$00000078);
                        end;
                    end
                  else
                  if BAnd(my_bits_low,$00000040) <> 0 then { if plat[G1] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$00000038);
                      opp_bits_low := BXOr(opp_bits_low,$00000038);
                    end;
                end
              else
              if BAnd(my_bits_low,$00000020) <> 0 then { if plat[F1] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$00000018);
                  opp_bits_low := BXOr(opp_bits_low,$00000018);
                end;
            end
          else
          if BAnd(my_bits_low,$00000010) <> 0 then { if plat[E1] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00000008);
              opp_bits_low := BXOr(opp_bits_low,$00000008);
            end;
        end;
      if BAnd(opp_bits_low,$00000800) <> 0 then { if plat[D2] = adversaire then }
        begin
          if BAnd(opp_bits_low,$00100000) <> 0 then { if plat[E3] = adversaire then }
            begin
              if BAnd(opp_bits_low,$20000000) <> 0 then { if plat[F4] = adversaire then }
                begin
                  if BAnd(opp_bits_high,$00000040) <> 0 then { if plat[G5] = adversaire then }
                    begin
                      if BAnd(my_bits_high,$00008000) <> 0 then { if plat[H6] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$20100800);
                          opp_bits_low := BXOr(opp_bits_low,$20100800);
                          my_bits_high := BOr(my_bits_high,$00000040);
                          opp_bits_high := BXOr(opp_bits_high,$00000040);
                        end;
                    end
                  else
                  if BAnd(my_bits_high,$00000040) <> 0 then { if plat[G5] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$20100800);
                      opp_bits_low := BXOr(opp_bits_low,$20100800);
                    end;
                end
              else
              if BAnd(my_bits_low,$20000000) <> 0 then { if plat[F4] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$00100800);
                  opp_bits_low := BXOr(opp_bits_low,$00100800);
                end;
            end
          else
          if BAnd(my_bits_low,$00100000) <> 0 then { if plat[E3] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00000800);
              opp_bits_low := BXOr(opp_bits_low,$00000800);
            end;
        end;
      if BAnd(opp_bits_low,$00000400) <> 0 then { if plat[C2] = adversaire then }
        begin
          if BAnd(opp_bits_low,$00040000) <> 0 then { if plat[C3] = adversaire then }
            begin
              if BAnd(opp_bits_low,$04000000) <> 0 then { if plat[C4] = adversaire then }
                begin
                  if BAnd(opp_bits_high,$00000004) <> 0 then { if plat[C5] = adversaire then }
                    begin
                      if BAnd(opp_bits_high,$00000400) <> 0 then { if plat[C6] = adversaire then }
                        begin
                          if BAnd(opp_bits_high,$00040000) <> 0 then { if plat[C7] = adversaire then }
                            begin
                              if BAnd(my_bits_high,$04000000) <> 0 then { if plat[C8] = couleur then }
                                begin
                                  nbPrise := nbPrise + 12;
                                  my_bits_low := BOr(my_bits_low,$04040400);
                                  opp_bits_low := BXOr(opp_bits_low,$04040400);
                                  my_bits_high := BOr(my_bits_high,$00040404);
                                  opp_bits_high := BXOr(opp_bits_high,$00040404);
                                end;
                            end
                          else
                          if BAnd(my_bits_high,$00040000) <> 0 then { if plat[C7] = couleur then }
                            begin
                              nbPrise := nbPrise + 10;
                              my_bits_low := BOr(my_bits_low,$04040400);
                              opp_bits_low := BXOr(opp_bits_low,$04040400);
                              my_bits_high := BOr(my_bits_high,$00000404);
                              opp_bits_high := BXOr(opp_bits_high,$00000404);
                            end;
                        end
                      else
                      if BAnd(my_bits_high,$00000400) <> 0 then { if plat[C6] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$04040400);
                          opp_bits_low := BXOr(opp_bits_low,$04040400);
                          my_bits_high := BOr(my_bits_high,$00000004);
                          opp_bits_high := BXOr(opp_bits_high,$00000004);
                        end;
                    end
                  else
                  if BAnd(my_bits_high,$00000004) <> 0 then { if plat[C5] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$04040400);
                      opp_bits_low := BXOr(opp_bits_low,$04040400);
                    end;
                end
              else
              if BAnd(my_bits_low,$04000000) <> 0 then { if plat[C4] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$00040400);
                  opp_bits_low := BXOr(opp_bits_low,$00040400);
                end;
            end
          else
          if BAnd(my_bits_low,$00040000) <> 0 then { if plat[C3] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00000400);
              opp_bits_low := BXOr(opp_bits_low,$00000400);
            end;
        end;
      if BAnd(opp_bits_low,$00000200) <> 0 then { if plat[B2] = adversaire then }
        begin
          if BAnd(my_bits_low,$00010000) <> 0 then { if plat[A3] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00000200);
              opp_bits_low := BXOr(opp_bits_low,$00000200);
            end;
        end;
      if BAnd(opp_bits_low,$00000002) <> 0 then { if plat[B1] = adversaire then }
        begin
          if BAnd(my_bits_low,$00000001) <> 0 then { if plat[A1] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00000002);
              opp_bits_low := BXOr(opp_bits_low,$00000002);
            end;
        end;
    if (nbPrise <> 0)
      then
        begin
          diffPions := succ(diffPions+nbPrise);
          ModifPlatBitboard_c1 := BXOr(vecteurParite,$00000001);
          my_bits_low := BOr(my_bits_low,$00000004);  { place the disc in C1 }
          g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
          g_my_bits_high  := opp_bits_high;
          g_opp_bits_low  := my_bits_low;
          g_opp_bits_high := my_bits_high;
        end
      else
        ModifPlatBitboard_c1 := vecteurParite;
  end;
end;



function ModifPlatBitboard_d1(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32;
                           var resultat : bitboard; var diffPions : SInt32) : SInt32;
var nbPrise : SInt32;
begin
  with resultat do
    begin
      nbPrise := 0;
      if BAnd(opp_bits_low,$00000010) <> 0 then { if plat[E1] = adversaire then }
        begin
          if BAnd(opp_bits_low,$00000020) <> 0 then { if plat[F1] = adversaire then }
            begin
              if BAnd(opp_bits_low,$00000040) <> 0 then { if plat[G1] = adversaire then }
                begin
                  if BAnd(my_bits_low,$00000080) <> 0 then { if plat[H1] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$00000070);
                      opp_bits_low := BXOr(opp_bits_low,$00000070);
                    end;
                end
              else
              if BAnd(my_bits_low,$00000040) <> 0 then { if plat[G1] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$00000030);
                  opp_bits_low := BXOr(opp_bits_low,$00000030);
                end;
            end
          else
          if BAnd(my_bits_low,$00000020) <> 0 then { if plat[F1] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00000010);
              opp_bits_low := BXOr(opp_bits_low,$00000010);
            end;
        end;
      if BAnd(opp_bits_low,$00001000) <> 0 then { if plat[E2] = adversaire then }
        begin
          if BAnd(opp_bits_low,$00200000) <> 0 then { if plat[F3] = adversaire then }
            begin
              if BAnd(opp_bits_low,$40000000) <> 0 then { if plat[G4] = adversaire then }
                begin
                  if BAnd(my_bits_high,$00000080) <> 0 then { if plat[H5] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$40201000);
                      opp_bits_low := BXOr(opp_bits_low,$40201000);
                    end;
                end
              else
              if BAnd(my_bits_low,$40000000) <> 0 then { if plat[G4] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$00201000);
                  opp_bits_low := BXOr(opp_bits_low,$00201000);
                end;
            end
          else
          if BAnd(my_bits_low,$00200000) <> 0 then { if plat[F3] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00001000);
              opp_bits_low := BXOr(opp_bits_low,$00001000);
            end;
        end;
      if BAnd(opp_bits_low,$00000800) <> 0 then { if plat[D2] = adversaire then }
        begin
          if BAnd(opp_bits_low,$00080000) <> 0 then { if plat[D3] = adversaire then }
            begin
              if BAnd(opp_bits_low,$08000000) <> 0 then { if plat[D4] = adversaire then }
                begin
                  if BAnd(opp_bits_high,$00000008) <> 0 then { if plat[D5] = adversaire then }
                    begin
                      if BAnd(opp_bits_high,$00000800) <> 0 then { if plat[D6] = adversaire then }
                        begin
                          if BAnd(opp_bits_high,$00080000) <> 0 then { if plat[D7] = adversaire then }
                            begin
                              if BAnd(my_bits_high,$08000000) <> 0 then { if plat[D8] = couleur then }
                                begin
                                  nbPrise := nbPrise + 12;
                                  my_bits_low := BOr(my_bits_low,$08080800);
                                  opp_bits_low := BXOr(opp_bits_low,$08080800);
                                  my_bits_high := BOr(my_bits_high,$00080808);
                                  opp_bits_high := BXOr(opp_bits_high,$00080808);
                                end;
                            end
                          else
                          if BAnd(my_bits_high,$00080000) <> 0 then { if plat[D7] = couleur then }
                            begin
                              nbPrise := nbPrise + 10;
                              my_bits_low := BOr(my_bits_low,$08080800);
                              opp_bits_low := BXOr(opp_bits_low,$08080800);
                              my_bits_high := BOr(my_bits_high,$00000808);
                              opp_bits_high := BXOr(opp_bits_high,$00000808);
                            end;
                        end
                      else
                      if BAnd(my_bits_high,$00000800) <> 0 then { if plat[D6] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$08080800);
                          opp_bits_low := BXOr(opp_bits_low,$08080800);
                          my_bits_high := BOr(my_bits_high,$00000008);
                          opp_bits_high := BXOr(opp_bits_high,$00000008);
                        end;
                    end
                  else
                  if BAnd(my_bits_high,$00000008) <> 0 then { if plat[D5] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$08080800);
                      opp_bits_low := BXOr(opp_bits_low,$08080800);
                    end;
                end
              else
              if BAnd(my_bits_low,$08000000) <> 0 then { if plat[D4] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$00080800);
                  opp_bits_low := BXOr(opp_bits_low,$00080800);
                end;
            end
          else
          if BAnd(my_bits_low,$00080000) <> 0 then { if plat[D3] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00000800);
              opp_bits_low := BXOr(opp_bits_low,$00000800);
            end;
        end;
      if BAnd(opp_bits_low,$00000400) <> 0 then { if plat[C2] = adversaire then }
        begin
          if BAnd(opp_bits_low,$00020000) <> 0 then { if plat[B3] = adversaire then }
            begin
              if BAnd(my_bits_low,$01000000) <> 0 then { if plat[A4] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$00020400);
                  opp_bits_low := BXOr(opp_bits_low,$00020400);
                end;
            end
          else
          if BAnd(my_bits_low,$00020000) <> 0 then { if plat[B3] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00000400);
              opp_bits_low := BXOr(opp_bits_low,$00000400);
            end;
        end;
      if BAnd(opp_bits_low,$00000004) <> 0 then { if plat[C1] = adversaire then }
        begin
          if BAnd(opp_bits_low,$00000002) <> 0 then { if plat[B1] = adversaire then }
            begin
              if BAnd(my_bits_low,$00000001) <> 0 then { if plat[A1] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$00000006);
                  opp_bits_low := BXOr(opp_bits_low,$00000006);
                end;
            end
          else
          if BAnd(my_bits_low,$00000002) <> 0 then { if plat[B1] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00000004);
              opp_bits_low := BXOr(opp_bits_low,$00000004);
            end;
        end;
    if (nbPrise <> 0)
      then
        begin
          diffPions := succ(diffPions+nbPrise);
          ModifPlatBitboard_d1 := BXOr(vecteurParite,$00000001);
          my_bits_low := BOr(my_bits_low,$00000008);  { place the disc in D1 }
          g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
          g_my_bits_high  := opp_bits_high;
          g_opp_bits_low  := my_bits_low;
          g_opp_bits_high := my_bits_high;
        end
      else
        ModifPlatBitboard_d1 := vecteurParite;
  end;
end;



function ModifPlatBitboard_e1(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32;
                           var resultat : bitboard; var diffPions : SInt32) : SInt32;
var nbPrise : SInt32;
begin
  with resultat do
    begin
      nbPrise := 0;
      if BAnd(opp_bits_low,$00000020) <> 0 then { if plat[F1] = adversaire then }
        begin
          if BAnd(opp_bits_low,$00000040) <> 0 then { if plat[G1] = adversaire then }
            begin
              if BAnd(my_bits_low,$00000080) <> 0 then { if plat[H1] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$00000060);
                  opp_bits_low := BXOr(opp_bits_low,$00000060);
                end;
            end
          else
          if BAnd(my_bits_low,$00000040) <> 0 then { if plat[G1] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00000020);
              opp_bits_low := BXOr(opp_bits_low,$00000020);
            end;
        end;
      if BAnd(opp_bits_low,$00002000) <> 0 then { if plat[F2] = adversaire then }
        begin
          if BAnd(opp_bits_low,$00400000) <> 0 then { if plat[G3] = adversaire then }
            begin
              if BAnd(my_bits_low,$80000000) <> 0 then { if plat[H4] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$00402000);
                  opp_bits_low := BXOr(opp_bits_low,$00402000);
                end;
            end
          else
          if BAnd(my_bits_low,$00400000) <> 0 then { if plat[G3] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00002000);
              opp_bits_low := BXOr(opp_bits_low,$00002000);
            end;
        end;
      if BAnd(opp_bits_low,$00001000) <> 0 then { if plat[E2] = adversaire then }
        begin
          if BAnd(opp_bits_low,$00100000) <> 0 then { if plat[E3] = adversaire then }
            begin
              if BAnd(opp_bits_low,$10000000) <> 0 then { if plat[E4] = adversaire then }
                begin
                  if BAnd(opp_bits_high,$00000010) <> 0 then { if plat[E5] = adversaire then }
                    begin
                      if BAnd(opp_bits_high,$00001000) <> 0 then { if plat[E6] = adversaire then }
                        begin
                          if BAnd(opp_bits_high,$00100000) <> 0 then { if plat[E7] = adversaire then }
                            begin
                              if BAnd(my_bits_high,$10000000) <> 0 then { if plat[E8] = couleur then }
                                begin
                                  nbPrise := nbPrise + 12;
                                  my_bits_low := BOr(my_bits_low,$10101000);
                                  opp_bits_low := BXOr(opp_bits_low,$10101000);
                                  my_bits_high := BOr(my_bits_high,$00101010);
                                  opp_bits_high := BXOr(opp_bits_high,$00101010);
                                end;
                            end
                          else
                          if BAnd(my_bits_high,$00100000) <> 0 then { if plat[E7] = couleur then }
                            begin
                              nbPrise := nbPrise + 10;
                              my_bits_low := BOr(my_bits_low,$10101000);
                              opp_bits_low := BXOr(opp_bits_low,$10101000);
                              my_bits_high := BOr(my_bits_high,$00001010);
                              opp_bits_high := BXOr(opp_bits_high,$00001010);
                            end;
                        end
                      else
                      if BAnd(my_bits_high,$00001000) <> 0 then { if plat[E6] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$10101000);
                          opp_bits_low := BXOr(opp_bits_low,$10101000);
                          my_bits_high := BOr(my_bits_high,$00000010);
                          opp_bits_high := BXOr(opp_bits_high,$00000010);
                        end;
                    end
                  else
                  if BAnd(my_bits_high,$00000010) <> 0 then { if plat[E5] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$10101000);
                      opp_bits_low := BXOr(opp_bits_low,$10101000);
                    end;
                end
              else
              if BAnd(my_bits_low,$10000000) <> 0 then { if plat[E4] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$00101000);
                  opp_bits_low := BXOr(opp_bits_low,$00101000);
                end;
            end
          else
          if BAnd(my_bits_low,$00100000) <> 0 then { if plat[E3] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00001000);
              opp_bits_low := BXOr(opp_bits_low,$00001000);
            end;
        end;
      if BAnd(opp_bits_low,$00000800) <> 0 then { if plat[D2] = adversaire then }
        begin
          if BAnd(opp_bits_low,$00040000) <> 0 then { if plat[C3] = adversaire then }
            begin
              if BAnd(opp_bits_low,$02000000) <> 0 then { if plat[B4] = adversaire then }
                begin
                  if BAnd(my_bits_high,$00000001) <> 0 then { if plat[A5] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$02040800);
                      opp_bits_low := BXOr(opp_bits_low,$02040800);
                    end;
                end
              else
              if BAnd(my_bits_low,$02000000) <> 0 then { if plat[B4] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$00040800);
                  opp_bits_low := BXOr(opp_bits_low,$00040800);
                end;
            end
          else
          if BAnd(my_bits_low,$00040000) <> 0 then { if plat[C3] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00000800);
              opp_bits_low := BXOr(opp_bits_low,$00000800);
            end;
        end;
      if BAnd(opp_bits_low,$00000008) <> 0 then { if plat[D1] = adversaire then }
        begin
          if BAnd(opp_bits_low,$00000004) <> 0 then { if plat[C1] = adversaire then }
            begin
              if BAnd(opp_bits_low,$00000002) <> 0 then { if plat[B1] = adversaire then }
                begin
                  if BAnd(my_bits_low,$00000001) <> 0 then { if plat[A1] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$0000000E);
                      opp_bits_low := BXOr(opp_bits_low,$0000000E);
                    end;
                end
              else
              if BAnd(my_bits_low,$00000002) <> 0 then { if plat[B1] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$0000000C);
                  opp_bits_low := BXOr(opp_bits_low,$0000000C);
                end;
            end
          else
          if BAnd(my_bits_low,$00000004) <> 0 then { if plat[C1] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00000008);
              opp_bits_low := BXOr(opp_bits_low,$00000008);
            end;
        end;
    if (nbPrise <> 0)
      then
        begin
          diffPions := succ(diffPions+nbPrise);
          ModifPlatBitboard_e1 := BXOr(vecteurParite,$00000002);
          my_bits_low := BOr(my_bits_low,$00000010);  { place the disc in E1 }
          g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
          g_my_bits_high  := opp_bits_high;
          g_opp_bits_low  := my_bits_low;
          g_opp_bits_high := my_bits_high;
        end
      else
        ModifPlatBitboard_e1 := vecteurParite;
  end;
end;



function ModifPlatBitboard_f1(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32;
                           var resultat : bitboard; var diffPions : SInt32) : SInt32;
var nbPrise : SInt32;
begin
  with resultat do
    begin
      nbPrise := 0;
      if BAnd(opp_bits_low,$00000040) <> 0 then { if plat[G1] = adversaire then }
        begin
          if BAnd(my_bits_low,$00000080) <> 0 then { if plat[H1] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00000040);
              opp_bits_low := BXOr(opp_bits_low,$00000040);
            end;
        end;
      if BAnd(opp_bits_low,$00004000) <> 0 then { if plat[G2] = adversaire then }
        begin
          if BAnd(my_bits_low,$00800000) <> 0 then { if plat[H3] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00004000);
              opp_bits_low := BXOr(opp_bits_low,$00004000);
            end;
        end;
      if BAnd(opp_bits_low,$00002000) <> 0 then { if plat[F2] = adversaire then }
        begin
          if BAnd(opp_bits_low,$00200000) <> 0 then { if plat[F3] = adversaire then }
            begin
              if BAnd(opp_bits_low,$20000000) <> 0 then { if plat[F4] = adversaire then }
                begin
                  if BAnd(opp_bits_high,$00000020) <> 0 then { if plat[F5] = adversaire then }
                    begin
                      if BAnd(opp_bits_high,$00002000) <> 0 then { if plat[F6] = adversaire then }
                        begin
                          if BAnd(opp_bits_high,$00200000) <> 0 then { if plat[F7] = adversaire then }
                            begin
                              if BAnd(my_bits_high,$20000000) <> 0 then { if plat[F8] = couleur then }
                                begin
                                  nbPrise := nbPrise + 12;
                                  my_bits_low := BOr(my_bits_low,$20202000);
                                  opp_bits_low := BXOr(opp_bits_low,$20202000);
                                  my_bits_high := BOr(my_bits_high,$00202020);
                                  opp_bits_high := BXOr(opp_bits_high,$00202020);
                                end;
                            end
                          else
                          if BAnd(my_bits_high,$00200000) <> 0 then { if plat[F7] = couleur then }
                            begin
                              nbPrise := nbPrise + 10;
                              my_bits_low := BOr(my_bits_low,$20202000);
                              opp_bits_low := BXOr(opp_bits_low,$20202000);
                              my_bits_high := BOr(my_bits_high,$00002020);
                              opp_bits_high := BXOr(opp_bits_high,$00002020);
                            end;
                        end
                      else
                      if BAnd(my_bits_high,$00002000) <> 0 then { if plat[F6] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$20202000);
                          opp_bits_low := BXOr(opp_bits_low,$20202000);
                          my_bits_high := BOr(my_bits_high,$00000020);
                          opp_bits_high := BXOr(opp_bits_high,$00000020);
                        end;
                    end
                  else
                  if BAnd(my_bits_high,$00000020) <> 0 then { if plat[F5] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$20202000);
                      opp_bits_low := BXOr(opp_bits_low,$20202000);
                    end;
                end
              else
              if BAnd(my_bits_low,$20000000) <> 0 then { if plat[F4] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$00202000);
                  opp_bits_low := BXOr(opp_bits_low,$00202000);
                end;
            end
          else
          if BAnd(my_bits_low,$00200000) <> 0 then { if plat[F3] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00002000);
              opp_bits_low := BXOr(opp_bits_low,$00002000);
            end;
        end;
      if BAnd(opp_bits_low,$00001000) <> 0 then { if plat[E2] = adversaire then }
        begin
          if BAnd(opp_bits_low,$00080000) <> 0 then { if plat[D3] = adversaire then }
            begin
              if BAnd(opp_bits_low,$04000000) <> 0 then { if plat[C4] = adversaire then }
                begin
                  if BAnd(opp_bits_high,$00000002) <> 0 then { if plat[B5] = adversaire then }
                    begin
                      if BAnd(my_bits_high,$00000100) <> 0 then { if plat[A6] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$04081000);
                          opp_bits_low := BXOr(opp_bits_low,$04081000);
                          my_bits_high := BOr(my_bits_high,$00000002);
                          opp_bits_high := BXOr(opp_bits_high,$00000002);
                        end;
                    end
                  else
                  if BAnd(my_bits_high,$00000002) <> 0 then { if plat[B5] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$04081000);
                      opp_bits_low := BXOr(opp_bits_low,$04081000);
                    end;
                end
              else
              if BAnd(my_bits_low,$04000000) <> 0 then { if plat[C4] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$00081000);
                  opp_bits_low := BXOr(opp_bits_low,$00081000);
                end;
            end
          else
          if BAnd(my_bits_low,$00080000) <> 0 then { if plat[D3] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00001000);
              opp_bits_low := BXOr(opp_bits_low,$00001000);
            end;
        end;
      if BAnd(opp_bits_low,$00000010) <> 0 then { if plat[E1] = adversaire then }
        begin
          if BAnd(opp_bits_low,$00000008) <> 0 then { if plat[D1] = adversaire then }
            begin
              if BAnd(opp_bits_low,$00000004) <> 0 then { if plat[C1] = adversaire then }
                begin
                  if BAnd(opp_bits_low,$00000002) <> 0 then { if plat[B1] = adversaire then }
                    begin
                      if BAnd(my_bits_low,$00000001) <> 0 then { if plat[A1] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$0000001E);
                          opp_bits_low := BXOr(opp_bits_low,$0000001E);
                        end;
                    end
                  else
                  if BAnd(my_bits_low,$00000002) <> 0 then { if plat[B1] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$0000001C);
                      opp_bits_low := BXOr(opp_bits_low,$0000001C);
                    end;
                end
              else
              if BAnd(my_bits_low,$00000004) <> 0 then { if plat[C1] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$00000018);
                  opp_bits_low := BXOr(opp_bits_low,$00000018);
                end;
            end
          else
          if BAnd(my_bits_low,$00000008) <> 0 then { if plat[D1] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00000010);
              opp_bits_low := BXOr(opp_bits_low,$00000010);
            end;
        end;
    if (nbPrise <> 0)
      then
        begin
          diffPions := succ(diffPions+nbPrise);
          ModifPlatBitboard_f1 := BXOr(vecteurParite,$00000002);
          my_bits_low := BOr(my_bits_low,$00000020);  { place the disc in F1 }
          g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
          g_my_bits_high  := opp_bits_high;
          g_opp_bits_low  := my_bits_low;
          g_opp_bits_high := my_bits_high;
        end
      else
        ModifPlatBitboard_f1 := vecteurParite;
  end;
end;



function ModifPlatBitboard_g1(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32;
                           var resultat : bitboard; var diffPions : SInt32) : SInt32;
var nbPrise : SInt32;
begin
  with resultat do
    begin
      nbPrise := 0;
      if BAnd(opp_bits_low,$00004000) <> 0 then { if plat[G2] = adversaire then }
        begin
          if BAnd(opp_bits_low,$00400000) <> 0 then { if plat[G3] = adversaire then }
            begin
              if BAnd(opp_bits_low,$40000000) <> 0 then { if plat[G4] = adversaire then }
                begin
                  if BAnd(opp_bits_high,$00000040) <> 0 then { if plat[G5] = adversaire then }
                    begin
                      if BAnd(opp_bits_high,$00004000) <> 0 then { if plat[G6] = adversaire then }
                        begin
                          if BAnd(opp_bits_high,$00400000) <> 0 then { if plat[G7] = adversaire then }
                            begin
                              if BAnd(my_bits_high,$40000000) <> 0 then { if plat[G8] = couleur then }
                                begin
                                  nbPrise := nbPrise + 12;
                                  my_bits_low := BOr(my_bits_low,$40404000);
                                  opp_bits_low := BXOr(opp_bits_low,$40404000);
                                  my_bits_high := BOr(my_bits_high,$00404040);
                                  opp_bits_high := BXOr(opp_bits_high,$00404040);
                                end;
                            end
                          else
                          if BAnd(my_bits_high,$00400000) <> 0 then { if plat[G7] = couleur then }
                            begin
                              nbPrise := nbPrise + 10;
                              my_bits_low := BOr(my_bits_low,$40404000);
                              opp_bits_low := BXOr(opp_bits_low,$40404000);
                              my_bits_high := BOr(my_bits_high,$00004040);
                              opp_bits_high := BXOr(opp_bits_high,$00004040);
                            end;
                        end
                      else
                      if BAnd(my_bits_high,$00004000) <> 0 then { if plat[G6] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$40404000);
                          opp_bits_low := BXOr(opp_bits_low,$40404000);
                          my_bits_high := BOr(my_bits_high,$00000040);
                          opp_bits_high := BXOr(opp_bits_high,$00000040);
                        end;
                    end
                  else
                  if BAnd(my_bits_high,$00000040) <> 0 then { if plat[G5] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$40404000);
                      opp_bits_low := BXOr(opp_bits_low,$40404000);
                    end;
                end
              else
              if BAnd(my_bits_low,$40000000) <> 0 then { if plat[G4] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$00404000);
                  opp_bits_low := BXOr(opp_bits_low,$00404000);
                end;
            end
          else
          if BAnd(my_bits_low,$00400000) <> 0 then { if plat[G3] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00004000);
              opp_bits_low := BXOr(opp_bits_low,$00004000);
            end;
        end;
      if BAnd(opp_bits_low,$00002000) <> 0 then { if plat[F2] = adversaire then }
        begin
          if BAnd(opp_bits_low,$00100000) <> 0 then { if plat[E3] = adversaire then }
            begin
              if BAnd(opp_bits_low,$08000000) <> 0 then { if plat[D4] = adversaire then }
                begin
                  if BAnd(opp_bits_high,$00000004) <> 0 then { if plat[C5] = adversaire then }
                    begin
                      if BAnd(opp_bits_high,$00000200) <> 0 then { if plat[B6] = adversaire then }
                        begin
                          if BAnd(my_bits_high,$00010000) <> 0 then { if plat[A7] = couleur then }
                            begin
                              nbPrise := nbPrise + 10;
                              my_bits_low := BOr(my_bits_low,$08102000);
                              opp_bits_low := BXOr(opp_bits_low,$08102000);
                              my_bits_high := BOr(my_bits_high,$00000204);
                              opp_bits_high := BXOr(opp_bits_high,$00000204);
                            end;
                        end
                      else
                      if BAnd(my_bits_high,$00000200) <> 0 then { if plat[B6] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$08102000);
                          opp_bits_low := BXOr(opp_bits_low,$08102000);
                          my_bits_high := BOr(my_bits_high,$00000004);
                          opp_bits_high := BXOr(opp_bits_high,$00000004);
                        end;
                    end
                  else
                  if BAnd(my_bits_high,$00000004) <> 0 then { if plat[C5] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$08102000);
                      opp_bits_low := BXOr(opp_bits_low,$08102000);
                    end;
                end
              else
              if BAnd(my_bits_low,$08000000) <> 0 then { if plat[D4] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$00102000);
                  opp_bits_low := BXOr(opp_bits_low,$00102000);
                end;
            end
          else
          if BAnd(my_bits_low,$00100000) <> 0 then { if plat[E3] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00002000);
              opp_bits_low := BXOr(opp_bits_low,$00002000);
            end;
        end;
      if BAnd(opp_bits_low,$00000020) <> 0 then { if plat[F1] = adversaire then }
        begin
          if BAnd(opp_bits_low,$00000010) <> 0 then { if plat[E1] = adversaire then }
            begin
              if BAnd(opp_bits_low,$00000008) <> 0 then { if plat[D1] = adversaire then }
                begin
                  if BAnd(opp_bits_low,$00000004) <> 0 then { if plat[C1] = adversaire then }
                    begin
                      if BAnd(opp_bits_low,$00000002) <> 0 then { if plat[B1] = adversaire then }
                        begin
                          if BAnd(my_bits_low,$00000001) <> 0 then { if plat[A1] = couleur then }
                            begin
                              nbPrise := nbPrise + 10;
                              my_bits_low := BOr(my_bits_low,$0000003E);
                              opp_bits_low := BXOr(opp_bits_low,$0000003E);
                            end;
                        end
                      else
                      if BAnd(my_bits_low,$00000002) <> 0 then { if plat[B1] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$0000003C);
                          opp_bits_low := BXOr(opp_bits_low,$0000003C);
                        end;
                    end
                  else
                  if BAnd(my_bits_low,$00000004) <> 0 then { if plat[C1] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$00000038);
                      opp_bits_low := BXOr(opp_bits_low,$00000038);
                    end;
                end
              else
              if BAnd(my_bits_low,$00000008) <> 0 then { if plat[D1] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$00000030);
                  opp_bits_low := BXOr(opp_bits_low,$00000030);
                end;
            end
          else
          if BAnd(my_bits_low,$00000010) <> 0 then { if plat[E1] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00000020);
              opp_bits_low := BXOr(opp_bits_low,$00000020);
            end;
        end;
    if (nbPrise <> 0)
      then
        begin
          diffPions := succ(diffPions+nbPrise);
          ModifPlatBitboard_g1 := BXOr(vecteurParite,$00000002);
          my_bits_low := BOr(my_bits_low,$00000040);  { place the disc in G1 }
          g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
          g_my_bits_high  := opp_bits_high;
          g_opp_bits_low  := my_bits_low;
          g_opp_bits_high := my_bits_high;
        end
      else
        ModifPlatBitboard_g1 := vecteurParite;
  end;
end;



function ModifPlatBitboard_h1(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32;
                           var resultat : bitboard; var diffPions : SInt32) : SInt32;
var nbPrise : SInt32;
begin
  with resultat do
    begin
      nbPrise := 0;
      if BAnd(opp_bits_low,$00008000) <> 0 then { if plat[H2] = adversaire then }
        begin
          if BAnd(opp_bits_low,$00800000) <> 0 then { if plat[H3] = adversaire then }
            begin
              if BAnd(opp_bits_low,$80000000) <> 0 then { if plat[H4] = adversaire then }
                begin
                  if BAnd(opp_bits_high,$00000080) <> 0 then { if plat[H5] = adversaire then }
                    begin
                      if BAnd(opp_bits_high,$00008000) <> 0 then { if plat[H6] = adversaire then }
                        begin
                          if BAnd(opp_bits_high,$00800000) <> 0 then { if plat[H7] = adversaire then }
                            begin
                              if BAnd(my_bits_high,$80000000) <> 0 then { if plat[H8] = couleur then }
                                begin
                                  nbPrise := nbPrise + 12;
                                  my_bits_low := BOr(my_bits_low,$80808000);
                                  opp_bits_low := BXOr(opp_bits_low,$80808000);
                                  my_bits_high := BOr(my_bits_high,$00808080);
                                  opp_bits_high := BXOr(opp_bits_high,$00808080);
                                end;
                            end
                          else
                          if BAnd(my_bits_high,$00800000) <> 0 then { if plat[H7] = couleur then }
                            begin
                              nbPrise := nbPrise + 10;
                              my_bits_low := BOr(my_bits_low,$80808000);
                              opp_bits_low := BXOr(opp_bits_low,$80808000);
                              my_bits_high := BOr(my_bits_high,$00008080);
                              opp_bits_high := BXOr(opp_bits_high,$00008080);
                            end;
                        end
                      else
                      if BAnd(my_bits_high,$00008000) <> 0 then { if plat[H6] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$80808000);
                          opp_bits_low := BXOr(opp_bits_low,$80808000);
                          my_bits_high := BOr(my_bits_high,$00000080);
                          opp_bits_high := BXOr(opp_bits_high,$00000080);
                        end;
                    end
                  else
                  if BAnd(my_bits_high,$00000080) <> 0 then { if plat[H5] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$80808000);
                      opp_bits_low := BXOr(opp_bits_low,$80808000);
                    end;
                end
              else
              if BAnd(my_bits_low,$80000000) <> 0 then { if plat[H4] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$00808000);
                  opp_bits_low := BXOr(opp_bits_low,$00808000);
                end;
            end
          else
          if BAnd(my_bits_low,$00800000) <> 0 then { if plat[H3] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00008000);
              opp_bits_low := BXOr(opp_bits_low,$00008000);
            end;
        end;
      if BAnd(opp_bits_low,$00004000) <> 0 then { if plat[G2] = adversaire then }
        begin
          if BAnd(opp_bits_low,$00200000) <> 0 then { if plat[F3] = adversaire then }
            begin
              if BAnd(opp_bits_low,$10000000) <> 0 then { if plat[E4] = adversaire then }
                begin
                  if BAnd(opp_bits_high,$00000008) <> 0 then { if plat[D5] = adversaire then }
                    begin
                      if BAnd(opp_bits_high,$00000400) <> 0 then { if plat[C6] = adversaire then }
                        begin
                          if BAnd(opp_bits_high,$00020000) <> 0 then { if plat[B7] = adversaire then }
                            begin
                              if BAnd(my_bits_high,$01000000) <> 0 then { if plat[A8] = couleur then }
                                begin
                                  nbPrise := nbPrise + 12;
                                  my_bits_low := BOr(my_bits_low,$10204000);
                                  opp_bits_low := BXOr(opp_bits_low,$10204000);
                                  my_bits_high := BOr(my_bits_high,$00020408);
                                  opp_bits_high := BXOr(opp_bits_high,$00020408);
                                end;
                            end
                          else
                          if BAnd(my_bits_high,$00020000) <> 0 then { if plat[B7] = couleur then }
                            begin
                              nbPrise := nbPrise + 10;
                              my_bits_low := BOr(my_bits_low,$10204000);
                              opp_bits_low := BXOr(opp_bits_low,$10204000);
                              my_bits_high := BOr(my_bits_high,$00000408);
                              opp_bits_high := BXOr(opp_bits_high,$00000408);
                            end;
                        end
                      else
                      if BAnd(my_bits_high,$00000400) <> 0 then { if plat[C6] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$10204000);
                          opp_bits_low := BXOr(opp_bits_low,$10204000);
                          my_bits_high := BOr(my_bits_high,$00000008);
                          opp_bits_high := BXOr(opp_bits_high,$00000008);
                        end;
                    end
                  else
                  if BAnd(my_bits_high,$00000008) <> 0 then { if plat[D5] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$10204000);
                      opp_bits_low := BXOr(opp_bits_low,$10204000);
                    end;
                end
              else
              if BAnd(my_bits_low,$10000000) <> 0 then { if plat[E4] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$00204000);
                  opp_bits_low := BXOr(opp_bits_low,$00204000);
                end;
            end
          else
          if BAnd(my_bits_low,$00200000) <> 0 then { if plat[F3] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00004000);
              opp_bits_low := BXOr(opp_bits_low,$00004000);
            end;
        end;
      if BAnd(opp_bits_low,$00000040) <> 0 then { if plat[G1] = adversaire then }
        begin
          if BAnd(opp_bits_low,$00000020) <> 0 then { if plat[F1] = adversaire then }
            begin
              if BAnd(opp_bits_low,$00000010) <> 0 then { if plat[E1] = adversaire then }
                begin
                  if BAnd(opp_bits_low,$00000008) <> 0 then { if plat[D1] = adversaire then }
                    begin
                      if BAnd(opp_bits_low,$00000004) <> 0 then { if plat[C1] = adversaire then }
                        begin
                          if BAnd(opp_bits_low,$00000002) <> 0 then { if plat[B1] = adversaire then }
                            begin
                              if BAnd(my_bits_low,$00000001) <> 0 then { if plat[A1] = couleur then }
                                begin
                                  nbPrise := nbPrise + 12;
                                  my_bits_low := BOr(my_bits_low,$0000007E);
                                  opp_bits_low := BXOr(opp_bits_low,$0000007E);
                                end;
                            end
                          else
                          if BAnd(my_bits_low,$00000002) <> 0 then { if plat[B1] = couleur then }
                            begin
                              nbPrise := nbPrise + 10;
                              my_bits_low := BOr(my_bits_low,$0000007C);
                              opp_bits_low := BXOr(opp_bits_low,$0000007C);
                            end;
                        end
                      else
                      if BAnd(my_bits_low,$00000004) <> 0 then { if plat[C1] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$00000078);
                          opp_bits_low := BXOr(opp_bits_low,$00000078);
                        end;
                    end
                  else
                  if BAnd(my_bits_low,$00000008) <> 0 then { if plat[D1] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$00000070);
                      opp_bits_low := BXOr(opp_bits_low,$00000070);
                    end;
                end
              else
              if BAnd(my_bits_low,$00000010) <> 0 then { if plat[E1] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$00000060);
                  opp_bits_low := BXOr(opp_bits_low,$00000060);
                end;
            end
          else
          if BAnd(my_bits_low,$00000020) <> 0 then { if plat[F1] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00000040);
              opp_bits_low := BXOr(opp_bits_low,$00000040);
            end;
        end;
    if (nbPrise <> 0)
      then
        begin
          diffPions := succ(diffPions+nbPrise);
          ModifPlatBitboard_h1 := BXOr(vecteurParite,$00000002);
          my_bits_low := BOr(my_bits_low,$00000080);  { place the disc in H1 }
          g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
          g_my_bits_high  := opp_bits_high;
          g_opp_bits_low  := my_bits_low;
          g_opp_bits_high := my_bits_high;
        end
      else
        ModifPlatBitboard_h1 := vecteurParite;
  end;
end;



function ModifPlatBitboard_a2(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32;
                           var resultat : bitboard; var diffPions : SInt32) : SInt32;
var nbPrise : SInt32;
begin
  with resultat do
    begin
      nbPrise := 0;
      if BAnd(opp_bits_low,$00000200) <> 0 then { if plat[B2] = adversaire then }
        begin
          if BAnd(opp_bits_low,$00000400) <> 0 then { if plat[C2] = adversaire then }
            begin
              if BAnd(opp_bits_low,$00000800) <> 0 then { if plat[D2] = adversaire then }
                begin
                  if BAnd(opp_bits_low,$00001000) <> 0 then { if plat[E2] = adversaire then }
                    begin
                      if BAnd(opp_bits_low,$00002000) <> 0 then { if plat[F2] = adversaire then }
                        begin
                          if BAnd(opp_bits_low,$00004000) <> 0 then { if plat[G2] = adversaire then }
                            begin
                              if BAnd(my_bits_low,$00008000) <> 0 then { if plat[H2] = couleur then }
                                begin
                                  nbPrise := nbPrise + 12;
                                  my_bits_low := BOr(my_bits_low,$00007E00);
                                  opp_bits_low := BXOr(opp_bits_low,$00007E00);
                                end;
                            end
                          else
                          if BAnd(my_bits_low,$00004000) <> 0 then { if plat[G2] = couleur then }
                            begin
                              nbPrise := nbPrise + 10;
                              my_bits_low := BOr(my_bits_low,$00003E00);
                              opp_bits_low := BXOr(opp_bits_low,$00003E00);
                            end;
                        end
                      else
                      if BAnd(my_bits_low,$00002000) <> 0 then { if plat[F2] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$00001E00);
                          opp_bits_low := BXOr(opp_bits_low,$00001E00);
                        end;
                    end
                  else
                  if BAnd(my_bits_low,$00001000) <> 0 then { if plat[E2] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$00000E00);
                      opp_bits_low := BXOr(opp_bits_low,$00000E00);
                    end;
                end
              else
              if BAnd(my_bits_low,$00000800) <> 0 then { if plat[D2] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$00000600);
                  opp_bits_low := BXOr(opp_bits_low,$00000600);
                end;
            end
          else
          if BAnd(my_bits_low,$00000400) <> 0 then { if plat[C2] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00000200);
              opp_bits_low := BXOr(opp_bits_low,$00000200);
            end;
        end;
      if BAnd(opp_bits_low,$00020000) <> 0 then { if plat[B3] = adversaire then }
        begin
          if BAnd(opp_bits_low,$04000000) <> 0 then { if plat[C4] = adversaire then }
            begin
              if BAnd(opp_bits_high,$00000008) <> 0 then { if plat[D5] = adversaire then }
                begin
                  if BAnd(opp_bits_high,$00001000) <> 0 then { if plat[E6] = adversaire then }
                    begin
                      if BAnd(opp_bits_high,$00200000) <> 0 then { if plat[F7] = adversaire then }
                        begin
                          if BAnd(my_bits_high,$40000000) <> 0 then { if plat[G8] = couleur then }
                            begin
                              nbPrise := nbPrise + 10;
                              my_bits_low := BOr(my_bits_low,$04020000);
                              opp_bits_low := BXOr(opp_bits_low,$04020000);
                              my_bits_high := BOr(my_bits_high,$00201008);
                              opp_bits_high := BXOr(opp_bits_high,$00201008);
                            end;
                        end
                      else
                      if BAnd(my_bits_high,$00200000) <> 0 then { if plat[F7] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$04020000);
                          opp_bits_low := BXOr(opp_bits_low,$04020000);
                          my_bits_high := BOr(my_bits_high,$00001008);
                          opp_bits_high := BXOr(opp_bits_high,$00001008);
                        end;
                    end
                  else
                  if BAnd(my_bits_high,$00001000) <> 0 then { if plat[E6] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$04020000);
                      opp_bits_low := BXOr(opp_bits_low,$04020000);
                      my_bits_high := BOr(my_bits_high,$00000008);
                      opp_bits_high := BXOr(opp_bits_high,$00000008);
                    end;
                end
              else
              if BAnd(my_bits_high,$00000008) <> 0 then { if plat[D5] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$04020000);
                  opp_bits_low := BXOr(opp_bits_low,$04020000);
                end;
            end
          else
          if BAnd(my_bits_low,$04000000) <> 0 then { if plat[C4] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00020000);
              opp_bits_low := BXOr(opp_bits_low,$00020000);
            end;
        end;
      if BAnd(opp_bits_low,$00010000) <> 0 then { if plat[A3] = adversaire then }
        begin
          if BAnd(opp_bits_low,$01000000) <> 0 then { if plat[A4] = adversaire then }
            begin
              if BAnd(opp_bits_high,$00000001) <> 0 then { if plat[A5] = adversaire then }
                begin
                  if BAnd(opp_bits_high,$00000100) <> 0 then { if plat[A6] = adversaire then }
                    begin
                      if BAnd(opp_bits_high,$00010000) <> 0 then { if plat[A7] = adversaire then }
                        begin
                          if BAnd(my_bits_high,$01000000) <> 0 then { if plat[A8] = couleur then }
                            begin
                              nbPrise := nbPrise + 10;
                              my_bits_low := BOr(my_bits_low,$01010000);
                              opp_bits_low := BXOr(opp_bits_low,$01010000);
                              my_bits_high := BOr(my_bits_high,$00010101);
                              opp_bits_high := BXOr(opp_bits_high,$00010101);
                            end;
                        end
                      else
                      if BAnd(my_bits_high,$00010000) <> 0 then { if plat[A7] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$01010000);
                          opp_bits_low := BXOr(opp_bits_low,$01010000);
                          my_bits_high := BOr(my_bits_high,$00000101);
                          opp_bits_high := BXOr(opp_bits_high,$00000101);
                        end;
                    end
                  else
                  if BAnd(my_bits_high,$00000100) <> 0 then { if plat[A6] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$01010000);
                      opp_bits_low := BXOr(opp_bits_low,$01010000);
                      my_bits_high := BOr(my_bits_high,$00000001);
                      opp_bits_high := BXOr(opp_bits_high,$00000001);
                    end;
                end
              else
              if BAnd(my_bits_high,$00000001) <> 0 then { if plat[A5] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$01010000);
                  opp_bits_low := BXOr(opp_bits_low,$01010000);
                end;
            end
          else
          if BAnd(my_bits_low,$01000000) <> 0 then { if plat[A4] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00010000);
              opp_bits_low := BXOr(opp_bits_low,$00010000);
            end;
        end;
    if (nbPrise <> 0)
      then
        begin
          diffPions := succ(diffPions+nbPrise);
          ModifPlatBitboard_a2 := BXOr(vecteurParite,$00000001);
          my_bits_low := BOr(my_bits_low,$00000100);  { place the disc in A2 }
          g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
          g_my_bits_high  := opp_bits_high;
          g_opp_bits_low  := my_bits_low;
          g_opp_bits_high := my_bits_high;
        end
      else
        ModifPlatBitboard_a2 := vecteurParite;
  end;
end;



function ModifPlatBitboard_b2(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32;
                           var resultat : bitboard; var diffPions : SInt32) : SInt32;
var nbPrise : SInt32;
begin
  with resultat do
    begin
      nbPrise := 0;
      if BAnd(opp_bits_low,$00000400) <> 0 then { if plat[C2] = adversaire then }
        begin
          if BAnd(opp_bits_low,$00000800) <> 0 then { if plat[D2] = adversaire then }
            begin
              if BAnd(opp_bits_low,$00001000) <> 0 then { if plat[E2] = adversaire then }
                begin
                  if BAnd(opp_bits_low,$00002000) <> 0 then { if plat[F2] = adversaire then }
                    begin
                      if BAnd(opp_bits_low,$00004000) <> 0 then { if plat[G2] = adversaire then }
                        begin
                          if BAnd(my_bits_low,$00008000) <> 0 then { if plat[H2] = couleur then }
                            begin
                              nbPrise := nbPrise + 10;
                              my_bits_low := BOr(my_bits_low,$00007C00);
                              opp_bits_low := BXOr(opp_bits_low,$00007C00);
                            end;
                        end
                      else
                      if BAnd(my_bits_low,$00004000) <> 0 then { if plat[G2] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$00003C00);
                          opp_bits_low := BXOr(opp_bits_low,$00003C00);
                        end;
                    end
                  else
                  if BAnd(my_bits_low,$00002000) <> 0 then { if plat[F2] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$00001C00);
                      opp_bits_low := BXOr(opp_bits_low,$00001C00);
                    end;
                end
              else
              if BAnd(my_bits_low,$00001000) <> 0 then { if plat[E2] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$00000C00);
                  opp_bits_low := BXOr(opp_bits_low,$00000C00);
                end;
            end
          else
          if BAnd(my_bits_low,$00000800) <> 0 then { if plat[D2] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00000400);
              opp_bits_low := BXOr(opp_bits_low,$00000400);
            end;
        end;
      if BAnd(opp_bits_low,$00040000) <> 0 then { if plat[C3] = adversaire then }
        begin
          if BAnd(opp_bits_low,$08000000) <> 0 then { if plat[D4] = adversaire then }
            begin
              if BAnd(opp_bits_high,$00000010) <> 0 then { if plat[E5] = adversaire then }
                begin
                  if BAnd(opp_bits_high,$00002000) <> 0 then { if plat[F6] = adversaire then }
                    begin
                      if BAnd(opp_bits_high,$00400000) <> 0 then { if plat[G7] = adversaire then }
                        begin
                          if BAnd(my_bits_high,$80000000) <> 0 then { if plat[H8] = couleur then }
                            begin
                              nbPrise := nbPrise + 10;
                              my_bits_low := BOr(my_bits_low,$08040000);
                              opp_bits_low := BXOr(opp_bits_low,$08040000);
                              my_bits_high := BOr(my_bits_high,$00402010);
                              opp_bits_high := BXOr(opp_bits_high,$00402010);
                            end;
                        end
                      else
                      if BAnd(my_bits_high,$00400000) <> 0 then { if plat[G7] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$08040000);
                          opp_bits_low := BXOr(opp_bits_low,$08040000);
                          my_bits_high := BOr(my_bits_high,$00002010);
                          opp_bits_high := BXOr(opp_bits_high,$00002010);
                        end;
                    end
                  else
                  if BAnd(my_bits_high,$00002000) <> 0 then { if plat[F6] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$08040000);
                      opp_bits_low := BXOr(opp_bits_low,$08040000);
                      my_bits_high := BOr(my_bits_high,$00000010);
                      opp_bits_high := BXOr(opp_bits_high,$00000010);
                    end;
                end
              else
              if BAnd(my_bits_high,$00000010) <> 0 then { if plat[E5] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$08040000);
                  opp_bits_low := BXOr(opp_bits_low,$08040000);
                end;
            end
          else
          if BAnd(my_bits_low,$08000000) <> 0 then { if plat[D4] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00040000);
              opp_bits_low := BXOr(opp_bits_low,$00040000);
            end;
        end;
      if BAnd(opp_bits_low,$00020000) <> 0 then { if plat[B3] = adversaire then }
        begin
          if BAnd(opp_bits_low,$02000000) <> 0 then { if plat[B4] = adversaire then }
            begin
              if BAnd(opp_bits_high,$00000002) <> 0 then { if plat[B5] = adversaire then }
                begin
                  if BAnd(opp_bits_high,$00000200) <> 0 then { if plat[B6] = adversaire then }
                    begin
                      if BAnd(opp_bits_high,$00020000) <> 0 then { if plat[B7] = adversaire then }
                        begin
                          if BAnd(my_bits_high,$02000000) <> 0 then { if plat[B8] = couleur then }
                            begin
                              nbPrise := nbPrise + 10;
                              my_bits_low := BOr(my_bits_low,$02020000);
                              opp_bits_low := BXOr(opp_bits_low,$02020000);
                              my_bits_high := BOr(my_bits_high,$00020202);
                              opp_bits_high := BXOr(opp_bits_high,$00020202);
                            end;
                        end
                      else
                      if BAnd(my_bits_high,$00020000) <> 0 then { if plat[B7] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$02020000);
                          opp_bits_low := BXOr(opp_bits_low,$02020000);
                          my_bits_high := BOr(my_bits_high,$00000202);
                          opp_bits_high := BXOr(opp_bits_high,$00000202);
                        end;
                    end
                  else
                  if BAnd(my_bits_high,$00000200) <> 0 then { if plat[B6] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$02020000);
                      opp_bits_low := BXOr(opp_bits_low,$02020000);
                      my_bits_high := BOr(my_bits_high,$00000002);
                      opp_bits_high := BXOr(opp_bits_high,$00000002);
                    end;
                end
              else
              if BAnd(my_bits_high,$00000002) <> 0 then { if plat[B5] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$02020000);
                  opp_bits_low := BXOr(opp_bits_low,$02020000);
                end;
            end
          else
          if BAnd(my_bits_low,$02000000) <> 0 then { if plat[B4] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00020000);
              opp_bits_low := BXOr(opp_bits_low,$00020000);
            end;
        end;
    if (nbPrise <> 0)
      then
        begin
          diffPions := succ(diffPions+nbPrise);
          ModifPlatBitboard_b2 := BXOr(vecteurParite,$00000001);
          my_bits_low := BOr(my_bits_low,$00000200);  { place the disc in B2 }
          g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
          g_my_bits_high  := opp_bits_high;
          g_opp_bits_low  := my_bits_low;
          g_opp_bits_high := my_bits_high;
        end
      else
        ModifPlatBitboard_b2 := vecteurParite;
  end;
end;



function ModifPlatBitboard_c2(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32;
                           var resultat : bitboard; var diffPions : SInt32) : SInt32;
var nbPrise : SInt32;
begin
  with resultat do
    begin
      nbPrise := 0;
      if BAnd(opp_bits_low,$00000800) <> 0 then { if plat[D2] = adversaire then }
        begin
          if BAnd(opp_bits_low,$00001000) <> 0 then { if plat[E2] = adversaire then }
            begin
              if BAnd(opp_bits_low,$00002000) <> 0 then { if plat[F2] = adversaire then }
                begin
                  if BAnd(opp_bits_low,$00004000) <> 0 then { if plat[G2] = adversaire then }
                    begin
                      if BAnd(my_bits_low,$00008000) <> 0 then { if plat[H2] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$00007800);
                          opp_bits_low := BXOr(opp_bits_low,$00007800);
                        end;
                    end
                  else
                  if BAnd(my_bits_low,$00004000) <> 0 then { if plat[G2] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$00003800);
                      opp_bits_low := BXOr(opp_bits_low,$00003800);
                    end;
                end
              else
              if BAnd(my_bits_low,$00002000) <> 0 then { if plat[F2] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$00001800);
                  opp_bits_low := BXOr(opp_bits_low,$00001800);
                end;
            end
          else
          if BAnd(my_bits_low,$00001000) <> 0 then { if plat[E2] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00000800);
              opp_bits_low := BXOr(opp_bits_low,$00000800);
            end;
        end;
      if BAnd(opp_bits_low,$00080000) <> 0 then { if plat[D3] = adversaire then }
        begin
          if BAnd(opp_bits_low,$10000000) <> 0 then { if plat[E4] = adversaire then }
            begin
              if BAnd(opp_bits_high,$00000020) <> 0 then { if plat[F5] = adversaire then }
                begin
                  if BAnd(opp_bits_high,$00004000) <> 0 then { if plat[G6] = adversaire then }
                    begin
                      if BAnd(my_bits_high,$00800000) <> 0 then { if plat[H7] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$10080000);
                          opp_bits_low := BXOr(opp_bits_low,$10080000);
                          my_bits_high := BOr(my_bits_high,$00004020);
                          opp_bits_high := BXOr(opp_bits_high,$00004020);
                        end;
                    end
                  else
                  if BAnd(my_bits_high,$00004000) <> 0 then { if plat[G6] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$10080000);
                      opp_bits_low := BXOr(opp_bits_low,$10080000);
                      my_bits_high := BOr(my_bits_high,$00000020);
                      opp_bits_high := BXOr(opp_bits_high,$00000020);
                    end;
                end
              else
              if BAnd(my_bits_high,$00000020) <> 0 then { if plat[F5] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$10080000);
                  opp_bits_low := BXOr(opp_bits_low,$10080000);
                end;
            end
          else
          if BAnd(my_bits_low,$10000000) <> 0 then { if plat[E4] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00080000);
              opp_bits_low := BXOr(opp_bits_low,$00080000);
            end;
        end;
      if BAnd(opp_bits_low,$00040000) <> 0 then { if plat[C3] = adversaire then }
        begin
          if BAnd(opp_bits_low,$04000000) <> 0 then { if plat[C4] = adversaire then }
            begin
              if BAnd(opp_bits_high,$00000004) <> 0 then { if plat[C5] = adversaire then }
                begin
                  if BAnd(opp_bits_high,$00000400) <> 0 then { if plat[C6] = adversaire then }
                    begin
                      if BAnd(opp_bits_high,$00040000) <> 0 then { if plat[C7] = adversaire then }
                        begin
                          if BAnd(my_bits_high,$04000000) <> 0 then { if plat[C8] = couleur then }
                            begin
                              nbPrise := nbPrise + 10;
                              my_bits_low := BOr(my_bits_low,$04040000);
                              opp_bits_low := BXOr(opp_bits_low,$04040000);
                              my_bits_high := BOr(my_bits_high,$00040404);
                              opp_bits_high := BXOr(opp_bits_high,$00040404);
                            end;
                        end
                      else
                      if BAnd(my_bits_high,$00040000) <> 0 then { if plat[C7] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$04040000);
                          opp_bits_low := BXOr(opp_bits_low,$04040000);
                          my_bits_high := BOr(my_bits_high,$00000404);
                          opp_bits_high := BXOr(opp_bits_high,$00000404);
                        end;
                    end
                  else
                  if BAnd(my_bits_high,$00000400) <> 0 then { if plat[C6] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$04040000);
                      opp_bits_low := BXOr(opp_bits_low,$04040000);
                      my_bits_high := BOr(my_bits_high,$00000004);
                      opp_bits_high := BXOr(opp_bits_high,$00000004);
                    end;
                end
              else
              if BAnd(my_bits_high,$00000004) <> 0 then { if plat[C5] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$04040000);
                  opp_bits_low := BXOr(opp_bits_low,$04040000);
                end;
            end
          else
          if BAnd(my_bits_low,$04000000) <> 0 then { if plat[C4] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00040000);
              opp_bits_low := BXOr(opp_bits_low,$00040000);
            end;
        end;
      if BAnd(opp_bits_low,$00020000) <> 0 then { if plat[B3] = adversaire then }
        begin
          if BAnd(my_bits_low,$01000000) <> 0 then { if plat[A4] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00020000);
              opp_bits_low := BXOr(opp_bits_low,$00020000);
            end;
        end;
      if BAnd(opp_bits_low,$00000200) <> 0 then { if plat[B2] = adversaire then }
        begin
          if BAnd(my_bits_low,$00000100) <> 0 then { if plat[A2] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00000200);
              opp_bits_low := BXOr(opp_bits_low,$00000200);
            end;
        end;
    if (nbPrise <> 0)
      then
        begin
          diffPions := succ(diffPions+nbPrise);
          ModifPlatBitboard_c2 := BXOr(vecteurParite,$00000001);
          my_bits_low := BOr(my_bits_low,$00000400);  { place the disc in C2 }
          g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
          g_my_bits_high  := opp_bits_high;
          g_opp_bits_low  := my_bits_low;
          g_opp_bits_high := my_bits_high;
        end
      else
        ModifPlatBitboard_c2 := vecteurParite;
  end;
end;



function ModifPlatBitboard_d2(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32;
                           var resultat : bitboard; var diffPions : SInt32) : SInt32;
var nbPrise : SInt32;
begin
  with resultat do
    begin
      nbPrise := 0;
      if BAnd(opp_bits_low,$00001000) <> 0 then { if plat[E2] = adversaire then }
        begin
          if BAnd(opp_bits_low,$00002000) <> 0 then { if plat[F2] = adversaire then }
            begin
              if BAnd(opp_bits_low,$00004000) <> 0 then { if plat[G2] = adversaire then }
                begin
                  if BAnd(my_bits_low,$00008000) <> 0 then { if plat[H2] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$00007000);
                      opp_bits_low := BXOr(opp_bits_low,$00007000);
                    end;
                end
              else
              if BAnd(my_bits_low,$00004000) <> 0 then { if plat[G2] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$00003000);
                  opp_bits_low := BXOr(opp_bits_low,$00003000);
                end;
            end
          else
          if BAnd(my_bits_low,$00002000) <> 0 then { if plat[F2] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00001000);
              opp_bits_low := BXOr(opp_bits_low,$00001000);
            end;
        end;
      if BAnd(opp_bits_low,$00100000) <> 0 then { if plat[E3] = adversaire then }
        begin
          if BAnd(opp_bits_low,$20000000) <> 0 then { if plat[F4] = adversaire then }
            begin
              if BAnd(opp_bits_high,$00000040) <> 0 then { if plat[G5] = adversaire then }
                begin
                  if BAnd(my_bits_high,$00008000) <> 0 then { if plat[H6] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$20100000);
                      opp_bits_low := BXOr(opp_bits_low,$20100000);
                      my_bits_high := BOr(my_bits_high,$00000040);
                      opp_bits_high := BXOr(opp_bits_high,$00000040);
                    end;
                end
              else
              if BAnd(my_bits_high,$00000040) <> 0 then { if plat[G5] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$20100000);
                  opp_bits_low := BXOr(opp_bits_low,$20100000);
                end;
            end
          else
          if BAnd(my_bits_low,$20000000) <> 0 then { if plat[F4] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00100000);
              opp_bits_low := BXOr(opp_bits_low,$00100000);
            end;
        end;
      if BAnd(opp_bits_low,$00080000) <> 0 then { if plat[D3] = adversaire then }
        begin
          if BAnd(opp_bits_low,$08000000) <> 0 then { if plat[D4] = adversaire then }
            begin
              if BAnd(opp_bits_high,$00000008) <> 0 then { if plat[D5] = adversaire then }
                begin
                  if BAnd(opp_bits_high,$00000800) <> 0 then { if plat[D6] = adversaire then }
                    begin
                      if BAnd(opp_bits_high,$00080000) <> 0 then { if plat[D7] = adversaire then }
                        begin
                          if BAnd(my_bits_high,$08000000) <> 0 then { if plat[D8] = couleur then }
                            begin
                              nbPrise := nbPrise + 10;
                              my_bits_low := BOr(my_bits_low,$08080000);
                              opp_bits_low := BXOr(opp_bits_low,$08080000);
                              my_bits_high := BOr(my_bits_high,$00080808);
                              opp_bits_high := BXOr(opp_bits_high,$00080808);
                            end;
                        end
                      else
                      if BAnd(my_bits_high,$00080000) <> 0 then { if plat[D7] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$08080000);
                          opp_bits_low := BXOr(opp_bits_low,$08080000);
                          my_bits_high := BOr(my_bits_high,$00000808);
                          opp_bits_high := BXOr(opp_bits_high,$00000808);
                        end;
                    end
                  else
                  if BAnd(my_bits_high,$00000800) <> 0 then { if plat[D6] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$08080000);
                      opp_bits_low := BXOr(opp_bits_low,$08080000);
                      my_bits_high := BOr(my_bits_high,$00000008);
                      opp_bits_high := BXOr(opp_bits_high,$00000008);
                    end;
                end
              else
              if BAnd(my_bits_high,$00000008) <> 0 then { if plat[D5] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$08080000);
                  opp_bits_low := BXOr(opp_bits_low,$08080000);
                end;
            end
          else
          if BAnd(my_bits_low,$08000000) <> 0 then { if plat[D4] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00080000);
              opp_bits_low := BXOr(opp_bits_low,$00080000);
            end;
        end;
      if BAnd(opp_bits_low,$00040000) <> 0 then { if plat[C3] = adversaire then }
        begin
          if BAnd(opp_bits_low,$02000000) <> 0 then { if plat[B4] = adversaire then }
            begin
              if BAnd(my_bits_high,$00000001) <> 0 then { if plat[A5] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$02040000);
                  opp_bits_low := BXOr(opp_bits_low,$02040000);
                end;
            end
          else
          if BAnd(my_bits_low,$02000000) <> 0 then { if plat[B4] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00040000);
              opp_bits_low := BXOr(opp_bits_low,$00040000);
            end;
        end;
      if BAnd(opp_bits_low,$00000400) <> 0 then { if plat[C2] = adversaire then }
        begin
          if BAnd(opp_bits_low,$00000200) <> 0 then { if plat[B2] = adversaire then }
            begin
              if BAnd(my_bits_low,$00000100) <> 0 then { if plat[A2] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$00000600);
                  opp_bits_low := BXOr(opp_bits_low,$00000600);
                end;
            end
          else
          if BAnd(my_bits_low,$00000200) <> 0 then { if plat[B2] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00000400);
              opp_bits_low := BXOr(opp_bits_low,$00000400);
            end;
        end;
    if (nbPrise <> 0)
      then
        begin
          diffPions := succ(diffPions+nbPrise);
          ModifPlatBitboard_d2 := BXOr(vecteurParite,$00000001);
          my_bits_low := BOr(my_bits_low,$00000800);  { place the disc in D2 }
          g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
          g_my_bits_high  := opp_bits_high;
          g_opp_bits_low  := my_bits_low;
          g_opp_bits_high := my_bits_high;
        end
      else
        ModifPlatBitboard_d2 := vecteurParite;
  end;
end;



function ModifPlatBitboard_e2(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32;
                           var resultat : bitboard; var diffPions : SInt32) : SInt32;
var nbPrise : SInt32;
begin
  with resultat do
    begin
      nbPrise := 0;
      if BAnd(opp_bits_low,$00002000) <> 0 then { if plat[F2] = adversaire then }
        begin
          if BAnd(opp_bits_low,$00004000) <> 0 then { if plat[G2] = adversaire then }
            begin
              if BAnd(my_bits_low,$00008000) <> 0 then { if plat[H2] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$00006000);
                  opp_bits_low := BXOr(opp_bits_low,$00006000);
                end;
            end
          else
          if BAnd(my_bits_low,$00004000) <> 0 then { if plat[G2] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00002000);
              opp_bits_low := BXOr(opp_bits_low,$00002000);
            end;
        end;
      if BAnd(opp_bits_low,$00200000) <> 0 then { if plat[F3] = adversaire then }
        begin
          if BAnd(opp_bits_low,$40000000) <> 0 then { if plat[G4] = adversaire then }
            begin
              if BAnd(my_bits_high,$00000080) <> 0 then { if plat[H5] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$40200000);
                  opp_bits_low := BXOr(opp_bits_low,$40200000);
                end;
            end
          else
          if BAnd(my_bits_low,$40000000) <> 0 then { if plat[G4] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00200000);
              opp_bits_low := BXOr(opp_bits_low,$00200000);
            end;
        end;
      if BAnd(opp_bits_low,$00100000) <> 0 then { if plat[E3] = adversaire then }
        begin
          if BAnd(opp_bits_low,$10000000) <> 0 then { if plat[E4] = adversaire then }
            begin
              if BAnd(opp_bits_high,$00000010) <> 0 then { if plat[E5] = adversaire then }
                begin
                  if BAnd(opp_bits_high,$00001000) <> 0 then { if plat[E6] = adversaire then }
                    begin
                      if BAnd(opp_bits_high,$00100000) <> 0 then { if plat[E7] = adversaire then }
                        begin
                          if BAnd(my_bits_high,$10000000) <> 0 then { if plat[E8] = couleur then }
                            begin
                              nbPrise := nbPrise + 10;
                              my_bits_low := BOr(my_bits_low,$10100000);
                              opp_bits_low := BXOr(opp_bits_low,$10100000);
                              my_bits_high := BOr(my_bits_high,$00101010);
                              opp_bits_high := BXOr(opp_bits_high,$00101010);
                            end;
                        end
                      else
                      if BAnd(my_bits_high,$00100000) <> 0 then { if plat[E7] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$10100000);
                          opp_bits_low := BXOr(opp_bits_low,$10100000);
                          my_bits_high := BOr(my_bits_high,$00001010);
                          opp_bits_high := BXOr(opp_bits_high,$00001010);
                        end;
                    end
                  else
                  if BAnd(my_bits_high,$00001000) <> 0 then { if plat[E6] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$10100000);
                      opp_bits_low := BXOr(opp_bits_low,$10100000);
                      my_bits_high := BOr(my_bits_high,$00000010);
                      opp_bits_high := BXOr(opp_bits_high,$00000010);
                    end;
                end
              else
              if BAnd(my_bits_high,$00000010) <> 0 then { if plat[E5] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$10100000);
                  opp_bits_low := BXOr(opp_bits_low,$10100000);
                end;
            end
          else
          if BAnd(my_bits_low,$10000000) <> 0 then { if plat[E4] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00100000);
              opp_bits_low := BXOr(opp_bits_low,$00100000);
            end;
        end;
      if BAnd(opp_bits_low,$00080000) <> 0 then { if plat[D3] = adversaire then }
        begin
          if BAnd(opp_bits_low,$04000000) <> 0 then { if plat[C4] = adversaire then }
            begin
              if BAnd(opp_bits_high,$00000002) <> 0 then { if plat[B5] = adversaire then }
                begin
                  if BAnd(my_bits_high,$00000100) <> 0 then { if plat[A6] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$04080000);
                      opp_bits_low := BXOr(opp_bits_low,$04080000);
                      my_bits_high := BOr(my_bits_high,$00000002);
                      opp_bits_high := BXOr(opp_bits_high,$00000002);
                    end;
                end
              else
              if BAnd(my_bits_high,$00000002) <> 0 then { if plat[B5] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$04080000);
                  opp_bits_low := BXOr(opp_bits_low,$04080000);
                end;
            end
          else
          if BAnd(my_bits_low,$04000000) <> 0 then { if plat[C4] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00080000);
              opp_bits_low := BXOr(opp_bits_low,$00080000);
            end;
        end;
      if BAnd(opp_bits_low,$00000800) <> 0 then { if plat[D2] = adversaire then }
        begin
          if BAnd(opp_bits_low,$00000400) <> 0 then { if plat[C2] = adversaire then }
            begin
              if BAnd(opp_bits_low,$00000200) <> 0 then { if plat[B2] = adversaire then }
                begin
                  if BAnd(my_bits_low,$00000100) <> 0 then { if plat[A2] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$00000E00);
                      opp_bits_low := BXOr(opp_bits_low,$00000E00);
                    end;
                end
              else
              if BAnd(my_bits_low,$00000200) <> 0 then { if plat[B2] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$00000C00);
                  opp_bits_low := BXOr(opp_bits_low,$00000C00);
                end;
            end
          else
          if BAnd(my_bits_low,$00000400) <> 0 then { if plat[C2] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00000800);
              opp_bits_low := BXOr(opp_bits_low,$00000800);
            end;
        end;
    if (nbPrise <> 0)
      then
        begin
          diffPions := succ(diffPions+nbPrise);
          ModifPlatBitboard_e2 := BXOr(vecteurParite,$00000002);
          my_bits_low := BOr(my_bits_low,$00001000);  { place the disc in E2 }
          g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
          g_my_bits_high  := opp_bits_high;
          g_opp_bits_low  := my_bits_low;
          g_opp_bits_high := my_bits_high;
        end
      else
        ModifPlatBitboard_e2 := vecteurParite;
  end;
end;



function ModifPlatBitboard_f2(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32;
                           var resultat : bitboard; var diffPions : SInt32) : SInt32;
var nbPrise : SInt32;
begin
  with resultat do
    begin
      nbPrise := 0;
      if BAnd(opp_bits_low,$00004000) <> 0 then { if plat[G2] = adversaire then }
        begin
          if BAnd(my_bits_low,$00008000) <> 0 then { if plat[H2] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00004000);
              opp_bits_low := BXOr(opp_bits_low,$00004000);
            end;
        end;
      if BAnd(opp_bits_low,$00400000) <> 0 then { if plat[G3] = adversaire then }
        begin
          if BAnd(my_bits_low,$80000000) <> 0 then { if plat[H4] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00400000);
              opp_bits_low := BXOr(opp_bits_low,$00400000);
            end;
        end;
      if BAnd(opp_bits_low,$00200000) <> 0 then { if plat[F3] = adversaire then }
        begin
          if BAnd(opp_bits_low,$20000000) <> 0 then { if plat[F4] = adversaire then }
            begin
              if BAnd(opp_bits_high,$00000020) <> 0 then { if plat[F5] = adversaire then }
                begin
                  if BAnd(opp_bits_high,$00002000) <> 0 then { if plat[F6] = adversaire then }
                    begin
                      if BAnd(opp_bits_high,$00200000) <> 0 then { if plat[F7] = adversaire then }
                        begin
                          if BAnd(my_bits_high,$20000000) <> 0 then { if plat[F8] = couleur then }
                            begin
                              nbPrise := nbPrise + 10;
                              my_bits_low := BOr(my_bits_low,$20200000);
                              opp_bits_low := BXOr(opp_bits_low,$20200000);
                              my_bits_high := BOr(my_bits_high,$00202020);
                              opp_bits_high := BXOr(opp_bits_high,$00202020);
                            end;
                        end
                      else
                      if BAnd(my_bits_high,$00200000) <> 0 then { if plat[F7] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$20200000);
                          opp_bits_low := BXOr(opp_bits_low,$20200000);
                          my_bits_high := BOr(my_bits_high,$00002020);
                          opp_bits_high := BXOr(opp_bits_high,$00002020);
                        end;
                    end
                  else
                  if BAnd(my_bits_high,$00002000) <> 0 then { if plat[F6] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$20200000);
                      opp_bits_low := BXOr(opp_bits_low,$20200000);
                      my_bits_high := BOr(my_bits_high,$00000020);
                      opp_bits_high := BXOr(opp_bits_high,$00000020);
                    end;
                end
              else
              if BAnd(my_bits_high,$00000020) <> 0 then { if plat[F5] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$20200000);
                  opp_bits_low := BXOr(opp_bits_low,$20200000);
                end;
            end
          else
          if BAnd(my_bits_low,$20000000) <> 0 then { if plat[F4] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00200000);
              opp_bits_low := BXOr(opp_bits_low,$00200000);
            end;
        end;
      if BAnd(opp_bits_low,$00100000) <> 0 then { if plat[E3] = adversaire then }
        begin
          if BAnd(opp_bits_low,$08000000) <> 0 then { if plat[D4] = adversaire then }
            begin
              if BAnd(opp_bits_high,$00000004) <> 0 then { if plat[C5] = adversaire then }
                begin
                  if BAnd(opp_bits_high,$00000200) <> 0 then { if plat[B6] = adversaire then }
                    begin
                      if BAnd(my_bits_high,$00010000) <> 0 then { if plat[A7] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$08100000);
                          opp_bits_low := BXOr(opp_bits_low,$08100000);
                          my_bits_high := BOr(my_bits_high,$00000204);
                          opp_bits_high := BXOr(opp_bits_high,$00000204);
                        end;
                    end
                  else
                  if BAnd(my_bits_high,$00000200) <> 0 then { if plat[B6] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$08100000);
                      opp_bits_low := BXOr(opp_bits_low,$08100000);
                      my_bits_high := BOr(my_bits_high,$00000004);
                      opp_bits_high := BXOr(opp_bits_high,$00000004);
                    end;
                end
              else
              if BAnd(my_bits_high,$00000004) <> 0 then { if plat[C5] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$08100000);
                  opp_bits_low := BXOr(opp_bits_low,$08100000);
                end;
            end
          else
          if BAnd(my_bits_low,$08000000) <> 0 then { if plat[D4] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00100000);
              opp_bits_low := BXOr(opp_bits_low,$00100000);
            end;
        end;
      if BAnd(opp_bits_low,$00001000) <> 0 then { if plat[E2] = adversaire then }
        begin
          if BAnd(opp_bits_low,$00000800) <> 0 then { if plat[D2] = adversaire then }
            begin
              if BAnd(opp_bits_low,$00000400) <> 0 then { if plat[C2] = adversaire then }
                begin
                  if BAnd(opp_bits_low,$00000200) <> 0 then { if plat[B2] = adversaire then }
                    begin
                      if BAnd(my_bits_low,$00000100) <> 0 then { if plat[A2] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$00001E00);
                          opp_bits_low := BXOr(opp_bits_low,$00001E00);
                        end;
                    end
                  else
                  if BAnd(my_bits_low,$00000200) <> 0 then { if plat[B2] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$00001C00);
                      opp_bits_low := BXOr(opp_bits_low,$00001C00);
                    end;
                end
              else
              if BAnd(my_bits_low,$00000400) <> 0 then { if plat[C2] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$00001800);
                  opp_bits_low := BXOr(opp_bits_low,$00001800);
                end;
            end
          else
          if BAnd(my_bits_low,$00000800) <> 0 then { if plat[D2] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00001000);
              opp_bits_low := BXOr(opp_bits_low,$00001000);
            end;
        end;
    if (nbPrise <> 0)
      then
        begin
          diffPions := succ(diffPions+nbPrise);
          ModifPlatBitboard_f2 := BXOr(vecteurParite,$00000002);
          my_bits_low := BOr(my_bits_low,$00002000);  { place the disc in F2 }
          g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
          g_my_bits_high  := opp_bits_high;
          g_opp_bits_low  := my_bits_low;
          g_opp_bits_high := my_bits_high;
        end
      else
        ModifPlatBitboard_f2 := vecteurParite;
  end;
end;



function ModifPlatBitboard_g2(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32;
                           var resultat : bitboard; var diffPions : SInt32) : SInt32;
var nbPrise : SInt32;
begin
  with resultat do
    begin
      nbPrise := 0;
      if BAnd(opp_bits_low,$00400000) <> 0 then { if plat[G3] = adversaire then }
        begin
          if BAnd(opp_bits_low,$40000000) <> 0 then { if plat[G4] = adversaire then }
            begin
              if BAnd(opp_bits_high,$00000040) <> 0 then { if plat[G5] = adversaire then }
                begin
                  if BAnd(opp_bits_high,$00004000) <> 0 then { if plat[G6] = adversaire then }
                    begin
                      if BAnd(opp_bits_high,$00400000) <> 0 then { if plat[G7] = adversaire then }
                        begin
                          if BAnd(my_bits_high,$40000000) <> 0 then { if plat[G8] = couleur then }
                            begin
                              nbPrise := nbPrise + 10;
                              my_bits_low := BOr(my_bits_low,$40400000);
                              opp_bits_low := BXOr(opp_bits_low,$40400000);
                              my_bits_high := BOr(my_bits_high,$00404040);
                              opp_bits_high := BXOr(opp_bits_high,$00404040);
                            end;
                        end
                      else
                      if BAnd(my_bits_high,$00400000) <> 0 then { if plat[G7] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$40400000);
                          opp_bits_low := BXOr(opp_bits_low,$40400000);
                          my_bits_high := BOr(my_bits_high,$00004040);
                          opp_bits_high := BXOr(opp_bits_high,$00004040);
                        end;
                    end
                  else
                  if BAnd(my_bits_high,$00004000) <> 0 then { if plat[G6] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$40400000);
                      opp_bits_low := BXOr(opp_bits_low,$40400000);
                      my_bits_high := BOr(my_bits_high,$00000040);
                      opp_bits_high := BXOr(opp_bits_high,$00000040);
                    end;
                end
              else
              if BAnd(my_bits_high,$00000040) <> 0 then { if plat[G5] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$40400000);
                  opp_bits_low := BXOr(opp_bits_low,$40400000);
                end;
            end
          else
          if BAnd(my_bits_low,$40000000) <> 0 then { if plat[G4] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00400000);
              opp_bits_low := BXOr(opp_bits_low,$00400000);
            end;
        end;
      if BAnd(opp_bits_low,$00200000) <> 0 then { if plat[F3] = adversaire then }
        begin
          if BAnd(opp_bits_low,$10000000) <> 0 then { if plat[E4] = adversaire then }
            begin
              if BAnd(opp_bits_high,$00000008) <> 0 then { if plat[D5] = adversaire then }
                begin
                  if BAnd(opp_bits_high,$00000400) <> 0 then { if plat[C6] = adversaire then }
                    begin
                      if BAnd(opp_bits_high,$00020000) <> 0 then { if plat[B7] = adversaire then }
                        begin
                          if BAnd(my_bits_high,$01000000) <> 0 then { if plat[A8] = couleur then }
                            begin
                              nbPrise := nbPrise + 10;
                              my_bits_low := BOr(my_bits_low,$10200000);
                              opp_bits_low := BXOr(opp_bits_low,$10200000);
                              my_bits_high := BOr(my_bits_high,$00020408);
                              opp_bits_high := BXOr(opp_bits_high,$00020408);
                            end;
                        end
                      else
                      if BAnd(my_bits_high,$00020000) <> 0 then { if plat[B7] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$10200000);
                          opp_bits_low := BXOr(opp_bits_low,$10200000);
                          my_bits_high := BOr(my_bits_high,$00000408);
                          opp_bits_high := BXOr(opp_bits_high,$00000408);
                        end;
                    end
                  else
                  if BAnd(my_bits_high,$00000400) <> 0 then { if plat[C6] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$10200000);
                      opp_bits_low := BXOr(opp_bits_low,$10200000);
                      my_bits_high := BOr(my_bits_high,$00000008);
                      opp_bits_high := BXOr(opp_bits_high,$00000008);
                    end;
                end
              else
              if BAnd(my_bits_high,$00000008) <> 0 then { if plat[D5] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$10200000);
                  opp_bits_low := BXOr(opp_bits_low,$10200000);
                end;
            end
          else
          if BAnd(my_bits_low,$10000000) <> 0 then { if plat[E4] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00200000);
              opp_bits_low := BXOr(opp_bits_low,$00200000);
            end;
        end;
      if BAnd(opp_bits_low,$00002000) <> 0 then { if plat[F2] = adversaire then }
        begin
          if BAnd(opp_bits_low,$00001000) <> 0 then { if plat[E2] = adversaire then }
            begin
              if BAnd(opp_bits_low,$00000800) <> 0 then { if plat[D2] = adversaire then }
                begin
                  if BAnd(opp_bits_low,$00000400) <> 0 then { if plat[C2] = adversaire then }
                    begin
                      if BAnd(opp_bits_low,$00000200) <> 0 then { if plat[B2] = adversaire then }
                        begin
                          if BAnd(my_bits_low,$00000100) <> 0 then { if plat[A2] = couleur then }
                            begin
                              nbPrise := nbPrise + 10;
                              my_bits_low := BOr(my_bits_low,$00003E00);
                              opp_bits_low := BXOr(opp_bits_low,$00003E00);
                            end;
                        end
                      else
                      if BAnd(my_bits_low,$00000200) <> 0 then { if plat[B2] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$00003C00);
                          opp_bits_low := BXOr(opp_bits_low,$00003C00);
                        end;
                    end
                  else
                  if BAnd(my_bits_low,$00000400) <> 0 then { if plat[C2] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$00003800);
                      opp_bits_low := BXOr(opp_bits_low,$00003800);
                    end;
                end
              else
              if BAnd(my_bits_low,$00000800) <> 0 then { if plat[D2] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$00003000);
                  opp_bits_low := BXOr(opp_bits_low,$00003000);
                end;
            end
          else
          if BAnd(my_bits_low,$00001000) <> 0 then { if plat[E2] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00002000);
              opp_bits_low := BXOr(opp_bits_low,$00002000);
            end;
        end;
    if (nbPrise <> 0)
      then
        begin
          diffPions := succ(diffPions+nbPrise);
          ModifPlatBitboard_g2 := BXOr(vecteurParite,$00000002);
          my_bits_low := BOr(my_bits_low,$00004000);  { place the disc in G2 }
          g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
          g_my_bits_high  := opp_bits_high;
          g_opp_bits_low  := my_bits_low;
          g_opp_bits_high := my_bits_high;
        end
      else
        ModifPlatBitboard_g2 := vecteurParite;
  end;
end;



function ModifPlatBitboard_h2(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32;
                           var resultat : bitboard; var diffPions : SInt32) : SInt32;
var nbPrise : SInt32;
begin
  with resultat do
    begin
      nbPrise := 0;
      if BAnd(opp_bits_low,$00800000) <> 0 then { if plat[H3] = adversaire then }
        begin
          if BAnd(opp_bits_low,$80000000) <> 0 then { if plat[H4] = adversaire then }
            begin
              if BAnd(opp_bits_high,$00000080) <> 0 then { if plat[H5] = adversaire then }
                begin
                  if BAnd(opp_bits_high,$00008000) <> 0 then { if plat[H6] = adversaire then }
                    begin
                      if BAnd(opp_bits_high,$00800000) <> 0 then { if plat[H7] = adversaire then }
                        begin
                          if BAnd(my_bits_high,$80000000) <> 0 then { if plat[H8] = couleur then }
                            begin
                              nbPrise := nbPrise + 10;
                              my_bits_low := BOr(my_bits_low,$80800000);
                              opp_bits_low := BXOr(opp_bits_low,$80800000);
                              my_bits_high := BOr(my_bits_high,$00808080);
                              opp_bits_high := BXOr(opp_bits_high,$00808080);
                            end;
                        end
                      else
                      if BAnd(my_bits_high,$00800000) <> 0 then { if plat[H7] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$80800000);
                          opp_bits_low := BXOr(opp_bits_low,$80800000);
                          my_bits_high := BOr(my_bits_high,$00008080);
                          opp_bits_high := BXOr(opp_bits_high,$00008080);
                        end;
                    end
                  else
                  if BAnd(my_bits_high,$00008000) <> 0 then { if plat[H6] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$80800000);
                      opp_bits_low := BXOr(opp_bits_low,$80800000);
                      my_bits_high := BOr(my_bits_high,$00000080);
                      opp_bits_high := BXOr(opp_bits_high,$00000080);
                    end;
                end
              else
              if BAnd(my_bits_high,$00000080) <> 0 then { if plat[H5] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$80800000);
                  opp_bits_low := BXOr(opp_bits_low,$80800000);
                end;
            end
          else
          if BAnd(my_bits_low,$80000000) <> 0 then { if plat[H4] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00800000);
              opp_bits_low := BXOr(opp_bits_low,$00800000);
            end;
        end;
      if BAnd(opp_bits_low,$00400000) <> 0 then { if plat[G3] = adversaire then }
        begin
          if BAnd(opp_bits_low,$20000000) <> 0 then { if plat[F4] = adversaire then }
            begin
              if BAnd(opp_bits_high,$00000010) <> 0 then { if plat[E5] = adversaire then }
                begin
                  if BAnd(opp_bits_high,$00000800) <> 0 then { if plat[D6] = adversaire then }
                    begin
                      if BAnd(opp_bits_high,$00040000) <> 0 then { if plat[C7] = adversaire then }
                        begin
                          if BAnd(my_bits_high,$02000000) <> 0 then { if plat[B8] = couleur then }
                            begin
                              nbPrise := nbPrise + 10;
                              my_bits_low := BOr(my_bits_low,$20400000);
                              opp_bits_low := BXOr(opp_bits_low,$20400000);
                              my_bits_high := BOr(my_bits_high,$00040810);
                              opp_bits_high := BXOr(opp_bits_high,$00040810);
                            end;
                        end
                      else
                      if BAnd(my_bits_high,$00040000) <> 0 then { if plat[C7] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$20400000);
                          opp_bits_low := BXOr(opp_bits_low,$20400000);
                          my_bits_high := BOr(my_bits_high,$00000810);
                          opp_bits_high := BXOr(opp_bits_high,$00000810);
                        end;
                    end
                  else
                  if BAnd(my_bits_high,$00000800) <> 0 then { if plat[D6] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$20400000);
                      opp_bits_low := BXOr(opp_bits_low,$20400000);
                      my_bits_high := BOr(my_bits_high,$00000010);
                      opp_bits_high := BXOr(opp_bits_high,$00000010);
                    end;
                end
              else
              if BAnd(my_bits_high,$00000010) <> 0 then { if plat[E5] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$20400000);
                  opp_bits_low := BXOr(opp_bits_low,$20400000);
                end;
            end
          else
          if BAnd(my_bits_low,$20000000) <> 0 then { if plat[F4] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00400000);
              opp_bits_low := BXOr(opp_bits_low,$00400000);
            end;
        end;
      if BAnd(opp_bits_low,$00004000) <> 0 then { if plat[G2] = adversaire then }
        begin
          if BAnd(opp_bits_low,$00002000) <> 0 then { if plat[F2] = adversaire then }
            begin
              if BAnd(opp_bits_low,$00001000) <> 0 then { if plat[E2] = adversaire then }
                begin
                  if BAnd(opp_bits_low,$00000800) <> 0 then { if plat[D2] = adversaire then }
                    begin
                      if BAnd(opp_bits_low,$00000400) <> 0 then { if plat[C2] = adversaire then }
                        begin
                          if BAnd(opp_bits_low,$00000200) <> 0 then { if plat[B2] = adversaire then }
                            begin
                              if BAnd(my_bits_low,$00000100) <> 0 then { if plat[A2] = couleur then }
                                begin
                                  nbPrise := nbPrise + 12;
                                  my_bits_low := BOr(my_bits_low,$00007E00);
                                  opp_bits_low := BXOr(opp_bits_low,$00007E00);
                                end;
                            end
                          else
                          if BAnd(my_bits_low,$00000200) <> 0 then { if plat[B2] = couleur then }
                            begin
                              nbPrise := nbPrise + 10;
                              my_bits_low := BOr(my_bits_low,$00007C00);
                              opp_bits_low := BXOr(opp_bits_low,$00007C00);
                            end;
                        end
                      else
                      if BAnd(my_bits_low,$00000400) <> 0 then { if plat[C2] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$00007800);
                          opp_bits_low := BXOr(opp_bits_low,$00007800);
                        end;
                    end
                  else
                  if BAnd(my_bits_low,$00000800) <> 0 then { if plat[D2] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$00007000);
                      opp_bits_low := BXOr(opp_bits_low,$00007000);
                    end;
                end
              else
              if BAnd(my_bits_low,$00001000) <> 0 then { if plat[E2] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$00006000);
                  opp_bits_low := BXOr(opp_bits_low,$00006000);
                end;
            end
          else
          if BAnd(my_bits_low,$00002000) <> 0 then { if plat[F2] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00004000);
              opp_bits_low := BXOr(opp_bits_low,$00004000);
            end;
        end;
    if (nbPrise <> 0)
      then
        begin
          diffPions := succ(diffPions+nbPrise);
          ModifPlatBitboard_h2 := BXOr(vecteurParite,$00000002);
          my_bits_low := BOr(my_bits_low,$00008000);  { place the disc in H2 }
          g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
          g_my_bits_high  := opp_bits_high;
          g_opp_bits_low  := my_bits_low;
          g_opp_bits_high := my_bits_high;
        end
      else
        ModifPlatBitboard_h2 := vecteurParite;
  end;
end;



function ModifPlatBitboard_a3(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32;
                           var resultat : bitboard; var diffPions : SInt32) : SInt32;
var nbPrise : SInt32;
begin
  with resultat do
    begin
      nbPrise := 0;
      if BAnd(opp_bits_low,$00000100) <> 0 then { if plat[A2] = adversaire then }
        begin
          if BAnd(my_bits_low,$00000001) <> 0 then { if plat[A1] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00000100);
              opp_bits_low := BXOr(opp_bits_low,$00000100);
            end;
        end;
      if BAnd(opp_bits_low,$00000200) <> 0 then { if plat[B2] = adversaire then }
        begin
          if BAnd(my_bits_low,$00000004) <> 0 then { if plat[C1] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00000200);
              opp_bits_low := BXOr(opp_bits_low,$00000200);
            end;
        end;
      if BAnd(opp_bits_low,$00020000) <> 0 then { if plat[B3] = adversaire then }
        begin
          if BAnd(opp_bits_low,$00040000) <> 0 then { if plat[C3] = adversaire then }
            begin
              if BAnd(opp_bits_low,$00080000) <> 0 then { if plat[D3] = adversaire then }
                begin
                  if BAnd(opp_bits_low,$00100000) <> 0 then { if plat[E3] = adversaire then }
                    begin
                      if BAnd(opp_bits_low,$00200000) <> 0 then { if plat[F3] = adversaire then }
                        begin
                          if BAnd(opp_bits_low,$00400000) <> 0 then { if plat[G3] = adversaire then }
                            begin
                              if BAnd(my_bits_low,$00800000) <> 0 then { if plat[H3] = couleur then }
                                begin
                                  nbPrise := nbPrise + 12;
                                  my_bits_low := BOr(my_bits_low,$007E0000);
                                  opp_bits_low := BXOr(opp_bits_low,$007E0000);
                                end;
                            end
                          else
                          if BAnd(my_bits_low,$00400000) <> 0 then { if plat[G3] = couleur then }
                            begin
                              nbPrise := nbPrise + 10;
                              my_bits_low := BOr(my_bits_low,$003E0000);
                              opp_bits_low := BXOr(opp_bits_low,$003E0000);
                            end;
                        end
                      else
                      if BAnd(my_bits_low,$00200000) <> 0 then { if plat[F3] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$001E0000);
                          opp_bits_low := BXOr(opp_bits_low,$001E0000);
                        end;
                    end
                  else
                  if BAnd(my_bits_low,$00100000) <> 0 then { if plat[E3] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$000E0000);
                      opp_bits_low := BXOr(opp_bits_low,$000E0000);
                    end;
                end
              else
              if BAnd(my_bits_low,$00080000) <> 0 then { if plat[D3] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$00060000);
                  opp_bits_low := BXOr(opp_bits_low,$00060000);
                end;
            end
          else
          if BAnd(my_bits_low,$00040000) <> 0 then { if plat[C3] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00020000);
              opp_bits_low := BXOr(opp_bits_low,$00020000);
            end;
        end;
      if BAnd(opp_bits_low,$02000000) <> 0 then { if plat[B4] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00000004) <> 0 then { if plat[C5] = adversaire then }
            begin
              if BAnd(opp_bits_high,$00000800) <> 0 then { if plat[D6] = adversaire then }
                begin
                  if BAnd(opp_bits_high,$00100000) <> 0 then { if plat[E7] = adversaire then }
                    begin
                      if BAnd(my_bits_high,$20000000) <> 0 then { if plat[F8] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$02000000);
                          opp_bits_low := BXOr(opp_bits_low,$02000000);
                          my_bits_high := BOr(my_bits_high,$00100804);
                          opp_bits_high := BXOr(opp_bits_high,$00100804);
                        end;
                    end
                  else
                  if BAnd(my_bits_high,$00100000) <> 0 then { if plat[E7] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$02000000);
                      opp_bits_low := BXOr(opp_bits_low,$02000000);
                      my_bits_high := BOr(my_bits_high,$00000804);
                      opp_bits_high := BXOr(opp_bits_high,$00000804);
                    end;
                end
              else
              if BAnd(my_bits_high,$00000800) <> 0 then { if plat[D6] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$02000000);
                  opp_bits_low := BXOr(opp_bits_low,$02000000);
                  my_bits_high := BOr(my_bits_high,$00000004);
                  opp_bits_high := BXOr(opp_bits_high,$00000004);
                end;
            end
          else
          if BAnd(my_bits_high,$00000004) <> 0 then { if plat[C5] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$02000000);
              opp_bits_low := BXOr(opp_bits_low,$02000000);
            end;
        end;
      if BAnd(opp_bits_low,$01000000) <> 0 then { if plat[A4] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00000001) <> 0 then { if plat[A5] = adversaire then }
            begin
              if BAnd(opp_bits_high,$00000100) <> 0 then { if plat[A6] = adversaire then }
                begin
                  if BAnd(opp_bits_high,$00010000) <> 0 then { if plat[A7] = adversaire then }
                    begin
                      if BAnd(my_bits_high,$01000000) <> 0 then { if plat[A8] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$01000000);
                          opp_bits_low := BXOr(opp_bits_low,$01000000);
                          my_bits_high := BOr(my_bits_high,$00010101);
                          opp_bits_high := BXOr(opp_bits_high,$00010101);
                        end;
                    end
                  else
                  if BAnd(my_bits_high,$00010000) <> 0 then { if plat[A7] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$01000000);
                      opp_bits_low := BXOr(opp_bits_low,$01000000);
                      my_bits_high := BOr(my_bits_high,$00000101);
                      opp_bits_high := BXOr(opp_bits_high,$00000101);
                    end;
                end
              else
              if BAnd(my_bits_high,$00000100) <> 0 then { if plat[A6] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$01000000);
                  opp_bits_low := BXOr(opp_bits_low,$01000000);
                  my_bits_high := BOr(my_bits_high,$00000001);
                  opp_bits_high := BXOr(opp_bits_high,$00000001);
                end;
            end
          else
          if BAnd(my_bits_high,$00000001) <> 0 then { if plat[A5] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$01000000);
              opp_bits_low := BXOr(opp_bits_low,$01000000);
            end;
        end;
    if (nbPrise <> 0)
      then
        begin
          diffPions := succ(diffPions+nbPrise);
          ModifPlatBitboard_a3 := BXOr(vecteurParite,$00000001);
          my_bits_low := BOr(my_bits_low,$00010000);  { place the disc in A3 }
          g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
          g_my_bits_high  := opp_bits_high;
          g_opp_bits_low  := my_bits_low;
          g_opp_bits_high := my_bits_high;
        end
      else
        ModifPlatBitboard_a3 := vecteurParite;
  end;
end;



function ModifPlatBitboard_b3(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32;
                           var resultat : bitboard; var diffPions : SInt32) : SInt32;
var nbPrise : SInt32;
begin
  with resultat do
    begin
      nbPrise := 0;
      if BAnd(opp_bits_low,$00000200) <> 0 then { if plat[B2] = adversaire then }
        begin
          if BAnd(my_bits_low,$00000002) <> 0 then { if plat[B1] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00000200);
              opp_bits_low := BXOr(opp_bits_low,$00000200);
            end;
        end;
      if BAnd(opp_bits_low,$00000400) <> 0 then { if plat[C2] = adversaire then }
        begin
          if BAnd(my_bits_low,$00000008) <> 0 then { if plat[D1] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00000400);
              opp_bits_low := BXOr(opp_bits_low,$00000400);
            end;
        end;
      if BAnd(opp_bits_low,$00040000) <> 0 then { if plat[C3] = adversaire then }
        begin
          if BAnd(opp_bits_low,$00080000) <> 0 then { if plat[D3] = adversaire then }
            begin
              if BAnd(opp_bits_low,$00100000) <> 0 then { if plat[E3] = adversaire then }
                begin
                  if BAnd(opp_bits_low,$00200000) <> 0 then { if plat[F3] = adversaire then }
                    begin
                      if BAnd(opp_bits_low,$00400000) <> 0 then { if plat[G3] = adversaire then }
                        begin
                          if BAnd(my_bits_low,$00800000) <> 0 then { if plat[H3] = couleur then }
                            begin
                              nbPrise := nbPrise + 10;
                              my_bits_low := BOr(my_bits_low,$007C0000);
                              opp_bits_low := BXOr(opp_bits_low,$007C0000);
                            end;
                        end
                      else
                      if BAnd(my_bits_low,$00400000) <> 0 then { if plat[G3] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$003C0000);
                          opp_bits_low := BXOr(opp_bits_low,$003C0000);
                        end;
                    end
                  else
                  if BAnd(my_bits_low,$00200000) <> 0 then { if plat[F3] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$001C0000);
                      opp_bits_low := BXOr(opp_bits_low,$001C0000);
                    end;
                end
              else
              if BAnd(my_bits_low,$00100000) <> 0 then { if plat[E3] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$000C0000);
                  opp_bits_low := BXOr(opp_bits_low,$000C0000);
                end;
            end
          else
          if BAnd(my_bits_low,$00080000) <> 0 then { if plat[D3] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00040000);
              opp_bits_low := BXOr(opp_bits_low,$00040000);
            end;
        end;
      if BAnd(opp_bits_low,$04000000) <> 0 then { if plat[C4] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00000008) <> 0 then { if plat[D5] = adversaire then }
            begin
              if BAnd(opp_bits_high,$00001000) <> 0 then { if plat[E6] = adversaire then }
                begin
                  if BAnd(opp_bits_high,$00200000) <> 0 then { if plat[F7] = adversaire then }
                    begin
                      if BAnd(my_bits_high,$40000000) <> 0 then { if plat[G8] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$04000000);
                          opp_bits_low := BXOr(opp_bits_low,$04000000);
                          my_bits_high := BOr(my_bits_high,$00201008);
                          opp_bits_high := BXOr(opp_bits_high,$00201008);
                        end;
                    end
                  else
                  if BAnd(my_bits_high,$00200000) <> 0 then { if plat[F7] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$04000000);
                      opp_bits_low := BXOr(opp_bits_low,$04000000);
                      my_bits_high := BOr(my_bits_high,$00001008);
                      opp_bits_high := BXOr(opp_bits_high,$00001008);
                    end;
                end
              else
              if BAnd(my_bits_high,$00001000) <> 0 then { if plat[E6] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$04000000);
                  opp_bits_low := BXOr(opp_bits_low,$04000000);
                  my_bits_high := BOr(my_bits_high,$00000008);
                  opp_bits_high := BXOr(opp_bits_high,$00000008);
                end;
            end
          else
          if BAnd(my_bits_high,$00000008) <> 0 then { if plat[D5] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$04000000);
              opp_bits_low := BXOr(opp_bits_low,$04000000);
            end;
        end;
      if BAnd(opp_bits_low,$02000000) <> 0 then { if plat[B4] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00000002) <> 0 then { if plat[B5] = adversaire then }
            begin
              if BAnd(opp_bits_high,$00000200) <> 0 then { if plat[B6] = adversaire then }
                begin
                  if BAnd(opp_bits_high,$00020000) <> 0 then { if plat[B7] = adversaire then }
                    begin
                      if BAnd(my_bits_high,$02000000) <> 0 then { if plat[B8] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$02000000);
                          opp_bits_low := BXOr(opp_bits_low,$02000000);
                          my_bits_high := BOr(my_bits_high,$00020202);
                          opp_bits_high := BXOr(opp_bits_high,$00020202);
                        end;
                    end
                  else
                  if BAnd(my_bits_high,$00020000) <> 0 then { if plat[B7] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$02000000);
                      opp_bits_low := BXOr(opp_bits_low,$02000000);
                      my_bits_high := BOr(my_bits_high,$00000202);
                      opp_bits_high := BXOr(opp_bits_high,$00000202);
                    end;
                end
              else
              if BAnd(my_bits_high,$00000200) <> 0 then { if plat[B6] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$02000000);
                  opp_bits_low := BXOr(opp_bits_low,$02000000);
                  my_bits_high := BOr(my_bits_high,$00000002);
                  opp_bits_high := BXOr(opp_bits_high,$00000002);
                end;
            end
          else
          if BAnd(my_bits_high,$00000002) <> 0 then { if plat[B5] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$02000000);
              opp_bits_low := BXOr(opp_bits_low,$02000000);
            end;
        end;
    if (nbPrise <> 0)
      then
        begin
          diffPions := succ(diffPions+nbPrise);
          ModifPlatBitboard_b3 := BXOr(vecteurParite,$00000001);
          my_bits_low := BOr(my_bits_low,$00020000);  { place the disc in B3 }
          g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
          g_my_bits_high  := opp_bits_high;
          g_opp_bits_low  := my_bits_low;
          g_opp_bits_high := my_bits_high;
        end
      else
        ModifPlatBitboard_b3 := vecteurParite;
  end;
end;



function ModifPlatBitboard_c3(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32;
                           var resultat : bitboard; var diffPions : SInt32) : SInt32;
var nbPrise : SInt32;
begin
  with resultat do
    begin
      nbPrise := 0;
      if BAnd(opp_bits_low,$00000200) <> 0 then { if plat[B2] = adversaire then }
        begin
          if BAnd(my_bits_low,$00000001) <> 0 then { if plat[A1] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00000200);
              opp_bits_low := BXOr(opp_bits_low,$00000200);
            end;
        end;
      if BAnd(opp_bits_low,$00000400) <> 0 then { if plat[C2] = adversaire then }
        begin
          if BAnd(my_bits_low,$00000004) <> 0 then { if plat[C1] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00000400);
              opp_bits_low := BXOr(opp_bits_low,$00000400);
            end;
        end;
      if BAnd(opp_bits_low,$00000800) <> 0 then { if plat[D2] = adversaire then }
        begin
          if BAnd(my_bits_low,$00000010) <> 0 then { if plat[E1] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00000800);
              opp_bits_low := BXOr(opp_bits_low,$00000800);
            end;
        end;
      if BAnd(opp_bits_low,$00080000) <> 0 then { if plat[D3] = adversaire then }
        begin
          if BAnd(opp_bits_low,$00100000) <> 0 then { if plat[E3] = adversaire then }
            begin
              if BAnd(opp_bits_low,$00200000) <> 0 then { if plat[F3] = adversaire then }
                begin
                  if BAnd(opp_bits_low,$00400000) <> 0 then { if plat[G3] = adversaire then }
                    begin
                      if BAnd(my_bits_low,$00800000) <> 0 then { if plat[H3] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$00780000);
                          opp_bits_low := BXOr(opp_bits_low,$00780000);
                        end;
                    end
                  else
                  if BAnd(my_bits_low,$00400000) <> 0 then { if plat[G3] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$00380000);
                      opp_bits_low := BXOr(opp_bits_low,$00380000);
                    end;
                end
              else
              if BAnd(my_bits_low,$00200000) <> 0 then { if plat[F3] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$00180000);
                  opp_bits_low := BXOr(opp_bits_low,$00180000);
                end;
            end
          else
          if BAnd(my_bits_low,$00100000) <> 0 then { if plat[E3] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00080000);
              opp_bits_low := BXOr(opp_bits_low,$00080000);
            end;
        end;
      if BAnd(opp_bits_low,$08000000) <> 0 then { if plat[D4] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00000010) <> 0 then { if plat[E5] = adversaire then }
            begin
              if BAnd(opp_bits_high,$00002000) <> 0 then { if plat[F6] = adversaire then }
                begin
                  if BAnd(opp_bits_high,$00400000) <> 0 then { if plat[G7] = adversaire then }
                    begin
                      if BAnd(my_bits_high,$80000000) <> 0 then { if plat[H8] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$08000000);
                          opp_bits_low := BXOr(opp_bits_low,$08000000);
                          my_bits_high := BOr(my_bits_high,$00402010);
                          opp_bits_high := BXOr(opp_bits_high,$00402010);
                        end;
                    end
                  else
                  if BAnd(my_bits_high,$00400000) <> 0 then { if plat[G7] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$08000000);
                      opp_bits_low := BXOr(opp_bits_low,$08000000);
                      my_bits_high := BOr(my_bits_high,$00002010);
                      opp_bits_high := BXOr(opp_bits_high,$00002010);
                    end;
                end
              else
              if BAnd(my_bits_high,$00002000) <> 0 then { if plat[F6] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$08000000);
                  opp_bits_low := BXOr(opp_bits_low,$08000000);
                  my_bits_high := BOr(my_bits_high,$00000010);
                  opp_bits_high := BXOr(opp_bits_high,$00000010);
                end;
            end
          else
          if BAnd(my_bits_high,$00000010) <> 0 then { if plat[E5] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$08000000);
              opp_bits_low := BXOr(opp_bits_low,$08000000);
            end;
        end;
      if BAnd(opp_bits_low,$04000000) <> 0 then { if plat[C4] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00000004) <> 0 then { if plat[C5] = adversaire then }
            begin
              if BAnd(opp_bits_high,$00000400) <> 0 then { if plat[C6] = adversaire then }
                begin
                  if BAnd(opp_bits_high,$00040000) <> 0 then { if plat[C7] = adversaire then }
                    begin
                      if BAnd(my_bits_high,$04000000) <> 0 then { if plat[C8] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$04000000);
                          opp_bits_low := BXOr(opp_bits_low,$04000000);
                          my_bits_high := BOr(my_bits_high,$00040404);
                          opp_bits_high := BXOr(opp_bits_high,$00040404);
                        end;
                    end
                  else
                  if BAnd(my_bits_high,$00040000) <> 0 then { if plat[C7] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$04000000);
                      opp_bits_low := BXOr(opp_bits_low,$04000000);
                      my_bits_high := BOr(my_bits_high,$00000404);
                      opp_bits_high := BXOr(opp_bits_high,$00000404);
                    end;
                end
              else
              if BAnd(my_bits_high,$00000400) <> 0 then { if plat[C6] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$04000000);
                  opp_bits_low := BXOr(opp_bits_low,$04000000);
                  my_bits_high := BOr(my_bits_high,$00000004);
                  opp_bits_high := BXOr(opp_bits_high,$00000004);
                end;
            end
          else
          if BAnd(my_bits_high,$00000004) <> 0 then { if plat[C5] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$04000000);
              opp_bits_low := BXOr(opp_bits_low,$04000000);
            end;
        end;
      if BAnd(opp_bits_low,$02000000) <> 0 then { if plat[B4] = adversaire then }
        begin
          if BAnd(my_bits_high,$00000001) <> 0 then { if plat[A5] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$02000000);
              opp_bits_low := BXOr(opp_bits_low,$02000000);
            end;
        end;
      if BAnd(opp_bits_low,$00020000) <> 0 then { if plat[B3] = adversaire then }
        begin
          if BAnd(my_bits_low,$00010000) <> 0 then { if plat[A3] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00020000);
              opp_bits_low := BXOr(opp_bits_low,$00020000);
            end;
        end;
    if (nbPrise <> 0)
      then
        begin
          diffPions := succ(diffPions+nbPrise);
          ModifPlatBitboard_c3 := BXOr(vecteurParite,$00000001);
          my_bits_low := BOr(my_bits_low,$00040000);  { place the disc in C3 }
          g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
          g_my_bits_high  := opp_bits_high;
          g_opp_bits_low  := my_bits_low;
          g_opp_bits_high := my_bits_high;
        end
      else
        ModifPlatBitboard_c3 := vecteurParite;
  end;
end;



function ModifPlatBitboard_d3(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32;
                           var resultat : bitboard; var diffPions : SInt32) : SInt32;
var nbPrise : SInt32;
begin
  with resultat do
    begin
      nbPrise := 0;
      if BAnd(opp_bits_low,$00000400) <> 0 then { if plat[C2] = adversaire then }
        begin
          if BAnd(my_bits_low,$00000002) <> 0 then { if plat[B1] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00000400);
              opp_bits_low := BXOr(opp_bits_low,$00000400);
            end;
        end;
      if BAnd(opp_bits_low,$00000800) <> 0 then { if plat[D2] = adversaire then }
        begin
          if BAnd(my_bits_low,$00000008) <> 0 then { if plat[D1] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00000800);
              opp_bits_low := BXOr(opp_bits_low,$00000800);
            end;
        end;
      if BAnd(opp_bits_low,$00001000) <> 0 then { if plat[E2] = adversaire then }
        begin
          if BAnd(my_bits_low,$00000020) <> 0 then { if plat[F1] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00001000);
              opp_bits_low := BXOr(opp_bits_low,$00001000);
            end;
        end;
      if BAnd(opp_bits_low,$00100000) <> 0 then { if plat[E3] = adversaire then }
        begin
          if BAnd(opp_bits_low,$00200000) <> 0 then { if plat[F3] = adversaire then }
            begin
              if BAnd(opp_bits_low,$00400000) <> 0 then { if plat[G3] = adversaire then }
                begin
                  if BAnd(my_bits_low,$00800000) <> 0 then { if plat[H3] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$00700000);
                      opp_bits_low := BXOr(opp_bits_low,$00700000);
                    end;
                end
              else
              if BAnd(my_bits_low,$00400000) <> 0 then { if plat[G3] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$00300000);
                  opp_bits_low := BXOr(opp_bits_low,$00300000);
                end;
            end
          else
          if BAnd(my_bits_low,$00200000) <> 0 then { if plat[F3] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00100000);
              opp_bits_low := BXOr(opp_bits_low,$00100000);
            end;
        end;
      if BAnd(opp_bits_low,$10000000) <> 0 then { if plat[E4] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00000020) <> 0 then { if plat[F5] = adversaire then }
            begin
              if BAnd(opp_bits_high,$00004000) <> 0 then { if plat[G6] = adversaire then }
                begin
                  if BAnd(my_bits_high,$00800000) <> 0 then { if plat[H7] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$10000000);
                      opp_bits_low := BXOr(opp_bits_low,$10000000);
                      my_bits_high := BOr(my_bits_high,$00004020);
                      opp_bits_high := BXOr(opp_bits_high,$00004020);
                    end;
                end
              else
              if BAnd(my_bits_high,$00004000) <> 0 then { if plat[G6] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$10000000);
                  opp_bits_low := BXOr(opp_bits_low,$10000000);
                  my_bits_high := BOr(my_bits_high,$00000020);
                  opp_bits_high := BXOr(opp_bits_high,$00000020);
                end;
            end
          else
          if BAnd(my_bits_high,$00000020) <> 0 then { if plat[F5] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$10000000);
              opp_bits_low := BXOr(opp_bits_low,$10000000);
            end;
        end;
      if BAnd(opp_bits_low,$08000000) <> 0 then { if plat[D4] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00000008) <> 0 then { if plat[D5] = adversaire then }
            begin
              if BAnd(opp_bits_high,$00000800) <> 0 then { if plat[D6] = adversaire then }
                begin
                  if BAnd(opp_bits_high,$00080000) <> 0 then { if plat[D7] = adversaire then }
                    begin
                      if BAnd(my_bits_high,$08000000) <> 0 then { if plat[D8] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$08000000);
                          opp_bits_low := BXOr(opp_bits_low,$08000000);
                          my_bits_high := BOr(my_bits_high,$00080808);
                          opp_bits_high := BXOr(opp_bits_high,$00080808);
                        end;
                    end
                  else
                  if BAnd(my_bits_high,$00080000) <> 0 then { if plat[D7] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$08000000);
                      opp_bits_low := BXOr(opp_bits_low,$08000000);
                      my_bits_high := BOr(my_bits_high,$00000808);
                      opp_bits_high := BXOr(opp_bits_high,$00000808);
                    end;
                end
              else
              if BAnd(my_bits_high,$00000800) <> 0 then { if plat[D6] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$08000000);
                  opp_bits_low := BXOr(opp_bits_low,$08000000);
                  my_bits_high := BOr(my_bits_high,$00000008);
                  opp_bits_high := BXOr(opp_bits_high,$00000008);
                end;
            end
          else
          if BAnd(my_bits_high,$00000008) <> 0 then { if plat[D5] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$08000000);
              opp_bits_low := BXOr(opp_bits_low,$08000000);
            end;
        end;
      if BAnd(opp_bits_low,$04000000) <> 0 then { if plat[C4] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00000002) <> 0 then { if plat[B5] = adversaire then }
            begin
              if BAnd(my_bits_high,$00000100) <> 0 then { if plat[A6] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$04000000);
                  opp_bits_low := BXOr(opp_bits_low,$04000000);
                  my_bits_high := BOr(my_bits_high,$00000002);
                  opp_bits_high := BXOr(opp_bits_high,$00000002);
                end;
            end
          else
          if BAnd(my_bits_high,$00000002) <> 0 then { if plat[B5] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$04000000);
              opp_bits_low := BXOr(opp_bits_low,$04000000);
            end;
        end;
      if BAnd(opp_bits_low,$00040000) <> 0 then { if plat[C3] = adversaire then }
        begin
          if BAnd(opp_bits_low,$00020000) <> 0 then { if plat[B3] = adversaire then }
            begin
              if BAnd(my_bits_low,$00010000) <> 0 then { if plat[A3] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$00060000);
                  opp_bits_low := BXOr(opp_bits_low,$00060000);
                end;
            end
          else
          if BAnd(my_bits_low,$00020000) <> 0 then { if plat[B3] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00040000);
              opp_bits_low := BXOr(opp_bits_low,$00040000);
            end;
        end;
    if (nbPrise <> 0)
      then
        begin
          diffPions := succ(diffPions+nbPrise);
          ModifPlatBitboard_d3 := BXOr(vecteurParite,$00000001);
          my_bits_low := BOr(my_bits_low,$00080000);  { place the disc in D3 }
          g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
          g_my_bits_high  := opp_bits_high;
          g_opp_bits_low  := my_bits_low;
          g_opp_bits_high := my_bits_high;
        end
      else
        ModifPlatBitboard_d3 := vecteurParite;
  end;
end;



function ModifPlatBitboard_e3(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32;
                           var resultat : bitboard; var diffPions : SInt32) : SInt32;
var nbPrise : SInt32;
begin
  with resultat do
    begin
      nbPrise := 0;
      if BAnd(opp_bits_low,$00000800) <> 0 then { if plat[D2] = adversaire then }
        begin
          if BAnd(my_bits_low,$00000004) <> 0 then { if plat[C1] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00000800);
              opp_bits_low := BXOr(opp_bits_low,$00000800);
            end;
        end;
      if BAnd(opp_bits_low,$00001000) <> 0 then { if plat[E2] = adversaire then }
        begin
          if BAnd(my_bits_low,$00000010) <> 0 then { if plat[E1] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00001000);
              opp_bits_low := BXOr(opp_bits_low,$00001000);
            end;
        end;
      if BAnd(opp_bits_low,$00002000) <> 0 then { if plat[F2] = adversaire then }
        begin
          if BAnd(my_bits_low,$00000040) <> 0 then { if plat[G1] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00002000);
              opp_bits_low := BXOr(opp_bits_low,$00002000);
            end;
        end;
      if BAnd(opp_bits_low,$00200000) <> 0 then { if plat[F3] = adversaire then }
        begin
          if BAnd(opp_bits_low,$00400000) <> 0 then { if plat[G3] = adversaire then }
            begin
              if BAnd(my_bits_low,$00800000) <> 0 then { if plat[H3] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$00600000);
                  opp_bits_low := BXOr(opp_bits_low,$00600000);
                end;
            end
          else
          if BAnd(my_bits_low,$00400000) <> 0 then { if plat[G3] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00200000);
              opp_bits_low := BXOr(opp_bits_low,$00200000);
            end;
        end;
      if BAnd(opp_bits_low,$20000000) <> 0 then { if plat[F4] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00000040) <> 0 then { if plat[G5] = adversaire then }
            begin
              if BAnd(my_bits_high,$00008000) <> 0 then { if plat[H6] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$20000000);
                  opp_bits_low := BXOr(opp_bits_low,$20000000);
                  my_bits_high := BOr(my_bits_high,$00000040);
                  opp_bits_high := BXOr(opp_bits_high,$00000040);
                end;
            end
          else
          if BAnd(my_bits_high,$00000040) <> 0 then { if plat[G5] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$20000000);
              opp_bits_low := BXOr(opp_bits_low,$20000000);
            end;
        end;
      if BAnd(opp_bits_low,$10000000) <> 0 then { if plat[E4] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00000010) <> 0 then { if plat[E5] = adversaire then }
            begin
              if BAnd(opp_bits_high,$00001000) <> 0 then { if plat[E6] = adversaire then }
                begin
                  if BAnd(opp_bits_high,$00100000) <> 0 then { if plat[E7] = adversaire then }
                    begin
                      if BAnd(my_bits_high,$10000000) <> 0 then { if plat[E8] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$10000000);
                          opp_bits_low := BXOr(opp_bits_low,$10000000);
                          my_bits_high := BOr(my_bits_high,$00101010);
                          opp_bits_high := BXOr(opp_bits_high,$00101010);
                        end;
                    end
                  else
                  if BAnd(my_bits_high,$00100000) <> 0 then { if plat[E7] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$10000000);
                      opp_bits_low := BXOr(opp_bits_low,$10000000);
                      my_bits_high := BOr(my_bits_high,$00001010);
                      opp_bits_high := BXOr(opp_bits_high,$00001010);
                    end;
                end
              else
              if BAnd(my_bits_high,$00001000) <> 0 then { if plat[E6] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$10000000);
                  opp_bits_low := BXOr(opp_bits_low,$10000000);
                  my_bits_high := BOr(my_bits_high,$00000010);
                  opp_bits_high := BXOr(opp_bits_high,$00000010);
                end;
            end
          else
          if BAnd(my_bits_high,$00000010) <> 0 then { if plat[E5] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$10000000);
              opp_bits_low := BXOr(opp_bits_low,$10000000);
            end;
        end;
      if BAnd(opp_bits_low,$08000000) <> 0 then { if plat[D4] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00000004) <> 0 then { if plat[C5] = adversaire then }
            begin
              if BAnd(opp_bits_high,$00000200) <> 0 then { if plat[B6] = adversaire then }
                begin
                  if BAnd(my_bits_high,$00010000) <> 0 then { if plat[A7] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$08000000);
                      opp_bits_low := BXOr(opp_bits_low,$08000000);
                      my_bits_high := BOr(my_bits_high,$00000204);
                      opp_bits_high := BXOr(opp_bits_high,$00000204);
                    end;
                end
              else
              if BAnd(my_bits_high,$00000200) <> 0 then { if plat[B6] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$08000000);
                  opp_bits_low := BXOr(opp_bits_low,$08000000);
                  my_bits_high := BOr(my_bits_high,$00000004);
                  opp_bits_high := BXOr(opp_bits_high,$00000004);
                end;
            end
          else
          if BAnd(my_bits_high,$00000004) <> 0 then { if plat[C5] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$08000000);
              opp_bits_low := BXOr(opp_bits_low,$08000000);
            end;
        end;
      if BAnd(opp_bits_low,$00080000) <> 0 then { if plat[D3] = adversaire then }
        begin
          if BAnd(opp_bits_low,$00040000) <> 0 then { if plat[C3] = adversaire then }
            begin
              if BAnd(opp_bits_low,$00020000) <> 0 then { if plat[B3] = adversaire then }
                begin
                  if BAnd(my_bits_low,$00010000) <> 0 then { if plat[A3] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$000E0000);
                      opp_bits_low := BXOr(opp_bits_low,$000E0000);
                    end;
                end
              else
              if BAnd(my_bits_low,$00020000) <> 0 then { if plat[B3] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$000C0000);
                  opp_bits_low := BXOr(opp_bits_low,$000C0000);
                end;
            end
          else
          if BAnd(my_bits_low,$00040000) <> 0 then { if plat[C3] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00080000);
              opp_bits_low := BXOr(opp_bits_low,$00080000);
            end;
        end;
    if (nbPrise <> 0)
      then
        begin
          diffPions := succ(diffPions+nbPrise);
          ModifPlatBitboard_e3 := BXOr(vecteurParite,$00000002);
          my_bits_low := BOr(my_bits_low,$00100000);  { place the disc in E3 }
          g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
          g_my_bits_high  := opp_bits_high;
          g_opp_bits_low  := my_bits_low;
          g_opp_bits_high := my_bits_high;
        end
      else
        ModifPlatBitboard_e3 := vecteurParite;
  end;
end;



function ModifPlatBitboard_f3(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32;
                           var resultat : bitboard; var diffPions : SInt32) : SInt32;
var nbPrise : SInt32;
begin
  with resultat do
    begin
      nbPrise := 0;
      if BAnd(opp_bits_low,$00001000) <> 0 then { if plat[E2] = adversaire then }
        begin
          if BAnd(my_bits_low,$00000008) <> 0 then { if plat[D1] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00001000);
              opp_bits_low := BXOr(opp_bits_low,$00001000);
            end;
        end;
      if BAnd(opp_bits_low,$00002000) <> 0 then { if plat[F2] = adversaire then }
        begin
          if BAnd(my_bits_low,$00000020) <> 0 then { if plat[F1] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00002000);
              opp_bits_low := BXOr(opp_bits_low,$00002000);
            end;
        end;
      if BAnd(opp_bits_low,$00004000) <> 0 then { if plat[G2] = adversaire then }
        begin
          if BAnd(my_bits_low,$00000080) <> 0 then { if plat[H1] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00004000);
              opp_bits_low := BXOr(opp_bits_low,$00004000);
            end;
        end;
      if BAnd(opp_bits_low,$00400000) <> 0 then { if plat[G3] = adversaire then }
        begin
          if BAnd(my_bits_low,$00800000) <> 0 then { if plat[H3] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00400000);
              opp_bits_low := BXOr(opp_bits_low,$00400000);
            end;
        end;
      if BAnd(opp_bits_low,$40000000) <> 0 then { if plat[G4] = adversaire then }
        begin
          if BAnd(my_bits_high,$00000080) <> 0 then { if plat[H5] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$40000000);
              opp_bits_low := BXOr(opp_bits_low,$40000000);
            end;
        end;
      if BAnd(opp_bits_low,$20000000) <> 0 then { if plat[F4] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00000020) <> 0 then { if plat[F5] = adversaire then }
            begin
              if BAnd(opp_bits_high,$00002000) <> 0 then { if plat[F6] = adversaire then }
                begin
                  if BAnd(opp_bits_high,$00200000) <> 0 then { if plat[F7] = adversaire then }
                    begin
                      if BAnd(my_bits_high,$20000000) <> 0 then { if plat[F8] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$20000000);
                          opp_bits_low := BXOr(opp_bits_low,$20000000);
                          my_bits_high := BOr(my_bits_high,$00202020);
                          opp_bits_high := BXOr(opp_bits_high,$00202020);
                        end;
                    end
                  else
                  if BAnd(my_bits_high,$00200000) <> 0 then { if plat[F7] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$20000000);
                      opp_bits_low := BXOr(opp_bits_low,$20000000);
                      my_bits_high := BOr(my_bits_high,$00002020);
                      opp_bits_high := BXOr(opp_bits_high,$00002020);
                    end;
                end
              else
              if BAnd(my_bits_high,$00002000) <> 0 then { if plat[F6] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$20000000);
                  opp_bits_low := BXOr(opp_bits_low,$20000000);
                  my_bits_high := BOr(my_bits_high,$00000020);
                  opp_bits_high := BXOr(opp_bits_high,$00000020);
                end;
            end
          else
          if BAnd(my_bits_high,$00000020) <> 0 then { if plat[F5] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$20000000);
              opp_bits_low := BXOr(opp_bits_low,$20000000);
            end;
        end;
      if BAnd(opp_bits_low,$10000000) <> 0 then { if plat[E4] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00000008) <> 0 then { if plat[D5] = adversaire then }
            begin
              if BAnd(opp_bits_high,$00000400) <> 0 then { if plat[C6] = adversaire then }
                begin
                  if BAnd(opp_bits_high,$00020000) <> 0 then { if plat[B7] = adversaire then }
                    begin
                      if BAnd(my_bits_high,$01000000) <> 0 then { if plat[A8] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$10000000);
                          opp_bits_low := BXOr(opp_bits_low,$10000000);
                          my_bits_high := BOr(my_bits_high,$00020408);
                          opp_bits_high := BXOr(opp_bits_high,$00020408);
                        end;
                    end
                  else
                  if BAnd(my_bits_high,$00020000) <> 0 then { if plat[B7] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$10000000);
                      opp_bits_low := BXOr(opp_bits_low,$10000000);
                      my_bits_high := BOr(my_bits_high,$00000408);
                      opp_bits_high := BXOr(opp_bits_high,$00000408);
                    end;
                end
              else
              if BAnd(my_bits_high,$00000400) <> 0 then { if plat[C6] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$10000000);
                  opp_bits_low := BXOr(opp_bits_low,$10000000);
                  my_bits_high := BOr(my_bits_high,$00000008);
                  opp_bits_high := BXOr(opp_bits_high,$00000008);
                end;
            end
          else
          if BAnd(my_bits_high,$00000008) <> 0 then { if plat[D5] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$10000000);
              opp_bits_low := BXOr(opp_bits_low,$10000000);
            end;
        end;
      if BAnd(opp_bits_low,$00100000) <> 0 then { if plat[E3] = adversaire then }
        begin
          if BAnd(opp_bits_low,$00080000) <> 0 then { if plat[D3] = adversaire then }
            begin
              if BAnd(opp_bits_low,$00040000) <> 0 then { if plat[C3] = adversaire then }
                begin
                  if BAnd(opp_bits_low,$00020000) <> 0 then { if plat[B3] = adversaire then }
                    begin
                      if BAnd(my_bits_low,$00010000) <> 0 then { if plat[A3] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$001E0000);
                          opp_bits_low := BXOr(opp_bits_low,$001E0000);
                        end;
                    end
                  else
                  if BAnd(my_bits_low,$00020000) <> 0 then { if plat[B3] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$001C0000);
                      opp_bits_low := BXOr(opp_bits_low,$001C0000);
                    end;
                end
              else
              if BAnd(my_bits_low,$00040000) <> 0 then { if plat[C3] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$00180000);
                  opp_bits_low := BXOr(opp_bits_low,$00180000);
                end;
            end
          else
          if BAnd(my_bits_low,$00080000) <> 0 then { if plat[D3] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00100000);
              opp_bits_low := BXOr(opp_bits_low,$00100000);
            end;
        end;
    if (nbPrise <> 0)
      then
        begin
          diffPions := succ(diffPions+nbPrise);
          ModifPlatBitboard_f3 := BXOr(vecteurParite,$00000002);
          my_bits_low := BOr(my_bits_low,$00200000);  { place the disc in F3 }
          g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
          g_my_bits_high  := opp_bits_high;
          g_opp_bits_low  := my_bits_low;
          g_opp_bits_high := my_bits_high;
        end
      else
        ModifPlatBitboard_f3 := vecteurParite;
  end;
end;



function ModifPlatBitboard_g3(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32;
                           var resultat : bitboard; var diffPions : SInt32) : SInt32;
var nbPrise : SInt32;
begin
  with resultat do
    begin
      nbPrise := 0;
      if BAnd(opp_bits_low,$40000000) <> 0 then { if plat[G4] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00000040) <> 0 then { if plat[G5] = adversaire then }
            begin
              if BAnd(opp_bits_high,$00004000) <> 0 then { if plat[G6] = adversaire then }
                begin
                  if BAnd(opp_bits_high,$00400000) <> 0 then { if plat[G7] = adversaire then }
                    begin
                      if BAnd(my_bits_high,$40000000) <> 0 then { if plat[G8] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$40000000);
                          opp_bits_low := BXOr(opp_bits_low,$40000000);
                          my_bits_high := BOr(my_bits_high,$00404040);
                          opp_bits_high := BXOr(opp_bits_high,$00404040);
                        end;
                    end
                  else
                  if BAnd(my_bits_high,$00400000) <> 0 then { if plat[G7] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$40000000);
                      opp_bits_low := BXOr(opp_bits_low,$40000000);
                      my_bits_high := BOr(my_bits_high,$00004040);
                      opp_bits_high := BXOr(opp_bits_high,$00004040);
                    end;
                end
              else
              if BAnd(my_bits_high,$00004000) <> 0 then { if plat[G6] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$40000000);
                  opp_bits_low := BXOr(opp_bits_low,$40000000);
                  my_bits_high := BOr(my_bits_high,$00000040);
                  opp_bits_high := BXOr(opp_bits_high,$00000040);
                end;
            end
          else
          if BAnd(my_bits_high,$00000040) <> 0 then { if plat[G5] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$40000000);
              opp_bits_low := BXOr(opp_bits_low,$40000000);
            end;
        end;
      if BAnd(opp_bits_low,$20000000) <> 0 then { if plat[F4] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00000010) <> 0 then { if plat[E5] = adversaire then }
            begin
              if BAnd(opp_bits_high,$00000800) <> 0 then { if plat[D6] = adversaire then }
                begin
                  if BAnd(opp_bits_high,$00040000) <> 0 then { if plat[C7] = adversaire then }
                    begin
                      if BAnd(my_bits_high,$02000000) <> 0 then { if plat[B8] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$20000000);
                          opp_bits_low := BXOr(opp_bits_low,$20000000);
                          my_bits_high := BOr(my_bits_high,$00040810);
                          opp_bits_high := BXOr(opp_bits_high,$00040810);
                        end;
                    end
                  else
                  if BAnd(my_bits_high,$00040000) <> 0 then { if plat[C7] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$20000000);
                      opp_bits_low := BXOr(opp_bits_low,$20000000);
                      my_bits_high := BOr(my_bits_high,$00000810);
                      opp_bits_high := BXOr(opp_bits_high,$00000810);
                    end;
                end
              else
              if BAnd(my_bits_high,$00000800) <> 0 then { if plat[D6] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$20000000);
                  opp_bits_low := BXOr(opp_bits_low,$20000000);
                  my_bits_high := BOr(my_bits_high,$00000010);
                  opp_bits_high := BXOr(opp_bits_high,$00000010);
                end;
            end
          else
          if BAnd(my_bits_high,$00000010) <> 0 then { if plat[E5] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$20000000);
              opp_bits_low := BXOr(opp_bits_low,$20000000);
            end;
        end;
      if BAnd(opp_bits_low,$00200000) <> 0 then { if plat[F3] = adversaire then }
        begin
          if BAnd(opp_bits_low,$00100000) <> 0 then { if plat[E3] = adversaire then }
            begin
              if BAnd(opp_bits_low,$00080000) <> 0 then { if plat[D3] = adversaire then }
                begin
                  if BAnd(opp_bits_low,$00040000) <> 0 then { if plat[C3] = adversaire then }
                    begin
                      if BAnd(opp_bits_low,$00020000) <> 0 then { if plat[B3] = adversaire then }
                        begin
                          if BAnd(my_bits_low,$00010000) <> 0 then { if plat[A3] = couleur then }
                            begin
                              nbPrise := nbPrise + 10;
                              my_bits_low := BOr(my_bits_low,$003E0000);
                              opp_bits_low := BXOr(opp_bits_low,$003E0000);
                            end;
                        end
                      else
                      if BAnd(my_bits_low,$00020000) <> 0 then { if plat[B3] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$003C0000);
                          opp_bits_low := BXOr(opp_bits_low,$003C0000);
                        end;
                    end
                  else
                  if BAnd(my_bits_low,$00040000) <> 0 then { if plat[C3] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$00380000);
                      opp_bits_low := BXOr(opp_bits_low,$00380000);
                    end;
                end
              else
              if BAnd(my_bits_low,$00080000) <> 0 then { if plat[D3] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$00300000);
                  opp_bits_low := BXOr(opp_bits_low,$00300000);
                end;
            end
          else
          if BAnd(my_bits_low,$00100000) <> 0 then { if plat[E3] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00200000);
              opp_bits_low := BXOr(opp_bits_low,$00200000);
            end;
        end;
      if BAnd(opp_bits_low,$00002000) <> 0 then { if plat[F2] = adversaire then }
        begin
          if BAnd(my_bits_low,$00000010) <> 0 then { if plat[E1] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00002000);
              opp_bits_low := BXOr(opp_bits_low,$00002000);
            end;
        end;
      if BAnd(opp_bits_low,$00004000) <> 0 then { if plat[G2] = adversaire then }
        begin
          if BAnd(my_bits_low,$00000040) <> 0 then { if plat[G1] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00004000);
              opp_bits_low := BXOr(opp_bits_low,$00004000);
            end;
        end;
    if (nbPrise <> 0)
      then
        begin
          diffPions := succ(diffPions+nbPrise);
          ModifPlatBitboard_g3 := BXOr(vecteurParite,$00000002);
          my_bits_low := BOr(my_bits_low,$00400000);  { place the disc in G3 }
          g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
          g_my_bits_high  := opp_bits_high;
          g_opp_bits_low  := my_bits_low;
          g_opp_bits_high := my_bits_high;
        end
      else
        ModifPlatBitboard_g3 := vecteurParite;
  end;
end;



function ModifPlatBitboard_h3(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32;
                           var resultat : bitboard; var diffPions : SInt32) : SInt32;
var nbPrise : SInt32;
begin
  with resultat do
    begin
      nbPrise := 0;
      if BAnd(opp_bits_low,$80000000) <> 0 then { if plat[H4] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00000080) <> 0 then { if plat[H5] = adversaire then }
            begin
              if BAnd(opp_bits_high,$00008000) <> 0 then { if plat[H6] = adversaire then }
                begin
                  if BAnd(opp_bits_high,$00800000) <> 0 then { if plat[H7] = adversaire then }
                    begin
                      if BAnd(my_bits_high,$80000000) <> 0 then { if plat[H8] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$80000000);
                          opp_bits_low := BXOr(opp_bits_low,$80000000);
                          my_bits_high := BOr(my_bits_high,$00808080);
                          opp_bits_high := BXOr(opp_bits_high,$00808080);
                        end;
                    end
                  else
                  if BAnd(my_bits_high,$00800000) <> 0 then { if plat[H7] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$80000000);
                      opp_bits_low := BXOr(opp_bits_low,$80000000);
                      my_bits_high := BOr(my_bits_high,$00008080);
                      opp_bits_high := BXOr(opp_bits_high,$00008080);
                    end;
                end
              else
              if BAnd(my_bits_high,$00008000) <> 0 then { if plat[H6] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$80000000);
                  opp_bits_low := BXOr(opp_bits_low,$80000000);
                  my_bits_high := BOr(my_bits_high,$00000080);
                  opp_bits_high := BXOr(opp_bits_high,$00000080);
                end;
            end
          else
          if BAnd(my_bits_high,$00000080) <> 0 then { if plat[H5] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$80000000);
              opp_bits_low := BXOr(opp_bits_low,$80000000);
            end;
        end;
      if BAnd(opp_bits_low,$40000000) <> 0 then { if plat[G4] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00000020) <> 0 then { if plat[F5] = adversaire then }
            begin
              if BAnd(opp_bits_high,$00001000) <> 0 then { if plat[E6] = adversaire then }
                begin
                  if BAnd(opp_bits_high,$00080000) <> 0 then { if plat[D7] = adversaire then }
                    begin
                      if BAnd(my_bits_high,$04000000) <> 0 then { if plat[C8] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$40000000);
                          opp_bits_low := BXOr(opp_bits_low,$40000000);
                          my_bits_high := BOr(my_bits_high,$00081020);
                          opp_bits_high := BXOr(opp_bits_high,$00081020);
                        end;
                    end
                  else
                  if BAnd(my_bits_high,$00080000) <> 0 then { if plat[D7] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$40000000);
                      opp_bits_low := BXOr(opp_bits_low,$40000000);
                      my_bits_high := BOr(my_bits_high,$00001020);
                      opp_bits_high := BXOr(opp_bits_high,$00001020);
                    end;
                end
              else
              if BAnd(my_bits_high,$00001000) <> 0 then { if plat[E6] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$40000000);
                  opp_bits_low := BXOr(opp_bits_low,$40000000);
                  my_bits_high := BOr(my_bits_high,$00000020);
                  opp_bits_high := BXOr(opp_bits_high,$00000020);
                end;
            end
          else
          if BAnd(my_bits_high,$00000020) <> 0 then { if plat[F5] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$40000000);
              opp_bits_low := BXOr(opp_bits_low,$40000000);
            end;
        end;
      if BAnd(opp_bits_low,$00400000) <> 0 then { if plat[G3] = adversaire then }
        begin
          if BAnd(opp_bits_low,$00200000) <> 0 then { if plat[F3] = adversaire then }
            begin
              if BAnd(opp_bits_low,$00100000) <> 0 then { if plat[E3] = adversaire then }
                begin
                  if BAnd(opp_bits_low,$00080000) <> 0 then { if plat[D3] = adversaire then }
                    begin
                      if BAnd(opp_bits_low,$00040000) <> 0 then { if plat[C3] = adversaire then }
                        begin
                          if BAnd(opp_bits_low,$00020000) <> 0 then { if plat[B3] = adversaire then }
                            begin
                              if BAnd(my_bits_low,$00010000) <> 0 then { if plat[A3] = couleur then }
                                begin
                                  nbPrise := nbPrise + 12;
                                  my_bits_low := BOr(my_bits_low,$007E0000);
                                  opp_bits_low := BXOr(opp_bits_low,$007E0000);
                                end;
                            end
                          else
                          if BAnd(my_bits_low,$00020000) <> 0 then { if plat[B3] = couleur then }
                            begin
                              nbPrise := nbPrise + 10;
                              my_bits_low := BOr(my_bits_low,$007C0000);
                              opp_bits_low := BXOr(opp_bits_low,$007C0000);
                            end;
                        end
                      else
                      if BAnd(my_bits_low,$00040000) <> 0 then { if plat[C3] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$00780000);
                          opp_bits_low := BXOr(opp_bits_low,$00780000);
                        end;
                    end
                  else
                  if BAnd(my_bits_low,$00080000) <> 0 then { if plat[D3] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$00700000);
                      opp_bits_low := BXOr(opp_bits_low,$00700000);
                    end;
                end
              else
              if BAnd(my_bits_low,$00100000) <> 0 then { if plat[E3] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$00600000);
                  opp_bits_low := BXOr(opp_bits_low,$00600000);
                end;
            end
          else
          if BAnd(my_bits_low,$00200000) <> 0 then { if plat[F3] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00400000);
              opp_bits_low := BXOr(opp_bits_low,$00400000);
            end;
        end;
      if BAnd(opp_bits_low,$00004000) <> 0 then { if plat[G2] = adversaire then }
        begin
          if BAnd(my_bits_low,$00000020) <> 0 then { if plat[F1] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00004000);
              opp_bits_low := BXOr(opp_bits_low,$00004000);
            end;
        end;
      if BAnd(opp_bits_low,$00008000) <> 0 then { if plat[H2] = adversaire then }
        begin
          if BAnd(my_bits_low,$00000080) <> 0 then { if plat[H1] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00008000);
              opp_bits_low := BXOr(opp_bits_low,$00008000);
            end;
        end;
    if (nbPrise <> 0)
      then
        begin
          diffPions := succ(diffPions+nbPrise);
          ModifPlatBitboard_h3 := BXOr(vecteurParite,$00000002);
          my_bits_low := BOr(my_bits_low,$00800000);  { place the disc in H3 }
          g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
          g_my_bits_high  := opp_bits_high;
          g_opp_bits_low  := my_bits_low;
          g_opp_bits_high := my_bits_high;
        end
      else
        ModifPlatBitboard_h3 := vecteurParite;
  end;
end;



function ModifPlatBitboard_a4(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32;
                           var resultat : bitboard; var diffPions : SInt32) : SInt32;
var nbPrise : SInt32;
begin
  with resultat do
    begin
      nbPrise := 0;
      if BAnd(opp_bits_low,$00010000) <> 0 then { if plat[A3] = adversaire then }
        begin
          if BAnd(opp_bits_low,$00000100) <> 0 then { if plat[A2] = adversaire then }
            begin
              if BAnd(my_bits_low,$00000001) <> 0 then { if plat[A1] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$00010100);
                  opp_bits_low := BXOr(opp_bits_low,$00010100);
                end;
            end
          else
          if BAnd(my_bits_low,$00000100) <> 0 then { if plat[A2] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00010000);
              opp_bits_low := BXOr(opp_bits_low,$00010000);
            end;
        end;
      if BAnd(opp_bits_low,$00020000) <> 0 then { if plat[B3] = adversaire then }
        begin
          if BAnd(opp_bits_low,$00000400) <> 0 then { if plat[C2] = adversaire then }
            begin
              if BAnd(my_bits_low,$00000008) <> 0 then { if plat[D1] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$00020400);
                  opp_bits_low := BXOr(opp_bits_low,$00020400);
                end;
            end
          else
          if BAnd(my_bits_low,$00000400) <> 0 then { if plat[C2] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00020000);
              opp_bits_low := BXOr(opp_bits_low,$00020000);
            end;
        end;
      if BAnd(opp_bits_low,$02000000) <> 0 then { if plat[B4] = adversaire then }
        begin
          if BAnd(opp_bits_low,$04000000) <> 0 then { if plat[C4] = adversaire then }
            begin
              if BAnd(opp_bits_low,$08000000) <> 0 then { if plat[D4] = adversaire then }
                begin
                  if BAnd(opp_bits_low,$10000000) <> 0 then { if plat[E4] = adversaire then }
                    begin
                      if BAnd(opp_bits_low,$20000000) <> 0 then { if plat[F4] = adversaire then }
                        begin
                          if BAnd(opp_bits_low,$40000000) <> 0 then { if plat[G4] = adversaire then }
                            begin
                              if BAnd(my_bits_low,$80000000) <> 0 then { if plat[H4] = couleur then }
                                begin
                                  nbPrise := nbPrise + 12;
                                  my_bits_low := BOr(my_bits_low,$7E000000);
                                  opp_bits_low := BXOr(opp_bits_low,$7E000000);
                                end;
                            end
                          else
                          if BAnd(my_bits_low,$40000000) <> 0 then { if plat[G4] = couleur then }
                            begin
                              nbPrise := nbPrise + 10;
                              my_bits_low := BOr(my_bits_low,$3E000000);
                              opp_bits_low := BXOr(opp_bits_low,$3E000000);
                            end;
                        end
                      else
                      if BAnd(my_bits_low,$20000000) <> 0 then { if plat[F4] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$1E000000);
                          opp_bits_low := BXOr(opp_bits_low,$1E000000);
                        end;
                    end
                  else
                  if BAnd(my_bits_low,$10000000) <> 0 then { if plat[E4] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$0E000000);
                      opp_bits_low := BXOr(opp_bits_low,$0E000000);
                    end;
                end
              else
              if BAnd(my_bits_low,$08000000) <> 0 then { if plat[D4] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$06000000);
                  opp_bits_low := BXOr(opp_bits_low,$06000000);
                end;
            end
          else
          if BAnd(my_bits_low,$04000000) <> 0 then { if plat[C4] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$02000000);
              opp_bits_low := BXOr(opp_bits_low,$02000000);
            end;
        end;
      if BAnd(opp_bits_high,$00000002) <> 0 then { if plat[B5] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00000400) <> 0 then { if plat[C6] = adversaire then }
            begin
              if BAnd(opp_bits_high,$00080000) <> 0 then { if plat[D7] = adversaire then }
                begin
                  if BAnd(my_bits_high,$10000000) <> 0 then { if plat[E8] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_high := BOr(my_bits_high,$00080402);
                      opp_bits_high := BXOr(opp_bits_high,$00080402);
                    end;
                end
              else
              if BAnd(my_bits_high,$00080000) <> 0 then { if plat[D7] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$00000402);
                  opp_bits_high := BXOr(opp_bits_high,$00000402);
                end;
            end
          else
          if BAnd(my_bits_high,$00000400) <> 0 then { if plat[C6] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00000002);
              opp_bits_high := BXOr(opp_bits_high,$00000002);
            end;
        end;
      if BAnd(opp_bits_high,$00000001) <> 0 then { if plat[A5] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00000100) <> 0 then { if plat[A6] = adversaire then }
            begin
              if BAnd(opp_bits_high,$00010000) <> 0 then { if plat[A7] = adversaire then }
                begin
                  if BAnd(my_bits_high,$01000000) <> 0 then { if plat[A8] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_high := BOr(my_bits_high,$00010101);
                      opp_bits_high := BXOr(opp_bits_high,$00010101);
                    end;
                end
              else
              if BAnd(my_bits_high,$00010000) <> 0 then { if plat[A7] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$00000101);
                  opp_bits_high := BXOr(opp_bits_high,$00000101);
                end;
            end
          else
          if BAnd(my_bits_high,$00000100) <> 0 then { if plat[A6] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00000001);
              opp_bits_high := BXOr(opp_bits_high,$00000001);
            end;
        end;
    if (nbPrise <> 0)
      then
        begin
          diffPions := succ(diffPions+nbPrise);
          ModifPlatBitboard_a4 := BXOr(vecteurParite,$00000001);
          my_bits_low := BOr(my_bits_low,$01000000);  { place the disc in A4 }
          g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
          g_my_bits_high  := opp_bits_high;
          g_opp_bits_low  := my_bits_low;
          g_opp_bits_high := my_bits_high;
        end
      else
        ModifPlatBitboard_a4 := vecteurParite;
  end;
end;



function ModifPlatBitboard_b4(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32;
                           var resultat : bitboard; var diffPions : SInt32) : SInt32;
var nbPrise : SInt32;
begin
  with resultat do
    begin
      nbPrise := 0;
      if BAnd(opp_bits_low,$00020000) <> 0 then { if plat[B3] = adversaire then }
        begin
          if BAnd(opp_bits_low,$00000200) <> 0 then { if plat[B2] = adversaire then }
            begin
              if BAnd(my_bits_low,$00000002) <> 0 then { if plat[B1] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$00020200);
                  opp_bits_low := BXOr(opp_bits_low,$00020200);
                end;
            end
          else
          if BAnd(my_bits_low,$00000200) <> 0 then { if plat[B2] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00020000);
              opp_bits_low := BXOr(opp_bits_low,$00020000);
            end;
        end;
      if BAnd(opp_bits_low,$00040000) <> 0 then { if plat[C3] = adversaire then }
        begin
          if BAnd(opp_bits_low,$00000800) <> 0 then { if plat[D2] = adversaire then }
            begin
              if BAnd(my_bits_low,$00000010) <> 0 then { if plat[E1] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$00040800);
                  opp_bits_low := BXOr(opp_bits_low,$00040800);
                end;
            end
          else
          if BAnd(my_bits_low,$00000800) <> 0 then { if plat[D2] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00040000);
              opp_bits_low := BXOr(opp_bits_low,$00040000);
            end;
        end;
      if BAnd(opp_bits_low,$04000000) <> 0 then { if plat[C4] = adversaire then }
        begin
          if BAnd(opp_bits_low,$08000000) <> 0 then { if plat[D4] = adversaire then }
            begin
              if BAnd(opp_bits_low,$10000000) <> 0 then { if plat[E4] = adversaire then }
                begin
                  if BAnd(opp_bits_low,$20000000) <> 0 then { if plat[F4] = adversaire then }
                    begin
                      if BAnd(opp_bits_low,$40000000) <> 0 then { if plat[G4] = adversaire then }
                        begin
                          if BAnd(my_bits_low,$80000000) <> 0 then { if plat[H4] = couleur then }
                            begin
                              nbPrise := nbPrise + 10;
                              my_bits_low := BOr(my_bits_low,$7C000000);
                              opp_bits_low := BXOr(opp_bits_low,$7C000000);
                            end;
                        end
                      else
                      if BAnd(my_bits_low,$40000000) <> 0 then { if plat[G4] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$3C000000);
                          opp_bits_low := BXOr(opp_bits_low,$3C000000);
                        end;
                    end
                  else
                  if BAnd(my_bits_low,$20000000) <> 0 then { if plat[F4] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$1C000000);
                      opp_bits_low := BXOr(opp_bits_low,$1C000000);
                    end;
                end
              else
              if BAnd(my_bits_low,$10000000) <> 0 then { if plat[E4] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$0C000000);
                  opp_bits_low := BXOr(opp_bits_low,$0C000000);
                end;
            end
          else
          if BAnd(my_bits_low,$08000000) <> 0 then { if plat[D4] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$04000000);
              opp_bits_low := BXOr(opp_bits_low,$04000000);
            end;
        end;
      if BAnd(opp_bits_high,$00000004) <> 0 then { if plat[C5] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00000800) <> 0 then { if plat[D6] = adversaire then }
            begin
              if BAnd(opp_bits_high,$00100000) <> 0 then { if plat[E7] = adversaire then }
                begin
                  if BAnd(my_bits_high,$20000000) <> 0 then { if plat[F8] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_high := BOr(my_bits_high,$00100804);
                      opp_bits_high := BXOr(opp_bits_high,$00100804);
                    end;
                end
              else
              if BAnd(my_bits_high,$00100000) <> 0 then { if plat[E7] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$00000804);
                  opp_bits_high := BXOr(opp_bits_high,$00000804);
                end;
            end
          else
          if BAnd(my_bits_high,$00000800) <> 0 then { if plat[D6] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00000004);
              opp_bits_high := BXOr(opp_bits_high,$00000004);
            end;
        end;
      if BAnd(opp_bits_high,$00000002) <> 0 then { if plat[B5] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00000200) <> 0 then { if plat[B6] = adversaire then }
            begin
              if BAnd(opp_bits_high,$00020000) <> 0 then { if plat[B7] = adversaire then }
                begin
                  if BAnd(my_bits_high,$02000000) <> 0 then { if plat[B8] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_high := BOr(my_bits_high,$00020202);
                      opp_bits_high := BXOr(opp_bits_high,$00020202);
                    end;
                end
              else
              if BAnd(my_bits_high,$00020000) <> 0 then { if plat[B7] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$00000202);
                  opp_bits_high := BXOr(opp_bits_high,$00000202);
                end;
            end
          else
          if BAnd(my_bits_high,$00000200) <> 0 then { if plat[B6] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00000002);
              opp_bits_high := BXOr(opp_bits_high,$00000002);
            end;
        end;
    if (nbPrise <> 0)
      then
        begin
          diffPions := succ(diffPions+nbPrise);
          ModifPlatBitboard_b4 := BXOr(vecteurParite,$00000001);
          my_bits_low := BOr(my_bits_low,$02000000);  { place the disc in B4 }
          g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
          g_my_bits_high  := opp_bits_high;
          g_opp_bits_low  := my_bits_low;
          g_opp_bits_high := my_bits_high;
        end
      else
        ModifPlatBitboard_b4 := vecteurParite;
  end;
end;



function ModifPlatBitboard_c4(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32;
                           var resultat : bitboard; var diffPions : SInt32) : SInt32;
var nbPrise : SInt32;
begin
  with resultat do
    begin
      nbPrise := 0;
      if BAnd(opp_bits_low,$00020000) <> 0 then { if plat[B3] = adversaire then }
        begin
          if BAnd(my_bits_low,$00000100) <> 0 then { if plat[A2] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00020000);
              opp_bits_low := BXOr(opp_bits_low,$00020000);
            end;
        end;
      if BAnd(opp_bits_low,$00040000) <> 0 then { if plat[C3] = adversaire then }
        begin
          if BAnd(opp_bits_low,$00000400) <> 0 then { if plat[C2] = adversaire then }
            begin
              if BAnd(my_bits_low,$00000004) <> 0 then { if plat[C1] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$00040400);
                  opp_bits_low := BXOr(opp_bits_low,$00040400);
                end;
            end
          else
          if BAnd(my_bits_low,$00000400) <> 0 then { if plat[C2] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00040000);
              opp_bits_low := BXOr(opp_bits_low,$00040000);
            end;
        end;
      if BAnd(opp_bits_low,$00080000) <> 0 then { if plat[D3] = adversaire then }
        begin
          if BAnd(opp_bits_low,$00001000) <> 0 then { if plat[E2] = adversaire then }
            begin
              if BAnd(my_bits_low,$00000020) <> 0 then { if plat[F1] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$00081000);
                  opp_bits_low := BXOr(opp_bits_low,$00081000);
                end;
            end
          else
          if BAnd(my_bits_low,$00001000) <> 0 then { if plat[E2] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00080000);
              opp_bits_low := BXOr(opp_bits_low,$00080000);
            end;
        end;
      if BAnd(opp_bits_low,$08000000) <> 0 then { if plat[D4] = adversaire then }
        begin
          if BAnd(opp_bits_low,$10000000) <> 0 then { if plat[E4] = adversaire then }
            begin
              if BAnd(opp_bits_low,$20000000) <> 0 then { if plat[F4] = adversaire then }
                begin
                  if BAnd(opp_bits_low,$40000000) <> 0 then { if plat[G4] = adversaire then }
                    begin
                      if BAnd(my_bits_low,$80000000) <> 0 then { if plat[H4] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$78000000);
                          opp_bits_low := BXOr(opp_bits_low,$78000000);
                        end;
                    end
                  else
                  if BAnd(my_bits_low,$40000000) <> 0 then { if plat[G4] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$38000000);
                      opp_bits_low := BXOr(opp_bits_low,$38000000);
                    end;
                end
              else
              if BAnd(my_bits_low,$20000000) <> 0 then { if plat[F4] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$18000000);
                  opp_bits_low := BXOr(opp_bits_low,$18000000);
                end;
            end
          else
          if BAnd(my_bits_low,$10000000) <> 0 then { if plat[E4] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$08000000);
              opp_bits_low := BXOr(opp_bits_low,$08000000);
            end;
        end;
      if BAnd(opp_bits_high,$00000008) <> 0 then { if plat[D5] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00001000) <> 0 then { if plat[E6] = adversaire then }
            begin
              if BAnd(opp_bits_high,$00200000) <> 0 then { if plat[F7] = adversaire then }
                begin
                  if BAnd(my_bits_high,$40000000) <> 0 then { if plat[G8] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_high := BOr(my_bits_high,$00201008);
                      opp_bits_high := BXOr(opp_bits_high,$00201008);
                    end;
                end
              else
              if BAnd(my_bits_high,$00200000) <> 0 then { if plat[F7] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$00001008);
                  opp_bits_high := BXOr(opp_bits_high,$00001008);
                end;
            end
          else
          if BAnd(my_bits_high,$00001000) <> 0 then { if plat[E6] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00000008);
              opp_bits_high := BXOr(opp_bits_high,$00000008);
            end;
        end;
      if BAnd(opp_bits_high,$00000004) <> 0 then { if plat[C5] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00000400) <> 0 then { if plat[C6] = adversaire then }
            begin
              if BAnd(opp_bits_high,$00040000) <> 0 then { if plat[C7] = adversaire then }
                begin
                  if BAnd(my_bits_high,$04000000) <> 0 then { if plat[C8] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_high := BOr(my_bits_high,$00040404);
                      opp_bits_high := BXOr(opp_bits_high,$00040404);
                    end;
                end
              else
              if BAnd(my_bits_high,$00040000) <> 0 then { if plat[C7] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$00000404);
                  opp_bits_high := BXOr(opp_bits_high,$00000404);
                end;
            end
          else
          if BAnd(my_bits_high,$00000400) <> 0 then { if plat[C6] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00000004);
              opp_bits_high := BXOr(opp_bits_high,$00000004);
            end;
        end;
      if BAnd(opp_bits_high,$00000002) <> 0 then { if plat[B5] = adversaire then }
        begin
          if BAnd(my_bits_high,$00000100) <> 0 then { if plat[A6] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00000002);
              opp_bits_high := BXOr(opp_bits_high,$00000002);
            end;
        end;
      if BAnd(opp_bits_low,$02000000) <> 0 then { if plat[B4] = adversaire then }
        begin
          if BAnd(my_bits_low,$01000000) <> 0 then { if plat[A4] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$02000000);
              opp_bits_low := BXOr(opp_bits_low,$02000000);
            end;
        end;
    if (nbPrise <> 0)
      then
        begin
          diffPions := succ(diffPions+nbPrise);
          ModifPlatBitboard_c4 := BXOr(vecteurParite,$00000001);
          my_bits_low := BOr(my_bits_low,$04000000);  { place the disc in C4 }
          g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
          g_my_bits_high  := opp_bits_high;
          g_opp_bits_low  := my_bits_low;
          g_opp_bits_high := my_bits_high;
        end
      else
        ModifPlatBitboard_c4 := vecteurParite;
  end;
end;



function ModifPlatBitboard_d4(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32;
                           var resultat : bitboard; var diffPions : SInt32) : SInt32;
var nbPrise : SInt32;
begin
  with resultat do
    begin
      nbPrise := 0;
      if BAnd(opp_bits_low,$00040000) <> 0 then { if plat[C3] = adversaire then }
        begin
          if BAnd(opp_bits_low,$00000200) <> 0 then { if plat[B2] = adversaire then }
            begin
              if BAnd(my_bits_low,$00000001) <> 0 then { if plat[A1] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$00040200);
                  opp_bits_low := BXOr(opp_bits_low,$00040200);
                end;
            end
          else
          if BAnd(my_bits_low,$00000200) <> 0 then { if plat[B2] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00040000);
              opp_bits_low := BXOr(opp_bits_low,$00040000);
            end;
        end;
      if BAnd(opp_bits_low,$00080000) <> 0 then { if plat[D3] = adversaire then }
        begin
          if BAnd(opp_bits_low,$00000800) <> 0 then { if plat[D2] = adversaire then }
            begin
              if BAnd(my_bits_low,$00000008) <> 0 then { if plat[D1] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$00080800);
                  opp_bits_low := BXOr(opp_bits_low,$00080800);
                end;
            end
          else
          if BAnd(my_bits_low,$00000800) <> 0 then { if plat[D2] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00080000);
              opp_bits_low := BXOr(opp_bits_low,$00080000);
            end;
        end;
      if BAnd(opp_bits_low,$00100000) <> 0 then { if plat[E3] = adversaire then }
        begin
          if BAnd(opp_bits_low,$00002000) <> 0 then { if plat[F2] = adversaire then }
            begin
              if BAnd(my_bits_low,$00000040) <> 0 then { if plat[G1] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$00102000);
                  opp_bits_low := BXOr(opp_bits_low,$00102000);
                end;
            end
          else
          if BAnd(my_bits_low,$00002000) <> 0 then { if plat[F2] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00100000);
              opp_bits_low := BXOr(opp_bits_low,$00100000);
            end;
        end;
      if BAnd(opp_bits_low,$10000000) <> 0 then { if plat[E4] = adversaire then }
        begin
          if BAnd(opp_bits_low,$20000000) <> 0 then { if plat[F4] = adversaire then }
            begin
              if BAnd(opp_bits_low,$40000000) <> 0 then { if plat[G4] = adversaire then }
                begin
                  if BAnd(my_bits_low,$80000000) <> 0 then { if plat[H4] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$70000000);
                      opp_bits_low := BXOr(opp_bits_low,$70000000);
                    end;
                end
              else
              if BAnd(my_bits_low,$40000000) <> 0 then { if plat[G4] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$30000000);
                  opp_bits_low := BXOr(opp_bits_low,$30000000);
                end;
            end
          else
          if BAnd(my_bits_low,$20000000) <> 0 then { if plat[F4] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$10000000);
              opp_bits_low := BXOr(opp_bits_low,$10000000);
            end;
        end;
      if BAnd(opp_bits_high,$00000010) <> 0 then { if plat[E5] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00002000) <> 0 then { if plat[F6] = adversaire then }
            begin
              if BAnd(opp_bits_high,$00400000) <> 0 then { if plat[G7] = adversaire then }
                begin
                  if BAnd(my_bits_high,$80000000) <> 0 then { if plat[H8] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_high := BOr(my_bits_high,$00402010);
                      opp_bits_high := BXOr(opp_bits_high,$00402010);
                    end;
                end
              else
              if BAnd(my_bits_high,$00400000) <> 0 then { if plat[G7] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$00002010);
                  opp_bits_high := BXOr(opp_bits_high,$00002010);
                end;
            end
          else
          if BAnd(my_bits_high,$00002000) <> 0 then { if plat[F6] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00000010);
              opp_bits_high := BXOr(opp_bits_high,$00000010);
            end;
        end;
      if BAnd(opp_bits_high,$00000008) <> 0 then { if plat[D5] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00000800) <> 0 then { if plat[D6] = adversaire then }
            begin
              if BAnd(opp_bits_high,$00080000) <> 0 then { if plat[D7] = adversaire then }
                begin
                  if BAnd(my_bits_high,$08000000) <> 0 then { if plat[D8] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_high := BOr(my_bits_high,$00080808);
                      opp_bits_high := BXOr(opp_bits_high,$00080808);
                    end;
                end
              else
              if BAnd(my_bits_high,$00080000) <> 0 then { if plat[D7] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$00000808);
                  opp_bits_high := BXOr(opp_bits_high,$00000808);
                end;
            end
          else
          if BAnd(my_bits_high,$00000800) <> 0 then { if plat[D6] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00000008);
              opp_bits_high := BXOr(opp_bits_high,$00000008);
            end;
        end;
      if BAnd(opp_bits_high,$00000004) <> 0 then { if plat[C5] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00000200) <> 0 then { if plat[B6] = adversaire then }
            begin
              if BAnd(my_bits_high,$00010000) <> 0 then { if plat[A7] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$00000204);
                  opp_bits_high := BXOr(opp_bits_high,$00000204);
                end;
            end
          else
          if BAnd(my_bits_high,$00000200) <> 0 then { if plat[B6] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00000004);
              opp_bits_high := BXOr(opp_bits_high,$00000004);
            end;
        end;
      if BAnd(opp_bits_low,$04000000) <> 0 then { if plat[C4] = adversaire then }
        begin
          if BAnd(opp_bits_low,$02000000) <> 0 then { if plat[B4] = adversaire then }
            begin
              if BAnd(my_bits_low,$01000000) <> 0 then { if plat[A4] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$06000000);
                  opp_bits_low := BXOr(opp_bits_low,$06000000);
                end;
            end
          else
          if BAnd(my_bits_low,$02000000) <> 0 then { if plat[B4] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$04000000);
              opp_bits_low := BXOr(opp_bits_low,$04000000);
            end;
        end;
    if (nbPrise <> 0)
      then
        begin
          diffPions := succ(diffPions+nbPrise);
          ModifPlatBitboard_d4 := BXOr(vecteurParite,$00000001);
          my_bits_low := BOr(my_bits_low,$08000000);  { place the disc in D4 }
          g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
          g_my_bits_high  := opp_bits_high;
          g_opp_bits_low  := my_bits_low;
          g_opp_bits_high := my_bits_high;
        end
      else
        ModifPlatBitboard_d4 := vecteurParite;
  end;
end;



function ModifPlatBitboard_e4(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32;
                           var resultat : bitboard; var diffPions : SInt32) : SInt32;
var nbPrise : SInt32;
begin
  with resultat do
    begin
      nbPrise := 0;
      if BAnd(opp_bits_low,$00080000) <> 0 then { if plat[D3] = adversaire then }
        begin
          if BAnd(opp_bits_low,$00000400) <> 0 then { if plat[C2] = adversaire then }
            begin
              if BAnd(my_bits_low,$00000002) <> 0 then { if plat[B1] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$00080400);
                  opp_bits_low := BXOr(opp_bits_low,$00080400);
                end;
            end
          else
          if BAnd(my_bits_low,$00000400) <> 0 then { if plat[C2] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00080000);
              opp_bits_low := BXOr(opp_bits_low,$00080000);
            end;
        end;
      if BAnd(opp_bits_low,$00100000) <> 0 then { if plat[E3] = adversaire then }
        begin
          if BAnd(opp_bits_low,$00001000) <> 0 then { if plat[E2] = adversaire then }
            begin
              if BAnd(my_bits_low,$00000010) <> 0 then { if plat[E1] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$00101000);
                  opp_bits_low := BXOr(opp_bits_low,$00101000);
                end;
            end
          else
          if BAnd(my_bits_low,$00001000) <> 0 then { if plat[E2] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00100000);
              opp_bits_low := BXOr(opp_bits_low,$00100000);
            end;
        end;
      if BAnd(opp_bits_low,$00200000) <> 0 then { if plat[F3] = adversaire then }
        begin
          if BAnd(opp_bits_low,$00004000) <> 0 then { if plat[G2] = adversaire then }
            begin
              if BAnd(my_bits_low,$00000080) <> 0 then { if plat[H1] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$00204000);
                  opp_bits_low := BXOr(opp_bits_low,$00204000);
                end;
            end
          else
          if BAnd(my_bits_low,$00004000) <> 0 then { if plat[G2] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00200000);
              opp_bits_low := BXOr(opp_bits_low,$00200000);
            end;
        end;
      if BAnd(opp_bits_low,$20000000) <> 0 then { if plat[F4] = adversaire then }
        begin
          if BAnd(opp_bits_low,$40000000) <> 0 then { if plat[G4] = adversaire then }
            begin
              if BAnd(my_bits_low,$80000000) <> 0 then { if plat[H4] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$60000000);
                  opp_bits_low := BXOr(opp_bits_low,$60000000);
                end;
            end
          else
          if BAnd(my_bits_low,$40000000) <> 0 then { if plat[G4] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$20000000);
              opp_bits_low := BXOr(opp_bits_low,$20000000);
            end;
        end;
      if BAnd(opp_bits_high,$00000020) <> 0 then { if plat[F5] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00004000) <> 0 then { if plat[G6] = adversaire then }
            begin
              if BAnd(my_bits_high,$00800000) <> 0 then { if plat[H7] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$00004020);
                  opp_bits_high := BXOr(opp_bits_high,$00004020);
                end;
            end
          else
          if BAnd(my_bits_high,$00004000) <> 0 then { if plat[G6] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00000020);
              opp_bits_high := BXOr(opp_bits_high,$00000020);
            end;
        end;
      if BAnd(opp_bits_high,$00000010) <> 0 then { if plat[E5] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00001000) <> 0 then { if plat[E6] = adversaire then }
            begin
              if BAnd(opp_bits_high,$00100000) <> 0 then { if plat[E7] = adversaire then }
                begin
                  if BAnd(my_bits_high,$10000000) <> 0 then { if plat[E8] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_high := BOr(my_bits_high,$00101010);
                      opp_bits_high := BXOr(opp_bits_high,$00101010);
                    end;
                end
              else
              if BAnd(my_bits_high,$00100000) <> 0 then { if plat[E7] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$00001010);
                  opp_bits_high := BXOr(opp_bits_high,$00001010);
                end;
            end
          else
          if BAnd(my_bits_high,$00001000) <> 0 then { if plat[E6] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00000010);
              opp_bits_high := BXOr(opp_bits_high,$00000010);
            end;
        end;
      if BAnd(opp_bits_high,$00000008) <> 0 then { if plat[D5] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00000400) <> 0 then { if plat[C6] = adversaire then }
            begin
              if BAnd(opp_bits_high,$00020000) <> 0 then { if plat[B7] = adversaire then }
                begin
                  if BAnd(my_bits_high,$01000000) <> 0 then { if plat[A8] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_high := BOr(my_bits_high,$00020408);
                      opp_bits_high := BXOr(opp_bits_high,$00020408);
                    end;
                end
              else
              if BAnd(my_bits_high,$00020000) <> 0 then { if plat[B7] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$00000408);
                  opp_bits_high := BXOr(opp_bits_high,$00000408);
                end;
            end
          else
          if BAnd(my_bits_high,$00000400) <> 0 then { if plat[C6] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00000008);
              opp_bits_high := BXOr(opp_bits_high,$00000008);
            end;
        end;
      if BAnd(opp_bits_low,$08000000) <> 0 then { if plat[D4] = adversaire then }
        begin
          if BAnd(opp_bits_low,$04000000) <> 0 then { if plat[C4] = adversaire then }
            begin
              if BAnd(opp_bits_low,$02000000) <> 0 then { if plat[B4] = adversaire then }
                begin
                  if BAnd(my_bits_low,$01000000) <> 0 then { if plat[A4] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$0E000000);
                      opp_bits_low := BXOr(opp_bits_low,$0E000000);
                    end;
                end
              else
              if BAnd(my_bits_low,$02000000) <> 0 then { if plat[B4] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$0C000000);
                  opp_bits_low := BXOr(opp_bits_low,$0C000000);
                end;
            end
          else
          if BAnd(my_bits_low,$04000000) <> 0 then { if plat[C4] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$08000000);
              opp_bits_low := BXOr(opp_bits_low,$08000000);
            end;
        end;
    if (nbPrise <> 0)
      then
        begin
          diffPions := succ(diffPions+nbPrise);
          ModifPlatBitboard_e4 := BXOr(vecteurParite,$00000002);
          my_bits_low := BOr(my_bits_low,$10000000);  { place the disc in E4 }
          g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
          g_my_bits_high  := opp_bits_high;
          g_opp_bits_low  := my_bits_low;
          g_opp_bits_high := my_bits_high;
        end
      else
        ModifPlatBitboard_e4 := vecteurParite;
  end;
end;



function ModifPlatBitboard_f4(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32;
                           var resultat : bitboard; var diffPions : SInt32) : SInt32;
var nbPrise : SInt32;
begin
  with resultat do
    begin
      nbPrise := 0;
      if BAnd(opp_bits_low,$00100000) <> 0 then { if plat[E3] = adversaire then }
        begin
          if BAnd(opp_bits_low,$00000800) <> 0 then { if plat[D2] = adversaire then }
            begin
              if BAnd(my_bits_low,$00000004) <> 0 then { if plat[C1] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$00100800);
                  opp_bits_low := BXOr(opp_bits_low,$00100800);
                end;
            end
          else
          if BAnd(my_bits_low,$00000800) <> 0 then { if plat[D2] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00100000);
              opp_bits_low := BXOr(opp_bits_low,$00100000);
            end;
        end;
      if BAnd(opp_bits_low,$00200000) <> 0 then { if plat[F3] = adversaire then }
        begin
          if BAnd(opp_bits_low,$00002000) <> 0 then { if plat[F2] = adversaire then }
            begin
              if BAnd(my_bits_low,$00000020) <> 0 then { if plat[F1] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$00202000);
                  opp_bits_low := BXOr(opp_bits_low,$00202000);
                end;
            end
          else
          if BAnd(my_bits_low,$00002000) <> 0 then { if plat[F2] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00200000);
              opp_bits_low := BXOr(opp_bits_low,$00200000);
            end;
        end;
      if BAnd(opp_bits_low,$00400000) <> 0 then { if plat[G3] = adversaire then }
        begin
          if BAnd(my_bits_low,$00008000) <> 0 then { if plat[H2] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00400000);
              opp_bits_low := BXOr(opp_bits_low,$00400000);
            end;
        end;
      if BAnd(opp_bits_low,$40000000) <> 0 then { if plat[G4] = adversaire then }
        begin
          if BAnd(my_bits_low,$80000000) <> 0 then { if plat[H4] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$40000000);
              opp_bits_low := BXOr(opp_bits_low,$40000000);
            end;
        end;
      if BAnd(opp_bits_high,$00000040) <> 0 then { if plat[G5] = adversaire then }
        begin
          if BAnd(my_bits_high,$00008000) <> 0 then { if plat[H6] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00000040);
              opp_bits_high := BXOr(opp_bits_high,$00000040);
            end;
        end;
      if BAnd(opp_bits_high,$00000020) <> 0 then { if plat[F5] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00002000) <> 0 then { if plat[F6] = adversaire then }
            begin
              if BAnd(opp_bits_high,$00200000) <> 0 then { if plat[F7] = adversaire then }
                begin
                  if BAnd(my_bits_high,$20000000) <> 0 then { if plat[F8] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_high := BOr(my_bits_high,$00202020);
                      opp_bits_high := BXOr(opp_bits_high,$00202020);
                    end;
                end
              else
              if BAnd(my_bits_high,$00200000) <> 0 then { if plat[F7] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$00002020);
                  opp_bits_high := BXOr(opp_bits_high,$00002020);
                end;
            end
          else
          if BAnd(my_bits_high,$00002000) <> 0 then { if plat[F6] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00000020);
              opp_bits_high := BXOr(opp_bits_high,$00000020);
            end;
        end;
      if BAnd(opp_bits_high,$00000010) <> 0 then { if plat[E5] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00000800) <> 0 then { if plat[D6] = adversaire then }
            begin
              if BAnd(opp_bits_high,$00040000) <> 0 then { if plat[C7] = adversaire then }
                begin
                  if BAnd(my_bits_high,$02000000) <> 0 then { if plat[B8] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_high := BOr(my_bits_high,$00040810);
                      opp_bits_high := BXOr(opp_bits_high,$00040810);
                    end;
                end
              else
              if BAnd(my_bits_high,$00040000) <> 0 then { if plat[C7] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$00000810);
                  opp_bits_high := BXOr(opp_bits_high,$00000810);
                end;
            end
          else
          if BAnd(my_bits_high,$00000800) <> 0 then { if plat[D6] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00000010);
              opp_bits_high := BXOr(opp_bits_high,$00000010);
            end;
        end;
      if BAnd(opp_bits_low,$10000000) <> 0 then { if plat[E4] = adversaire then }
        begin
          if BAnd(opp_bits_low,$08000000) <> 0 then { if plat[D4] = adversaire then }
            begin
              if BAnd(opp_bits_low,$04000000) <> 0 then { if plat[C4] = adversaire then }
                begin
                  if BAnd(opp_bits_low,$02000000) <> 0 then { if plat[B4] = adversaire then }
                    begin
                      if BAnd(my_bits_low,$01000000) <> 0 then { if plat[A4] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$1E000000);
                          opp_bits_low := BXOr(opp_bits_low,$1E000000);
                        end;
                    end
                  else
                  if BAnd(my_bits_low,$02000000) <> 0 then { if plat[B4] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$1C000000);
                      opp_bits_low := BXOr(opp_bits_low,$1C000000);
                    end;
                end
              else
              if BAnd(my_bits_low,$04000000) <> 0 then { if plat[C4] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$18000000);
                  opp_bits_low := BXOr(opp_bits_low,$18000000);
                end;
            end
          else
          if BAnd(my_bits_low,$08000000) <> 0 then { if plat[D4] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$10000000);
              opp_bits_low := BXOr(opp_bits_low,$10000000);
            end;
        end;
    if (nbPrise <> 0)
      then
        begin
          diffPions := succ(diffPions+nbPrise);
          ModifPlatBitboard_f4 := BXOr(vecteurParite,$00000002);
          my_bits_low := BOr(my_bits_low,$20000000);  { place the disc in F4 }
          g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
          g_my_bits_high  := opp_bits_high;
          g_opp_bits_low  := my_bits_low;
          g_opp_bits_high := my_bits_high;
        end
      else
        ModifPlatBitboard_f4 := vecteurParite;
  end;
end;



function ModifPlatBitboard_g4(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32;
                           var resultat : bitboard; var diffPions : SInt32) : SInt32;
var nbPrise : SInt32;
begin
  with resultat do
    begin
      nbPrise := 0;
      if BAnd(opp_bits_high,$00000040) <> 0 then { if plat[G5] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00004000) <> 0 then { if plat[G6] = adversaire then }
            begin
              if BAnd(opp_bits_high,$00400000) <> 0 then { if plat[G7] = adversaire then }
                begin
                  if BAnd(my_bits_high,$40000000) <> 0 then { if plat[G8] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_high := BOr(my_bits_high,$00404040);
                      opp_bits_high := BXOr(opp_bits_high,$00404040);
                    end;
                end
              else
              if BAnd(my_bits_high,$00400000) <> 0 then { if plat[G7] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$00004040);
                  opp_bits_high := BXOr(opp_bits_high,$00004040);
                end;
            end
          else
          if BAnd(my_bits_high,$00004000) <> 0 then { if plat[G6] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00000040);
              opp_bits_high := BXOr(opp_bits_high,$00000040);
            end;
        end;
      if BAnd(opp_bits_high,$00000020) <> 0 then { if plat[F5] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00001000) <> 0 then { if plat[E6] = adversaire then }
            begin
              if BAnd(opp_bits_high,$00080000) <> 0 then { if plat[D7] = adversaire then }
                begin
                  if BAnd(my_bits_high,$04000000) <> 0 then { if plat[C8] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_high := BOr(my_bits_high,$00081020);
                      opp_bits_high := BXOr(opp_bits_high,$00081020);
                    end;
                end
              else
              if BAnd(my_bits_high,$00080000) <> 0 then { if plat[D7] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$00001020);
                  opp_bits_high := BXOr(opp_bits_high,$00001020);
                end;
            end
          else
          if BAnd(my_bits_high,$00001000) <> 0 then { if plat[E6] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00000020);
              opp_bits_high := BXOr(opp_bits_high,$00000020);
            end;
        end;
      if BAnd(opp_bits_low,$20000000) <> 0 then { if plat[F4] = adversaire then }
        begin
          if BAnd(opp_bits_low,$10000000) <> 0 then { if plat[E4] = adversaire then }
            begin
              if BAnd(opp_bits_low,$08000000) <> 0 then { if plat[D4] = adversaire then }
                begin
                  if BAnd(opp_bits_low,$04000000) <> 0 then { if plat[C4] = adversaire then }
                    begin
                      if BAnd(opp_bits_low,$02000000) <> 0 then { if plat[B4] = adversaire then }
                        begin
                          if BAnd(my_bits_low,$01000000) <> 0 then { if plat[A4] = couleur then }
                            begin
                              nbPrise := nbPrise + 10;
                              my_bits_low := BOr(my_bits_low,$3E000000);
                              opp_bits_low := BXOr(opp_bits_low,$3E000000);
                            end;
                        end
                      else
                      if BAnd(my_bits_low,$02000000) <> 0 then { if plat[B4] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$3C000000);
                          opp_bits_low := BXOr(opp_bits_low,$3C000000);
                        end;
                    end
                  else
                  if BAnd(my_bits_low,$04000000) <> 0 then { if plat[C4] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$38000000);
                      opp_bits_low := BXOr(opp_bits_low,$38000000);
                    end;
                end
              else
              if BAnd(my_bits_low,$08000000) <> 0 then { if plat[D4] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$30000000);
                  opp_bits_low := BXOr(opp_bits_low,$30000000);
                end;
            end
          else
          if BAnd(my_bits_low,$10000000) <> 0 then { if plat[E4] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$20000000);
              opp_bits_low := BXOr(opp_bits_low,$20000000);
            end;
        end;
      if BAnd(opp_bits_low,$00200000) <> 0 then { if plat[F3] = adversaire then }
        begin
          if BAnd(opp_bits_low,$00001000) <> 0 then { if plat[E2] = adversaire then }
            begin
              if BAnd(my_bits_low,$00000008) <> 0 then { if plat[D1] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$00201000);
                  opp_bits_low := BXOr(opp_bits_low,$00201000);
                end;
            end
          else
          if BAnd(my_bits_low,$00001000) <> 0 then { if plat[E2] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00200000);
              opp_bits_low := BXOr(opp_bits_low,$00200000);
            end;
        end;
      if BAnd(opp_bits_low,$00400000) <> 0 then { if plat[G3] = adversaire then }
        begin
          if BAnd(opp_bits_low,$00004000) <> 0 then { if plat[G2] = adversaire then }
            begin
              if BAnd(my_bits_low,$00000040) <> 0 then { if plat[G1] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$00404000);
                  opp_bits_low := BXOr(opp_bits_low,$00404000);
                end;
            end
          else
          if BAnd(my_bits_low,$00004000) <> 0 then { if plat[G2] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00400000);
              opp_bits_low := BXOr(opp_bits_low,$00400000);
            end;
        end;
    if (nbPrise <> 0)
      then
        begin
          diffPions := succ(diffPions+nbPrise);
          ModifPlatBitboard_g4 := BXOr(vecteurParite,$00000002);
          my_bits_low := BOr(my_bits_low,$40000000);  { place the disc in G4 }
          g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
          g_my_bits_high  := opp_bits_high;
          g_opp_bits_low  := my_bits_low;
          g_opp_bits_high := my_bits_high;
        end
      else
        ModifPlatBitboard_g4 := vecteurParite;
  end;
end;



function ModifPlatBitboard_h4(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32;
                           var resultat : bitboard; var diffPions : SInt32) : SInt32;
var nbPrise : SInt32;
begin
  with resultat do
    begin
      nbPrise := 0;
      if BAnd(opp_bits_high,$00000080) <> 0 then { if plat[H5] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00008000) <> 0 then { if plat[H6] = adversaire then }
            begin
              if BAnd(opp_bits_high,$00800000) <> 0 then { if plat[H7] = adversaire then }
                begin
                  if BAnd(my_bits_high,$80000000) <> 0 then { if plat[H8] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_high := BOr(my_bits_high,$00808080);
                      opp_bits_high := BXOr(opp_bits_high,$00808080);
                    end;
                end
              else
              if BAnd(my_bits_high,$00800000) <> 0 then { if plat[H7] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$00008080);
                  opp_bits_high := BXOr(opp_bits_high,$00008080);
                end;
            end
          else
          if BAnd(my_bits_high,$00008000) <> 0 then { if plat[H6] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00000080);
              opp_bits_high := BXOr(opp_bits_high,$00000080);
            end;
        end;
      if BAnd(opp_bits_high,$00000040) <> 0 then { if plat[G5] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00002000) <> 0 then { if plat[F6] = adversaire then }
            begin
              if BAnd(opp_bits_high,$00100000) <> 0 then { if plat[E7] = adversaire then }
                begin
                  if BAnd(my_bits_high,$08000000) <> 0 then { if plat[D8] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_high := BOr(my_bits_high,$00102040);
                      opp_bits_high := BXOr(opp_bits_high,$00102040);
                    end;
                end
              else
              if BAnd(my_bits_high,$00100000) <> 0 then { if plat[E7] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$00002040);
                  opp_bits_high := BXOr(opp_bits_high,$00002040);
                end;
            end
          else
          if BAnd(my_bits_high,$00002000) <> 0 then { if plat[F6] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00000040);
              opp_bits_high := BXOr(opp_bits_high,$00000040);
            end;
        end;
      if BAnd(opp_bits_low,$40000000) <> 0 then { if plat[G4] = adversaire then }
        begin
          if BAnd(opp_bits_low,$20000000) <> 0 then { if plat[F4] = adversaire then }
            begin
              if BAnd(opp_bits_low,$10000000) <> 0 then { if plat[E4] = adversaire then }
                begin
                  if BAnd(opp_bits_low,$08000000) <> 0 then { if plat[D4] = adversaire then }
                    begin
                      if BAnd(opp_bits_low,$04000000) <> 0 then { if plat[C4] = adversaire then }
                        begin
                          if BAnd(opp_bits_low,$02000000) <> 0 then { if plat[B4] = adversaire then }
                            begin
                              if BAnd(my_bits_low,$01000000) <> 0 then { if plat[A4] = couleur then }
                                begin
                                  nbPrise := nbPrise + 12;
                                  my_bits_low := BOr(my_bits_low,$7E000000);
                                  opp_bits_low := BXOr(opp_bits_low,$7E000000);
                                end;
                            end
                          else
                          if BAnd(my_bits_low,$02000000) <> 0 then { if plat[B4] = couleur then }
                            begin
                              nbPrise := nbPrise + 10;
                              my_bits_low := BOr(my_bits_low,$7C000000);
                              opp_bits_low := BXOr(opp_bits_low,$7C000000);
                            end;
                        end
                      else
                      if BAnd(my_bits_low,$04000000) <> 0 then { if plat[C4] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$78000000);
                          opp_bits_low := BXOr(opp_bits_low,$78000000);
                        end;
                    end
                  else
                  if BAnd(my_bits_low,$08000000) <> 0 then { if plat[D4] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$70000000);
                      opp_bits_low := BXOr(opp_bits_low,$70000000);
                    end;
                end
              else
              if BAnd(my_bits_low,$10000000) <> 0 then { if plat[E4] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$60000000);
                  opp_bits_low := BXOr(opp_bits_low,$60000000);
                end;
            end
          else
          if BAnd(my_bits_low,$20000000) <> 0 then { if plat[F4] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$40000000);
              opp_bits_low := BXOr(opp_bits_low,$40000000);
            end;
        end;
      if BAnd(opp_bits_low,$00400000) <> 0 then { if plat[G3] = adversaire then }
        begin
          if BAnd(opp_bits_low,$00002000) <> 0 then { if plat[F2] = adversaire then }
            begin
              if BAnd(my_bits_low,$00000010) <> 0 then { if plat[E1] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$00402000);
                  opp_bits_low := BXOr(opp_bits_low,$00402000);
                end;
            end
          else
          if BAnd(my_bits_low,$00002000) <> 0 then { if plat[F2] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00400000);
              opp_bits_low := BXOr(opp_bits_low,$00400000);
            end;
        end;
      if BAnd(opp_bits_low,$00800000) <> 0 then { if plat[H3] = adversaire then }
        begin
          if BAnd(opp_bits_low,$00008000) <> 0 then { if plat[H2] = adversaire then }
            begin
              if BAnd(my_bits_low,$00000080) <> 0 then { if plat[H1] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$00808000);
                  opp_bits_low := BXOr(opp_bits_low,$00808000);
                end;
            end
          else
          if BAnd(my_bits_low,$00008000) <> 0 then { if plat[H2] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$00800000);
              opp_bits_low := BXOr(opp_bits_low,$00800000);
            end;
        end;
    if (nbPrise <> 0)
      then
        begin
          diffPions := succ(diffPions+nbPrise);
          ModifPlatBitboard_h4 := BXOr(vecteurParite,$00000002);
          my_bits_low := BOr(my_bits_low,$80000000);  { place the disc in H4 }
          g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
          g_my_bits_high  := opp_bits_high;
          g_opp_bits_low  := my_bits_low;
          g_opp_bits_high := my_bits_high;
        end
      else
        ModifPlatBitboard_h4 := vecteurParite;
  end;
end;



function ModifPlatBitboard_a5(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32;
                           var resultat : bitboard; var diffPions : SInt32) : SInt32;
var nbPrise : SInt32;
begin
  with resultat do
    begin
      nbPrise := 0;
      if BAnd(opp_bits_low,$01000000) <> 0 then { if plat[A4] = adversaire then }
        begin
          if BAnd(opp_bits_low,$00010000) <> 0 then { if plat[A3] = adversaire then }
            begin
              if BAnd(opp_bits_low,$00000100) <> 0 then { if plat[A2] = adversaire then }
                begin
                  if BAnd(my_bits_low,$00000001) <> 0 then { if plat[A1] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$01010100);
                      opp_bits_low := BXOr(opp_bits_low,$01010100);
                    end;
                end
              else
              if BAnd(my_bits_low,$00000100) <> 0 then { if plat[A2] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$01010000);
                  opp_bits_low := BXOr(opp_bits_low,$01010000);
                end;
            end
          else
          if BAnd(my_bits_low,$00010000) <> 0 then { if plat[A3] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$01000000);
              opp_bits_low := BXOr(opp_bits_low,$01000000);
            end;
        end;
      if BAnd(opp_bits_low,$02000000) <> 0 then { if plat[B4] = adversaire then }
        begin
          if BAnd(opp_bits_low,$00040000) <> 0 then { if plat[C3] = adversaire then }
            begin
              if BAnd(opp_bits_low,$00000800) <> 0 then { if plat[D2] = adversaire then }
                begin
                  if BAnd(my_bits_low,$00000010) <> 0 then { if plat[E1] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$02040800);
                      opp_bits_low := BXOr(opp_bits_low,$02040800);
                    end;
                end
              else
              if BAnd(my_bits_low,$00000800) <> 0 then { if plat[D2] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$02040000);
                  opp_bits_low := BXOr(opp_bits_low,$02040000);
                end;
            end
          else
          if BAnd(my_bits_low,$00040000) <> 0 then { if plat[C3] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$02000000);
              opp_bits_low := BXOr(opp_bits_low,$02000000);
            end;
        end;
      if BAnd(opp_bits_high,$00000002) <> 0 then { if plat[B5] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00000004) <> 0 then { if plat[C5] = adversaire then }
            begin
              if BAnd(opp_bits_high,$00000008) <> 0 then { if plat[D5] = adversaire then }
                begin
                  if BAnd(opp_bits_high,$00000010) <> 0 then { if plat[E5] = adversaire then }
                    begin
                      if BAnd(opp_bits_high,$00000020) <> 0 then { if plat[F5] = adversaire then }
                        begin
                          if BAnd(opp_bits_high,$00000040) <> 0 then { if plat[G5] = adversaire then }
                            begin
                              if BAnd(my_bits_high,$00000080) <> 0 then { if plat[H5] = couleur then }
                                begin
                                  nbPrise := nbPrise + 12;
                                  my_bits_high := BOr(my_bits_high,$0000007E);
                                  opp_bits_high := BXOr(opp_bits_high,$0000007E);
                                end;
                            end
                          else
                          if BAnd(my_bits_high,$00000040) <> 0 then { if plat[G5] = couleur then }
                            begin
                              nbPrise := nbPrise + 10;
                              my_bits_high := BOr(my_bits_high,$0000003E);
                              opp_bits_high := BXOr(opp_bits_high,$0000003E);
                            end;
                        end
                      else
                      if BAnd(my_bits_high,$00000020) <> 0 then { if plat[F5] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_high := BOr(my_bits_high,$0000001E);
                          opp_bits_high := BXOr(opp_bits_high,$0000001E);
                        end;
                    end
                  else
                  if BAnd(my_bits_high,$00000010) <> 0 then { if plat[E5] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_high := BOr(my_bits_high,$0000000E);
                      opp_bits_high := BXOr(opp_bits_high,$0000000E);
                    end;
                end
              else
              if BAnd(my_bits_high,$00000008) <> 0 then { if plat[D5] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$00000006);
                  opp_bits_high := BXOr(opp_bits_high,$00000006);
                end;
            end
          else
          if BAnd(my_bits_high,$00000004) <> 0 then { if plat[C5] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00000002);
              opp_bits_high := BXOr(opp_bits_high,$00000002);
            end;
        end;
      if BAnd(opp_bits_high,$00000200) <> 0 then { if plat[B6] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00040000) <> 0 then { if plat[C7] = adversaire then }
            begin
              if BAnd(my_bits_high,$08000000) <> 0 then { if plat[D8] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$00040200);
                  opp_bits_high := BXOr(opp_bits_high,$00040200);
                end;
            end
          else
          if BAnd(my_bits_high,$00040000) <> 0 then { if plat[C7] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00000200);
              opp_bits_high := BXOr(opp_bits_high,$00000200);
            end;
        end;
      if BAnd(opp_bits_high,$00000100) <> 0 then { if plat[A6] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00010000) <> 0 then { if plat[A7] = adversaire then }
            begin
              if BAnd(my_bits_high,$01000000) <> 0 then { if plat[A8] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$00010100);
                  opp_bits_high := BXOr(opp_bits_high,$00010100);
                end;
            end
          else
          if BAnd(my_bits_high,$00010000) <> 0 then { if plat[A7] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00000100);
              opp_bits_high := BXOr(opp_bits_high,$00000100);
            end;
        end;
    if (nbPrise <> 0)
      then
        begin
          diffPions := succ(diffPions+nbPrise);
          ModifPlatBitboard_a5 := BXOr(vecteurParite,$00000004);
          my_bits_high := BOr(my_bits_high,$00000001);  { place the disc in A5 }
          g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
          g_my_bits_high  := opp_bits_high;
          g_opp_bits_low  := my_bits_low;
          g_opp_bits_high := my_bits_high;
        end
      else
        ModifPlatBitboard_a5 := vecteurParite;
  end;
end;



function ModifPlatBitboard_b5(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32;
                           var resultat : bitboard; var diffPions : SInt32) : SInt32;
var nbPrise : SInt32;
begin
  with resultat do
    begin
      nbPrise := 0;
      if BAnd(opp_bits_low,$02000000) <> 0 then { if plat[B4] = adversaire then }
        begin
          if BAnd(opp_bits_low,$00020000) <> 0 then { if plat[B3] = adversaire then }
            begin
              if BAnd(opp_bits_low,$00000200) <> 0 then { if plat[B2] = adversaire then }
                begin
                  if BAnd(my_bits_low,$00000002) <> 0 then { if plat[B1] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$02020200);
                      opp_bits_low := BXOr(opp_bits_low,$02020200);
                    end;
                end
              else
              if BAnd(my_bits_low,$00000200) <> 0 then { if plat[B2] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$02020000);
                  opp_bits_low := BXOr(opp_bits_low,$02020000);
                end;
            end
          else
          if BAnd(my_bits_low,$00020000) <> 0 then { if plat[B3] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$02000000);
              opp_bits_low := BXOr(opp_bits_low,$02000000);
            end;
        end;
      if BAnd(opp_bits_low,$04000000) <> 0 then { if plat[C4] = adversaire then }
        begin
          if BAnd(opp_bits_low,$00080000) <> 0 then { if plat[D3] = adversaire then }
            begin
              if BAnd(opp_bits_low,$00001000) <> 0 then { if plat[E2] = adversaire then }
                begin
                  if BAnd(my_bits_low,$00000020) <> 0 then { if plat[F1] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$04081000);
                      opp_bits_low := BXOr(opp_bits_low,$04081000);
                    end;
                end
              else
              if BAnd(my_bits_low,$00001000) <> 0 then { if plat[E2] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$04080000);
                  opp_bits_low := BXOr(opp_bits_low,$04080000);
                end;
            end
          else
          if BAnd(my_bits_low,$00080000) <> 0 then { if plat[D3] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$04000000);
              opp_bits_low := BXOr(opp_bits_low,$04000000);
            end;
        end;
      if BAnd(opp_bits_high,$00000004) <> 0 then { if plat[C5] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00000008) <> 0 then { if plat[D5] = adversaire then }
            begin
              if BAnd(opp_bits_high,$00000010) <> 0 then { if plat[E5] = adversaire then }
                begin
                  if BAnd(opp_bits_high,$00000020) <> 0 then { if plat[F5] = adversaire then }
                    begin
                      if BAnd(opp_bits_high,$00000040) <> 0 then { if plat[G5] = adversaire then }
                        begin
                          if BAnd(my_bits_high,$00000080) <> 0 then { if plat[H5] = couleur then }
                            begin
                              nbPrise := nbPrise + 10;
                              my_bits_high := BOr(my_bits_high,$0000007C);
                              opp_bits_high := BXOr(opp_bits_high,$0000007C);
                            end;
                        end
                      else
                      if BAnd(my_bits_high,$00000040) <> 0 then { if plat[G5] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_high := BOr(my_bits_high,$0000003C);
                          opp_bits_high := BXOr(opp_bits_high,$0000003C);
                        end;
                    end
                  else
                  if BAnd(my_bits_high,$00000020) <> 0 then { if plat[F5] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_high := BOr(my_bits_high,$0000001C);
                      opp_bits_high := BXOr(opp_bits_high,$0000001C);
                    end;
                end
              else
              if BAnd(my_bits_high,$00000010) <> 0 then { if plat[E5] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$0000000C);
                  opp_bits_high := BXOr(opp_bits_high,$0000000C);
                end;
            end
          else
          if BAnd(my_bits_high,$00000008) <> 0 then { if plat[D5] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00000004);
              opp_bits_high := BXOr(opp_bits_high,$00000004);
            end;
        end;
      if BAnd(opp_bits_high,$00000400) <> 0 then { if plat[C6] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00080000) <> 0 then { if plat[D7] = adversaire then }
            begin
              if BAnd(my_bits_high,$10000000) <> 0 then { if plat[E8] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$00080400);
                  opp_bits_high := BXOr(opp_bits_high,$00080400);
                end;
            end
          else
          if BAnd(my_bits_high,$00080000) <> 0 then { if plat[D7] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00000400);
              opp_bits_high := BXOr(opp_bits_high,$00000400);
            end;
        end;
      if BAnd(opp_bits_high,$00000200) <> 0 then { if plat[B6] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00020000) <> 0 then { if plat[B7] = adversaire then }
            begin
              if BAnd(my_bits_high,$02000000) <> 0 then { if plat[B8] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$00020200);
                  opp_bits_high := BXOr(opp_bits_high,$00020200);
                end;
            end
          else
          if BAnd(my_bits_high,$00020000) <> 0 then { if plat[B7] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00000200);
              opp_bits_high := BXOr(opp_bits_high,$00000200);
            end;
        end;
    if (nbPrise <> 0)
      then
        begin
          diffPions := succ(diffPions+nbPrise);
          ModifPlatBitboard_b5 := BXOr(vecteurParite,$00000004);
          my_bits_high := BOr(my_bits_high,$00000002);  { place the disc in B5 }
          g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
          g_my_bits_high  := opp_bits_high;
          g_opp_bits_low  := my_bits_low;
          g_opp_bits_high := my_bits_high;
        end
      else
        ModifPlatBitboard_b5 := vecteurParite;
  end;
end;



function ModifPlatBitboard_c5(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32;
                           var resultat : bitboard; var diffPions : SInt32) : SInt32;
var nbPrise : SInt32;
begin
  with resultat do
    begin
      nbPrise := 0;
      if BAnd(opp_bits_low,$02000000) <> 0 then { if plat[B4] = adversaire then }
        begin
          if BAnd(my_bits_low,$00010000) <> 0 then { if plat[A3] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$02000000);
              opp_bits_low := BXOr(opp_bits_low,$02000000);
            end;
        end;
      if BAnd(opp_bits_low,$04000000) <> 0 then { if plat[C4] = adversaire then }
        begin
          if BAnd(opp_bits_low,$00040000) <> 0 then { if plat[C3] = adversaire then }
            begin
              if BAnd(opp_bits_low,$00000400) <> 0 then { if plat[C2] = adversaire then }
                begin
                  if BAnd(my_bits_low,$00000004) <> 0 then { if plat[C1] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$04040400);
                      opp_bits_low := BXOr(opp_bits_low,$04040400);
                    end;
                end
              else
              if BAnd(my_bits_low,$00000400) <> 0 then { if plat[C2] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$04040000);
                  opp_bits_low := BXOr(opp_bits_low,$04040000);
                end;
            end
          else
          if BAnd(my_bits_low,$00040000) <> 0 then { if plat[C3] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$04000000);
              opp_bits_low := BXOr(opp_bits_low,$04000000);
            end;
        end;
      if BAnd(opp_bits_low,$08000000) <> 0 then { if plat[D4] = adversaire then }
        begin
          if BAnd(opp_bits_low,$00100000) <> 0 then { if plat[E3] = adversaire then }
            begin
              if BAnd(opp_bits_low,$00002000) <> 0 then { if plat[F2] = adversaire then }
                begin
                  if BAnd(my_bits_low,$00000040) <> 0 then { if plat[G1] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$08102000);
                      opp_bits_low := BXOr(opp_bits_low,$08102000);
                    end;
                end
              else
              if BAnd(my_bits_low,$00002000) <> 0 then { if plat[F2] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$08100000);
                  opp_bits_low := BXOr(opp_bits_low,$08100000);
                end;
            end
          else
          if BAnd(my_bits_low,$00100000) <> 0 then { if plat[E3] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$08000000);
              opp_bits_low := BXOr(opp_bits_low,$08000000);
            end;
        end;
      if BAnd(opp_bits_high,$00000008) <> 0 then { if plat[D5] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00000010) <> 0 then { if plat[E5] = adversaire then }
            begin
              if BAnd(opp_bits_high,$00000020) <> 0 then { if plat[F5] = adversaire then }
                begin
                  if BAnd(opp_bits_high,$00000040) <> 0 then { if plat[G5] = adversaire then }
                    begin
                      if BAnd(my_bits_high,$00000080) <> 0 then { if plat[H5] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_high := BOr(my_bits_high,$00000078);
                          opp_bits_high := BXOr(opp_bits_high,$00000078);
                        end;
                    end
                  else
                  if BAnd(my_bits_high,$00000040) <> 0 then { if plat[G5] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_high := BOr(my_bits_high,$00000038);
                      opp_bits_high := BXOr(opp_bits_high,$00000038);
                    end;
                end
              else
              if BAnd(my_bits_high,$00000020) <> 0 then { if plat[F5] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$00000018);
                  opp_bits_high := BXOr(opp_bits_high,$00000018);
                end;
            end
          else
          if BAnd(my_bits_high,$00000010) <> 0 then { if plat[E5] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00000008);
              opp_bits_high := BXOr(opp_bits_high,$00000008);
            end;
        end;
      if BAnd(opp_bits_high,$00000800) <> 0 then { if plat[D6] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00100000) <> 0 then { if plat[E7] = adversaire then }
            begin
              if BAnd(my_bits_high,$20000000) <> 0 then { if plat[F8] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$00100800);
                  opp_bits_high := BXOr(opp_bits_high,$00100800);
                end;
            end
          else
          if BAnd(my_bits_high,$00100000) <> 0 then { if plat[E7] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00000800);
              opp_bits_high := BXOr(opp_bits_high,$00000800);
            end;
        end;
      if BAnd(opp_bits_high,$00000400) <> 0 then { if plat[C6] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00040000) <> 0 then { if plat[C7] = adversaire then }
            begin
              if BAnd(my_bits_high,$04000000) <> 0 then { if plat[C8] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$00040400);
                  opp_bits_high := BXOr(opp_bits_high,$00040400);
                end;
            end
          else
          if BAnd(my_bits_high,$00040000) <> 0 then { if plat[C7] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00000400);
              opp_bits_high := BXOr(opp_bits_high,$00000400);
            end;
        end;
      if BAnd(opp_bits_high,$00000200) <> 0 then { if plat[B6] = adversaire then }
        begin
          if BAnd(my_bits_high,$00010000) <> 0 then { if plat[A7] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00000200);
              opp_bits_high := BXOr(opp_bits_high,$00000200);
            end;
        end;
      if BAnd(opp_bits_high,$00000002) <> 0 then { if plat[B5] = adversaire then }
        begin
          if BAnd(my_bits_high,$00000001) <> 0 then { if plat[A5] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00000002);
              opp_bits_high := BXOr(opp_bits_high,$00000002);
            end;
        end;
    if (nbPrise <> 0)
      then
        begin
          diffPions := succ(diffPions+nbPrise);
          ModifPlatBitboard_c5 := BXOr(vecteurParite,$00000004);
          my_bits_high := BOr(my_bits_high,$00000004);  { place the disc in C5 }
          g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
          g_my_bits_high  := opp_bits_high;
          g_opp_bits_low  := my_bits_low;
          g_opp_bits_high := my_bits_high;
        end
      else
        ModifPlatBitboard_c5 := vecteurParite;
  end;
end;



function ModifPlatBitboard_d5(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32;
                           var resultat : bitboard; var diffPions : SInt32) : SInt32;
var nbPrise : SInt32;
begin
  with resultat do
    begin
      nbPrise := 0;
      if BAnd(opp_bits_low,$04000000) <> 0 then { if plat[C4] = adversaire then }
        begin
          if BAnd(opp_bits_low,$00020000) <> 0 then { if plat[B3] = adversaire then }
            begin
              if BAnd(my_bits_low,$00000100) <> 0 then { if plat[A2] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$04020000);
                  opp_bits_low := BXOr(opp_bits_low,$04020000);
                end;
            end
          else
          if BAnd(my_bits_low,$00020000) <> 0 then { if plat[B3] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$04000000);
              opp_bits_low := BXOr(opp_bits_low,$04000000);
            end;
        end;
      if BAnd(opp_bits_low,$08000000) <> 0 then { if plat[D4] = adversaire then }
        begin
          if BAnd(opp_bits_low,$00080000) <> 0 then { if plat[D3] = adversaire then }
            begin
              if BAnd(opp_bits_low,$00000800) <> 0 then { if plat[D2] = adversaire then }
                begin
                  if BAnd(my_bits_low,$00000008) <> 0 then { if plat[D1] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$08080800);
                      opp_bits_low := BXOr(opp_bits_low,$08080800);
                    end;
                end
              else
              if BAnd(my_bits_low,$00000800) <> 0 then { if plat[D2] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$08080000);
                  opp_bits_low := BXOr(opp_bits_low,$08080000);
                end;
            end
          else
          if BAnd(my_bits_low,$00080000) <> 0 then { if plat[D3] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$08000000);
              opp_bits_low := BXOr(opp_bits_low,$08000000);
            end;
        end;
      if BAnd(opp_bits_low,$10000000) <> 0 then { if plat[E4] = adversaire then }
        begin
          if BAnd(opp_bits_low,$00200000) <> 0 then { if plat[F3] = adversaire then }
            begin
              if BAnd(opp_bits_low,$00004000) <> 0 then { if plat[G2] = adversaire then }
                begin
                  if BAnd(my_bits_low,$00000080) <> 0 then { if plat[H1] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$10204000);
                      opp_bits_low := BXOr(opp_bits_low,$10204000);
                    end;
                end
              else
              if BAnd(my_bits_low,$00004000) <> 0 then { if plat[G2] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$10200000);
                  opp_bits_low := BXOr(opp_bits_low,$10200000);
                end;
            end
          else
          if BAnd(my_bits_low,$00200000) <> 0 then { if plat[F3] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$10000000);
              opp_bits_low := BXOr(opp_bits_low,$10000000);
            end;
        end;
      if BAnd(opp_bits_high,$00000010) <> 0 then { if plat[E5] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00000020) <> 0 then { if plat[F5] = adversaire then }
            begin
              if BAnd(opp_bits_high,$00000040) <> 0 then { if plat[G5] = adversaire then }
                begin
                  if BAnd(my_bits_high,$00000080) <> 0 then { if plat[H5] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_high := BOr(my_bits_high,$00000070);
                      opp_bits_high := BXOr(opp_bits_high,$00000070);
                    end;
                end
              else
              if BAnd(my_bits_high,$00000040) <> 0 then { if plat[G5] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$00000030);
                  opp_bits_high := BXOr(opp_bits_high,$00000030);
                end;
            end
          else
          if BAnd(my_bits_high,$00000020) <> 0 then { if plat[F5] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00000010);
              opp_bits_high := BXOr(opp_bits_high,$00000010);
            end;
        end;
      if BAnd(opp_bits_high,$00001000) <> 0 then { if plat[E6] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00200000) <> 0 then { if plat[F7] = adversaire then }
            begin
              if BAnd(my_bits_high,$40000000) <> 0 then { if plat[G8] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$00201000);
                  opp_bits_high := BXOr(opp_bits_high,$00201000);
                end;
            end
          else
          if BAnd(my_bits_high,$00200000) <> 0 then { if plat[F7] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00001000);
              opp_bits_high := BXOr(opp_bits_high,$00001000);
            end;
        end;
      if BAnd(opp_bits_high,$00000800) <> 0 then { if plat[D6] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00080000) <> 0 then { if plat[D7] = adversaire then }
            begin
              if BAnd(my_bits_high,$08000000) <> 0 then { if plat[D8] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$00080800);
                  opp_bits_high := BXOr(opp_bits_high,$00080800);
                end;
            end
          else
          if BAnd(my_bits_high,$00080000) <> 0 then { if plat[D7] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00000800);
              opp_bits_high := BXOr(opp_bits_high,$00000800);
            end;
        end;
      if BAnd(opp_bits_high,$00000400) <> 0 then { if plat[C6] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00020000) <> 0 then { if plat[B7] = adversaire then }
            begin
              if BAnd(my_bits_high,$01000000) <> 0 then { if plat[A8] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$00020400);
                  opp_bits_high := BXOr(opp_bits_high,$00020400);
                end;
            end
          else
          if BAnd(my_bits_high,$00020000) <> 0 then { if plat[B7] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00000400);
              opp_bits_high := BXOr(opp_bits_high,$00000400);
            end;
        end;
      if BAnd(opp_bits_high,$00000004) <> 0 then { if plat[C5] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00000002) <> 0 then { if plat[B5] = adversaire then }
            begin
              if BAnd(my_bits_high,$00000001) <> 0 then { if plat[A5] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$00000006);
                  opp_bits_high := BXOr(opp_bits_high,$00000006);
                end;
            end
          else
          if BAnd(my_bits_high,$00000002) <> 0 then { if plat[B5] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00000004);
              opp_bits_high := BXOr(opp_bits_high,$00000004);
            end;
        end;
    if (nbPrise <> 0)
      then
        begin
          diffPions := succ(diffPions+nbPrise);
          ModifPlatBitboard_d5 := BXOr(vecteurParite,$00000004);
          my_bits_high := BOr(my_bits_high,$00000008);  { place the disc in D5 }
          g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
          g_my_bits_high  := opp_bits_high;
          g_opp_bits_low  := my_bits_low;
          g_opp_bits_high := my_bits_high;
        end
      else
        ModifPlatBitboard_d5 := vecteurParite;
  end;
end;



function ModifPlatBitboard_e5(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32;
                           var resultat : bitboard; var diffPions : SInt32) : SInt32;
var nbPrise : SInt32;
begin
  with resultat do
    begin
      nbPrise := 0;
      if BAnd(opp_bits_low,$08000000) <> 0 then { if plat[D4] = adversaire then }
        begin
          if BAnd(opp_bits_low,$00040000) <> 0 then { if plat[C3] = adversaire then }
            begin
              if BAnd(opp_bits_low,$00000200) <> 0 then { if plat[B2] = adversaire then }
                begin
                  if BAnd(my_bits_low,$00000001) <> 0 then { if plat[A1] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$08040200);
                      opp_bits_low := BXOr(opp_bits_low,$08040200);
                    end;
                end
              else
              if BAnd(my_bits_low,$00000200) <> 0 then { if plat[B2] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$08040000);
                  opp_bits_low := BXOr(opp_bits_low,$08040000);
                end;
            end
          else
          if BAnd(my_bits_low,$00040000) <> 0 then { if plat[C3] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$08000000);
              opp_bits_low := BXOr(opp_bits_low,$08000000);
            end;
        end;
      if BAnd(opp_bits_low,$10000000) <> 0 then { if plat[E4] = adversaire then }
        begin
          if BAnd(opp_bits_low,$00100000) <> 0 then { if plat[E3] = adversaire then }
            begin
              if BAnd(opp_bits_low,$00001000) <> 0 then { if plat[E2] = adversaire then }
                begin
                  if BAnd(my_bits_low,$00000010) <> 0 then { if plat[E1] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$10101000);
                      opp_bits_low := BXOr(opp_bits_low,$10101000);
                    end;
                end
              else
              if BAnd(my_bits_low,$00001000) <> 0 then { if plat[E2] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$10100000);
                  opp_bits_low := BXOr(opp_bits_low,$10100000);
                end;
            end
          else
          if BAnd(my_bits_low,$00100000) <> 0 then { if plat[E3] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$10000000);
              opp_bits_low := BXOr(opp_bits_low,$10000000);
            end;
        end;
      if BAnd(opp_bits_low,$20000000) <> 0 then { if plat[F4] = adversaire then }
        begin
          if BAnd(opp_bits_low,$00400000) <> 0 then { if plat[G3] = adversaire then }
            begin
              if BAnd(my_bits_low,$00008000) <> 0 then { if plat[H2] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$20400000);
                  opp_bits_low := BXOr(opp_bits_low,$20400000);
                end;
            end
          else
          if BAnd(my_bits_low,$00400000) <> 0 then { if plat[G3] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$20000000);
              opp_bits_low := BXOr(opp_bits_low,$20000000);
            end;
        end;
      if BAnd(opp_bits_high,$00000020) <> 0 then { if plat[F5] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00000040) <> 0 then { if plat[G5] = adversaire then }
            begin
              if BAnd(my_bits_high,$00000080) <> 0 then { if plat[H5] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$00000060);
                  opp_bits_high := BXOr(opp_bits_high,$00000060);
                end;
            end
          else
          if BAnd(my_bits_high,$00000040) <> 0 then { if plat[G5] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00000020);
              opp_bits_high := BXOr(opp_bits_high,$00000020);
            end;
        end;
      if BAnd(opp_bits_high,$00002000) <> 0 then { if plat[F6] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00400000) <> 0 then { if plat[G7] = adversaire then }
            begin
              if BAnd(my_bits_high,$80000000) <> 0 then { if plat[H8] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$00402000);
                  opp_bits_high := BXOr(opp_bits_high,$00402000);
                end;
            end
          else
          if BAnd(my_bits_high,$00400000) <> 0 then { if plat[G7] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00002000);
              opp_bits_high := BXOr(opp_bits_high,$00002000);
            end;
        end;
      if BAnd(opp_bits_high,$00001000) <> 0 then { if plat[E6] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00100000) <> 0 then { if plat[E7] = adversaire then }
            begin
              if BAnd(my_bits_high,$10000000) <> 0 then { if plat[E8] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$00101000);
                  opp_bits_high := BXOr(opp_bits_high,$00101000);
                end;
            end
          else
          if BAnd(my_bits_high,$00100000) <> 0 then { if plat[E7] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00001000);
              opp_bits_high := BXOr(opp_bits_high,$00001000);
            end;
        end;
      if BAnd(opp_bits_high,$00000800) <> 0 then { if plat[D6] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00040000) <> 0 then { if plat[C7] = adversaire then }
            begin
              if BAnd(my_bits_high,$02000000) <> 0 then { if plat[B8] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$00040800);
                  opp_bits_high := BXOr(opp_bits_high,$00040800);
                end;
            end
          else
          if BAnd(my_bits_high,$00040000) <> 0 then { if plat[C7] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00000800);
              opp_bits_high := BXOr(opp_bits_high,$00000800);
            end;
        end;
      if BAnd(opp_bits_high,$00000008) <> 0 then { if plat[D5] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00000004) <> 0 then { if plat[C5] = adversaire then }
            begin
              if BAnd(opp_bits_high,$00000002) <> 0 then { if plat[B5] = adversaire then }
                begin
                  if BAnd(my_bits_high,$00000001) <> 0 then { if plat[A5] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_high := BOr(my_bits_high,$0000000E);
                      opp_bits_high := BXOr(opp_bits_high,$0000000E);
                    end;
                end
              else
              if BAnd(my_bits_high,$00000002) <> 0 then { if plat[B5] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$0000000C);
                  opp_bits_high := BXOr(opp_bits_high,$0000000C);
                end;
            end
          else
          if BAnd(my_bits_high,$00000004) <> 0 then { if plat[C5] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00000008);
              opp_bits_high := BXOr(opp_bits_high,$00000008);
            end;
        end;
    if (nbPrise <> 0)
      then
        begin
          diffPions := succ(diffPions+nbPrise);
          ModifPlatBitboard_e5 := BXOr(vecteurParite,$00000008);
          my_bits_high := BOr(my_bits_high,$00000010);  { place the disc in E5 }
          g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
          g_my_bits_high  := opp_bits_high;
          g_opp_bits_low  := my_bits_low;
          g_opp_bits_high := my_bits_high;
        end
      else
        ModifPlatBitboard_e5 := vecteurParite;
  end;
end;



function ModifPlatBitboard_f5(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32;
                           var resultat : bitboard; var diffPions : SInt32) : SInt32;
var nbPrise : SInt32;
begin
  with resultat do
    begin
      nbPrise := 0;
      if BAnd(opp_bits_low,$10000000) <> 0 then { if plat[E4] = adversaire then }
        begin
          if BAnd(opp_bits_low,$00080000) <> 0 then { if plat[D3] = adversaire then }
            begin
              if BAnd(opp_bits_low,$00000400) <> 0 then { if plat[C2] = adversaire then }
                begin
                  if BAnd(my_bits_low,$00000002) <> 0 then { if plat[B1] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$10080400);
                      opp_bits_low := BXOr(opp_bits_low,$10080400);
                    end;
                end
              else
              if BAnd(my_bits_low,$00000400) <> 0 then { if plat[C2] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$10080000);
                  opp_bits_low := BXOr(opp_bits_low,$10080000);
                end;
            end
          else
          if BAnd(my_bits_low,$00080000) <> 0 then { if plat[D3] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$10000000);
              opp_bits_low := BXOr(opp_bits_low,$10000000);
            end;
        end;
      if BAnd(opp_bits_low,$20000000) <> 0 then { if plat[F4] = adversaire then }
        begin
          if BAnd(opp_bits_low,$00200000) <> 0 then { if plat[F3] = adversaire then }
            begin
              if BAnd(opp_bits_low,$00002000) <> 0 then { if plat[F2] = adversaire then }
                begin
                  if BAnd(my_bits_low,$00000020) <> 0 then { if plat[F1] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$20202000);
                      opp_bits_low := BXOr(opp_bits_low,$20202000);
                    end;
                end
              else
              if BAnd(my_bits_low,$00002000) <> 0 then { if plat[F2] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$20200000);
                  opp_bits_low := BXOr(opp_bits_low,$20200000);
                end;
            end
          else
          if BAnd(my_bits_low,$00200000) <> 0 then { if plat[F3] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$20000000);
              opp_bits_low := BXOr(opp_bits_low,$20000000);
            end;
        end;
      if BAnd(opp_bits_low,$40000000) <> 0 then { if plat[G4] = adversaire then }
        begin
          if BAnd(my_bits_low,$00800000) <> 0 then { if plat[H3] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$40000000);
              opp_bits_low := BXOr(opp_bits_low,$40000000);
            end;
        end;
      if BAnd(opp_bits_high,$00000040) <> 0 then { if plat[G5] = adversaire then }
        begin
          if BAnd(my_bits_high,$00000080) <> 0 then { if plat[H5] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00000040);
              opp_bits_high := BXOr(opp_bits_high,$00000040);
            end;
        end;
      if BAnd(opp_bits_high,$00004000) <> 0 then { if plat[G6] = adversaire then }
        begin
          if BAnd(my_bits_high,$00800000) <> 0 then { if plat[H7] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00004000);
              opp_bits_high := BXOr(opp_bits_high,$00004000);
            end;
        end;
      if BAnd(opp_bits_high,$00002000) <> 0 then { if plat[F6] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00200000) <> 0 then { if plat[F7] = adversaire then }
            begin
              if BAnd(my_bits_high,$20000000) <> 0 then { if plat[F8] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$00202000);
                  opp_bits_high := BXOr(opp_bits_high,$00202000);
                end;
            end
          else
          if BAnd(my_bits_high,$00200000) <> 0 then { if plat[F7] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00002000);
              opp_bits_high := BXOr(opp_bits_high,$00002000);
            end;
        end;
      if BAnd(opp_bits_high,$00001000) <> 0 then { if plat[E6] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00080000) <> 0 then { if plat[D7] = adversaire then }
            begin
              if BAnd(my_bits_high,$04000000) <> 0 then { if plat[C8] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$00081000);
                  opp_bits_high := BXOr(opp_bits_high,$00081000);
                end;
            end
          else
          if BAnd(my_bits_high,$00080000) <> 0 then { if plat[D7] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00001000);
              opp_bits_high := BXOr(opp_bits_high,$00001000);
            end;
        end;
      if BAnd(opp_bits_high,$00000010) <> 0 then { if plat[E5] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00000008) <> 0 then { if plat[D5] = adversaire then }
            begin
              if BAnd(opp_bits_high,$00000004) <> 0 then { if plat[C5] = adversaire then }
                begin
                  if BAnd(opp_bits_high,$00000002) <> 0 then { if plat[B5] = adversaire then }
                    begin
                      if BAnd(my_bits_high,$00000001) <> 0 then { if plat[A5] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_high := BOr(my_bits_high,$0000001E);
                          opp_bits_high := BXOr(opp_bits_high,$0000001E);
                        end;
                    end
                  else
                  if BAnd(my_bits_high,$00000002) <> 0 then { if plat[B5] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_high := BOr(my_bits_high,$0000001C);
                      opp_bits_high := BXOr(opp_bits_high,$0000001C);
                    end;
                end
              else
              if BAnd(my_bits_high,$00000004) <> 0 then { if plat[C5] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$00000018);
                  opp_bits_high := BXOr(opp_bits_high,$00000018);
                end;
            end
          else
          if BAnd(my_bits_high,$00000008) <> 0 then { if plat[D5] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00000010);
              opp_bits_high := BXOr(opp_bits_high,$00000010);
            end;
        end;
    if (nbPrise <> 0)
      then
        begin
          diffPions := succ(diffPions+nbPrise);
          ModifPlatBitboard_f5 := BXOr(vecteurParite,$00000008);
          my_bits_high := BOr(my_bits_high,$00000020);  { place the disc in F5 }
          g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
          g_my_bits_high  := opp_bits_high;
          g_opp_bits_low  := my_bits_low;
          g_opp_bits_high := my_bits_high;
        end
      else
        ModifPlatBitboard_f5 := vecteurParite;
  end;
end;



function ModifPlatBitboard_g5(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32;
                           var resultat : bitboard; var diffPions : SInt32) : SInt32;
var nbPrise : SInt32;
begin
  with resultat do
    begin
      nbPrise := 0;
      if BAnd(opp_bits_high,$00004000) <> 0 then { if plat[G6] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00400000) <> 0 then { if plat[G7] = adversaire then }
            begin
              if BAnd(my_bits_high,$40000000) <> 0 then { if plat[G8] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$00404000);
                  opp_bits_high := BXOr(opp_bits_high,$00404000);
                end;
            end
          else
          if BAnd(my_bits_high,$00400000) <> 0 then { if plat[G7] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00004000);
              opp_bits_high := BXOr(opp_bits_high,$00004000);
            end;
        end;
      if BAnd(opp_bits_high,$00002000) <> 0 then { if plat[F6] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00100000) <> 0 then { if plat[E7] = adversaire then }
            begin
              if BAnd(my_bits_high,$08000000) <> 0 then { if plat[D8] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$00102000);
                  opp_bits_high := BXOr(opp_bits_high,$00102000);
                end;
            end
          else
          if BAnd(my_bits_high,$00100000) <> 0 then { if plat[E7] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00002000);
              opp_bits_high := BXOr(opp_bits_high,$00002000);
            end;
        end;
      if BAnd(opp_bits_high,$00000020) <> 0 then { if plat[F5] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00000010) <> 0 then { if plat[E5] = adversaire then }
            begin
              if BAnd(opp_bits_high,$00000008) <> 0 then { if plat[D5] = adversaire then }
                begin
                  if BAnd(opp_bits_high,$00000004) <> 0 then { if plat[C5] = adversaire then }
                    begin
                      if BAnd(opp_bits_high,$00000002) <> 0 then { if plat[B5] = adversaire then }
                        begin
                          if BAnd(my_bits_high,$00000001) <> 0 then { if plat[A5] = couleur then }
                            begin
                              nbPrise := nbPrise + 10;
                              my_bits_high := BOr(my_bits_high,$0000003E);
                              opp_bits_high := BXOr(opp_bits_high,$0000003E);
                            end;
                        end
                      else
                      if BAnd(my_bits_high,$00000002) <> 0 then { if plat[B5] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_high := BOr(my_bits_high,$0000003C);
                          opp_bits_high := BXOr(opp_bits_high,$0000003C);
                        end;
                    end
                  else
                  if BAnd(my_bits_high,$00000004) <> 0 then { if plat[C5] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_high := BOr(my_bits_high,$00000038);
                      opp_bits_high := BXOr(opp_bits_high,$00000038);
                    end;
                end
              else
              if BAnd(my_bits_high,$00000008) <> 0 then { if plat[D5] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$00000030);
                  opp_bits_high := BXOr(opp_bits_high,$00000030);
                end;
            end
          else
          if BAnd(my_bits_high,$00000010) <> 0 then { if plat[E5] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00000020);
              opp_bits_high := BXOr(opp_bits_high,$00000020);
            end;
        end;
      if BAnd(opp_bits_low,$20000000) <> 0 then { if plat[F4] = adversaire then }
        begin
          if BAnd(opp_bits_low,$00100000) <> 0 then { if plat[E3] = adversaire then }
            begin
              if BAnd(opp_bits_low,$00000800) <> 0 then { if plat[D2] = adversaire then }
                begin
                  if BAnd(my_bits_low,$00000004) <> 0 then { if plat[C1] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$20100800);
                      opp_bits_low := BXOr(opp_bits_low,$20100800);
                    end;
                end
              else
              if BAnd(my_bits_low,$00000800) <> 0 then { if plat[D2] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$20100000);
                  opp_bits_low := BXOr(opp_bits_low,$20100000);
                end;
            end
          else
          if BAnd(my_bits_low,$00100000) <> 0 then { if plat[E3] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$20000000);
              opp_bits_low := BXOr(opp_bits_low,$20000000);
            end;
        end;
      if BAnd(opp_bits_low,$40000000) <> 0 then { if plat[G4] = adversaire then }
        begin
          if BAnd(opp_bits_low,$00400000) <> 0 then { if plat[G3] = adversaire then }
            begin
              if BAnd(opp_bits_low,$00004000) <> 0 then { if plat[G2] = adversaire then }
                begin
                  if BAnd(my_bits_low,$00000040) <> 0 then { if plat[G1] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$40404000);
                      opp_bits_low := BXOr(opp_bits_low,$40404000);
                    end;
                end
              else
              if BAnd(my_bits_low,$00004000) <> 0 then { if plat[G2] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$40400000);
                  opp_bits_low := BXOr(opp_bits_low,$40400000);
                end;
            end
          else
          if BAnd(my_bits_low,$00400000) <> 0 then { if plat[G3] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$40000000);
              opp_bits_low := BXOr(opp_bits_low,$40000000);
            end;
        end;
    if (nbPrise <> 0)
      then
        begin
          diffPions := succ(diffPions+nbPrise);
          ModifPlatBitboard_g5 := BXOr(vecteurParite,$00000008);
          my_bits_high := BOr(my_bits_high,$00000040);  { place the disc in G5 }
          g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
          g_my_bits_high  := opp_bits_high;
          g_opp_bits_low  := my_bits_low;
          g_opp_bits_high := my_bits_high;
        end
      else
        ModifPlatBitboard_g5 := vecteurParite;
  end;
end;



function ModifPlatBitboard_h5(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32;
                           var resultat : bitboard; var diffPions : SInt32) : SInt32;
var nbPrise : SInt32;
begin
  with resultat do
    begin
      nbPrise := 0;
      if BAnd(opp_bits_high,$00008000) <> 0 then { if plat[H6] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00800000) <> 0 then { if plat[H7] = adversaire then }
            begin
              if BAnd(my_bits_high,$80000000) <> 0 then { if plat[H8] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$00808000);
                  opp_bits_high := BXOr(opp_bits_high,$00808000);
                end;
            end
          else
          if BAnd(my_bits_high,$00800000) <> 0 then { if plat[H7] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00008000);
              opp_bits_high := BXOr(opp_bits_high,$00008000);
            end;
        end;
      if BAnd(opp_bits_high,$00004000) <> 0 then { if plat[G6] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00200000) <> 0 then { if plat[F7] = adversaire then }
            begin
              if BAnd(my_bits_high,$10000000) <> 0 then { if plat[E8] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$00204000);
                  opp_bits_high := BXOr(opp_bits_high,$00204000);
                end;
            end
          else
          if BAnd(my_bits_high,$00200000) <> 0 then { if plat[F7] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00004000);
              opp_bits_high := BXOr(opp_bits_high,$00004000);
            end;
        end;
      if BAnd(opp_bits_high,$00000040) <> 0 then { if plat[G5] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00000020) <> 0 then { if plat[F5] = adversaire then }
            begin
              if BAnd(opp_bits_high,$00000010) <> 0 then { if plat[E5] = adversaire then }
                begin
                  if BAnd(opp_bits_high,$00000008) <> 0 then { if plat[D5] = adversaire then }
                    begin
                      if BAnd(opp_bits_high,$00000004) <> 0 then { if plat[C5] = adversaire then }
                        begin
                          if BAnd(opp_bits_high,$00000002) <> 0 then { if plat[B5] = adversaire then }
                            begin
                              if BAnd(my_bits_high,$00000001) <> 0 then { if plat[A5] = couleur then }
                                begin
                                  nbPrise := nbPrise + 12;
                                  my_bits_high := BOr(my_bits_high,$0000007E);
                                  opp_bits_high := BXOr(opp_bits_high,$0000007E);
                                end;
                            end
                          else
                          if BAnd(my_bits_high,$00000002) <> 0 then { if plat[B5] = couleur then }
                            begin
                              nbPrise := nbPrise + 10;
                              my_bits_high := BOr(my_bits_high,$0000007C);
                              opp_bits_high := BXOr(opp_bits_high,$0000007C);
                            end;
                        end
                      else
                      if BAnd(my_bits_high,$00000004) <> 0 then { if plat[C5] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_high := BOr(my_bits_high,$00000078);
                          opp_bits_high := BXOr(opp_bits_high,$00000078);
                        end;
                    end
                  else
                  if BAnd(my_bits_high,$00000008) <> 0 then { if plat[D5] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_high := BOr(my_bits_high,$00000070);
                      opp_bits_high := BXOr(opp_bits_high,$00000070);
                    end;
                end
              else
              if BAnd(my_bits_high,$00000010) <> 0 then { if plat[E5] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$00000060);
                  opp_bits_high := BXOr(opp_bits_high,$00000060);
                end;
            end
          else
          if BAnd(my_bits_high,$00000020) <> 0 then { if plat[F5] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00000040);
              opp_bits_high := BXOr(opp_bits_high,$00000040);
            end;
        end;
      if BAnd(opp_bits_low,$40000000) <> 0 then { if plat[G4] = adversaire then }
        begin
          if BAnd(opp_bits_low,$00200000) <> 0 then { if plat[F3] = adversaire then }
            begin
              if BAnd(opp_bits_low,$00001000) <> 0 then { if plat[E2] = adversaire then }
                begin
                  if BAnd(my_bits_low,$00000008) <> 0 then { if plat[D1] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$40201000);
                      opp_bits_low := BXOr(opp_bits_low,$40201000);
                    end;
                end
              else
              if BAnd(my_bits_low,$00001000) <> 0 then { if plat[E2] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$40200000);
                  opp_bits_low := BXOr(opp_bits_low,$40200000);
                end;
            end
          else
          if BAnd(my_bits_low,$00200000) <> 0 then { if plat[F3] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$40000000);
              opp_bits_low := BXOr(opp_bits_low,$40000000);
            end;
        end;
      if BAnd(opp_bits_low,$80000000) <> 0 then { if plat[H4] = adversaire then }
        begin
          if BAnd(opp_bits_low,$00800000) <> 0 then { if plat[H3] = adversaire then }
            begin
              if BAnd(opp_bits_low,$00008000) <> 0 then { if plat[H2] = adversaire then }
                begin
                  if BAnd(my_bits_low,$00000080) <> 0 then { if plat[H1] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$80808000);
                      opp_bits_low := BXOr(opp_bits_low,$80808000);
                    end;
                end
              else
              if BAnd(my_bits_low,$00008000) <> 0 then { if plat[H2] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$80800000);
                  opp_bits_low := BXOr(opp_bits_low,$80800000);
                end;
            end
          else
          if BAnd(my_bits_low,$00800000) <> 0 then { if plat[H3] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_low := BOr(my_bits_low,$80000000);
              opp_bits_low := BXOr(opp_bits_low,$80000000);
            end;
        end;
    if (nbPrise <> 0)
      then
        begin
          diffPions := succ(diffPions+nbPrise);
          ModifPlatBitboard_h5 := BXOr(vecteurParite,$00000008);
          my_bits_high := BOr(my_bits_high,$00000080);  { place the disc in H5 }
          g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
          g_my_bits_high  := opp_bits_high;
          g_opp_bits_low  := my_bits_low;
          g_opp_bits_high := my_bits_high;
        end
      else
        ModifPlatBitboard_h5 := vecteurParite;
  end;
end;



function ModifPlatBitboard_a6(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32;
                           var resultat : bitboard; var diffPions : SInt32) : SInt32;
var nbPrise : SInt32;
begin
  with resultat do
    begin
      nbPrise := 0;
      if BAnd(opp_bits_high,$00000001) <> 0 then { if plat[A5] = adversaire then }
        begin
          if BAnd(opp_bits_low,$01000000) <> 0 then { if plat[A4] = adversaire then }
            begin
              if BAnd(opp_bits_low,$00010000) <> 0 then { if plat[A3] = adversaire then }
                begin
                  if BAnd(opp_bits_low,$00000100) <> 0 then { if plat[A2] = adversaire then }
                    begin
                      if BAnd(my_bits_low,$00000001) <> 0 then { if plat[A1] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$01010100);
                          opp_bits_low := BXOr(opp_bits_low,$01010100);
                          my_bits_high := BOr(my_bits_high,$00000001);
                          opp_bits_high := BXOr(opp_bits_high,$00000001);
                        end;
                    end
                  else
                  if BAnd(my_bits_low,$00000100) <> 0 then { if plat[A2] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$01010000);
                      opp_bits_low := BXOr(opp_bits_low,$01010000);
                      my_bits_high := BOr(my_bits_high,$00000001);
                      opp_bits_high := BXOr(opp_bits_high,$00000001);
                    end;
                end
              else
              if BAnd(my_bits_low,$00010000) <> 0 then { if plat[A3] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$01000000);
                  opp_bits_low := BXOr(opp_bits_low,$01000000);
                  my_bits_high := BOr(my_bits_high,$00000001);
                  opp_bits_high := BXOr(opp_bits_high,$00000001);
                end;
            end
          else
          if BAnd(my_bits_low,$01000000) <> 0 then { if plat[A4] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00000001);
              opp_bits_high := BXOr(opp_bits_high,$00000001);
            end;
        end;
      if BAnd(opp_bits_high,$00000002) <> 0 then { if plat[B5] = adversaire then }
        begin
          if BAnd(opp_bits_low,$04000000) <> 0 then { if plat[C4] = adversaire then }
            begin
              if BAnd(opp_bits_low,$00080000) <> 0 then { if plat[D3] = adversaire then }
                begin
                  if BAnd(opp_bits_low,$00001000) <> 0 then { if plat[E2] = adversaire then }
                    begin
                      if BAnd(my_bits_low,$00000020) <> 0 then { if plat[F1] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$04081000);
                          opp_bits_low := BXOr(opp_bits_low,$04081000);
                          my_bits_high := BOr(my_bits_high,$00000002);
                          opp_bits_high := BXOr(opp_bits_high,$00000002);
                        end;
                    end
                  else
                  if BAnd(my_bits_low,$00001000) <> 0 then { if plat[E2] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$04080000);
                      opp_bits_low := BXOr(opp_bits_low,$04080000);
                      my_bits_high := BOr(my_bits_high,$00000002);
                      opp_bits_high := BXOr(opp_bits_high,$00000002);
                    end;
                end
              else
              if BAnd(my_bits_low,$00080000) <> 0 then { if plat[D3] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$04000000);
                  opp_bits_low := BXOr(opp_bits_low,$04000000);
                  my_bits_high := BOr(my_bits_high,$00000002);
                  opp_bits_high := BXOr(opp_bits_high,$00000002);
                end;
            end
          else
          if BAnd(my_bits_low,$04000000) <> 0 then { if plat[C4] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00000002);
              opp_bits_high := BXOr(opp_bits_high,$00000002);
            end;
        end;
      if BAnd(opp_bits_high,$00000200) <> 0 then { if plat[B6] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00000400) <> 0 then { if plat[C6] = adversaire then }
            begin
              if BAnd(opp_bits_high,$00000800) <> 0 then { if plat[D6] = adversaire then }
                begin
                  if BAnd(opp_bits_high,$00001000) <> 0 then { if plat[E6] = adversaire then }
                    begin
                      if BAnd(opp_bits_high,$00002000) <> 0 then { if plat[F6] = adversaire then }
                        begin
                          if BAnd(opp_bits_high,$00004000) <> 0 then { if plat[G6] = adversaire then }
                            begin
                              if BAnd(my_bits_high,$00008000) <> 0 then { if plat[H6] = couleur then }
                                begin
                                  nbPrise := nbPrise + 12;
                                  my_bits_high := BOr(my_bits_high,$00007E00);
                                  opp_bits_high := BXOr(opp_bits_high,$00007E00);
                                end;
                            end
                          else
                          if BAnd(my_bits_high,$00004000) <> 0 then { if plat[G6] = couleur then }
                            begin
                              nbPrise := nbPrise + 10;
                              my_bits_high := BOr(my_bits_high,$00003E00);
                              opp_bits_high := BXOr(opp_bits_high,$00003E00);
                            end;
                        end
                      else
                      if BAnd(my_bits_high,$00002000) <> 0 then { if plat[F6] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_high := BOr(my_bits_high,$00001E00);
                          opp_bits_high := BXOr(opp_bits_high,$00001E00);
                        end;
                    end
                  else
                  if BAnd(my_bits_high,$00001000) <> 0 then { if plat[E6] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_high := BOr(my_bits_high,$00000E00);
                      opp_bits_high := BXOr(opp_bits_high,$00000E00);
                    end;
                end
              else
              if BAnd(my_bits_high,$00000800) <> 0 then { if plat[D6] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$00000600);
                  opp_bits_high := BXOr(opp_bits_high,$00000600);
                end;
            end
          else
          if BAnd(my_bits_high,$00000400) <> 0 then { if plat[C6] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00000200);
              opp_bits_high := BXOr(opp_bits_high,$00000200);
            end;
        end;
      if BAnd(opp_bits_high,$00020000) <> 0 then { if plat[B7] = adversaire then }
        begin
          if BAnd(my_bits_high,$04000000) <> 0 then { if plat[C8] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00020000);
              opp_bits_high := BXOr(opp_bits_high,$00020000);
            end;
        end;
      if BAnd(opp_bits_high,$00010000) <> 0 then { if plat[A7] = adversaire then }
        begin
          if BAnd(my_bits_high,$01000000) <> 0 then { if plat[A8] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00010000);
              opp_bits_high := BXOr(opp_bits_high,$00010000);
            end;
        end;
    if (nbPrise <> 0)
      then
        begin
          diffPions := succ(diffPions+nbPrise);
          ModifPlatBitboard_a6 := BXOr(vecteurParite,$00000004);
          my_bits_high := BOr(my_bits_high,$00000100);  { place the disc in A6 }
          g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
          g_my_bits_high  := opp_bits_high;
          g_opp_bits_low  := my_bits_low;
          g_opp_bits_high := my_bits_high;
        end
      else
        ModifPlatBitboard_a6 := vecteurParite;
  end;
end;



function ModifPlatBitboard_b6(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32;
                           var resultat : bitboard; var diffPions : SInt32) : SInt32;
var nbPrise : SInt32;
begin
  with resultat do
    begin
      nbPrise := 0;
      if BAnd(opp_bits_high,$00000002) <> 0 then { if plat[B5] = adversaire then }
        begin
          if BAnd(opp_bits_low,$02000000) <> 0 then { if plat[B4] = adversaire then }
            begin
              if BAnd(opp_bits_low,$00020000) <> 0 then { if plat[B3] = adversaire then }
                begin
                  if BAnd(opp_bits_low,$00000200) <> 0 then { if plat[B2] = adversaire then }
                    begin
                      if BAnd(my_bits_low,$00000002) <> 0 then { if plat[B1] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$02020200);
                          opp_bits_low := BXOr(opp_bits_low,$02020200);
                          my_bits_high := BOr(my_bits_high,$00000002);
                          opp_bits_high := BXOr(opp_bits_high,$00000002);
                        end;
                    end
                  else
                  if BAnd(my_bits_low,$00000200) <> 0 then { if plat[B2] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$02020000);
                      opp_bits_low := BXOr(opp_bits_low,$02020000);
                      my_bits_high := BOr(my_bits_high,$00000002);
                      opp_bits_high := BXOr(opp_bits_high,$00000002);
                    end;
                end
              else
              if BAnd(my_bits_low,$00020000) <> 0 then { if plat[B3] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$02000000);
                  opp_bits_low := BXOr(opp_bits_low,$02000000);
                  my_bits_high := BOr(my_bits_high,$00000002);
                  opp_bits_high := BXOr(opp_bits_high,$00000002);
                end;
            end
          else
          if BAnd(my_bits_low,$02000000) <> 0 then { if plat[B4] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00000002);
              opp_bits_high := BXOr(opp_bits_high,$00000002);
            end;
        end;
      if BAnd(opp_bits_high,$00000004) <> 0 then { if plat[C5] = adversaire then }
        begin
          if BAnd(opp_bits_low,$08000000) <> 0 then { if plat[D4] = adversaire then }
            begin
              if BAnd(opp_bits_low,$00100000) <> 0 then { if plat[E3] = adversaire then }
                begin
                  if BAnd(opp_bits_low,$00002000) <> 0 then { if plat[F2] = adversaire then }
                    begin
                      if BAnd(my_bits_low,$00000040) <> 0 then { if plat[G1] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$08102000);
                          opp_bits_low := BXOr(opp_bits_low,$08102000);
                          my_bits_high := BOr(my_bits_high,$00000004);
                          opp_bits_high := BXOr(opp_bits_high,$00000004);
                        end;
                    end
                  else
                  if BAnd(my_bits_low,$00002000) <> 0 then { if plat[F2] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$08100000);
                      opp_bits_low := BXOr(opp_bits_low,$08100000);
                      my_bits_high := BOr(my_bits_high,$00000004);
                      opp_bits_high := BXOr(opp_bits_high,$00000004);
                    end;
                end
              else
              if BAnd(my_bits_low,$00100000) <> 0 then { if plat[E3] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$08000000);
                  opp_bits_low := BXOr(opp_bits_low,$08000000);
                  my_bits_high := BOr(my_bits_high,$00000004);
                  opp_bits_high := BXOr(opp_bits_high,$00000004);
                end;
            end
          else
          if BAnd(my_bits_low,$08000000) <> 0 then { if plat[D4] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00000004);
              opp_bits_high := BXOr(opp_bits_high,$00000004);
            end;
        end;
      if BAnd(opp_bits_high,$00000400) <> 0 then { if plat[C6] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00000800) <> 0 then { if plat[D6] = adversaire then }
            begin
              if BAnd(opp_bits_high,$00001000) <> 0 then { if plat[E6] = adversaire then }
                begin
                  if BAnd(opp_bits_high,$00002000) <> 0 then { if plat[F6] = adversaire then }
                    begin
                      if BAnd(opp_bits_high,$00004000) <> 0 then { if plat[G6] = adversaire then }
                        begin
                          if BAnd(my_bits_high,$00008000) <> 0 then { if plat[H6] = couleur then }
                            begin
                              nbPrise := nbPrise + 10;
                              my_bits_high := BOr(my_bits_high,$00007C00);
                              opp_bits_high := BXOr(opp_bits_high,$00007C00);
                            end;
                        end
                      else
                      if BAnd(my_bits_high,$00004000) <> 0 then { if plat[G6] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_high := BOr(my_bits_high,$00003C00);
                          opp_bits_high := BXOr(opp_bits_high,$00003C00);
                        end;
                    end
                  else
                  if BAnd(my_bits_high,$00002000) <> 0 then { if plat[F6] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_high := BOr(my_bits_high,$00001C00);
                      opp_bits_high := BXOr(opp_bits_high,$00001C00);
                    end;
                end
              else
              if BAnd(my_bits_high,$00001000) <> 0 then { if plat[E6] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$00000C00);
                  opp_bits_high := BXOr(opp_bits_high,$00000C00);
                end;
            end
          else
          if BAnd(my_bits_high,$00000800) <> 0 then { if plat[D6] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00000400);
              opp_bits_high := BXOr(opp_bits_high,$00000400);
            end;
        end;
      if BAnd(opp_bits_high,$00040000) <> 0 then { if plat[C7] = adversaire then }
        begin
          if BAnd(my_bits_high,$08000000) <> 0 then { if plat[D8] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00040000);
              opp_bits_high := BXOr(opp_bits_high,$00040000);
            end;
        end;
      if BAnd(opp_bits_high,$00020000) <> 0 then { if plat[B7] = adversaire then }
        begin
          if BAnd(my_bits_high,$02000000) <> 0 then { if plat[B8] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00020000);
              opp_bits_high := BXOr(opp_bits_high,$00020000);
            end;
        end;
    if (nbPrise <> 0)
      then
        begin
          diffPions := succ(diffPions+nbPrise);
          ModifPlatBitboard_b6 := BXOr(vecteurParite,$00000004);
          my_bits_high := BOr(my_bits_high,$00000200);  { place the disc in B6 }
          g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
          g_my_bits_high  := opp_bits_high;
          g_opp_bits_low  := my_bits_low;
          g_opp_bits_high := my_bits_high;
        end
      else
        ModifPlatBitboard_b6 := vecteurParite;
  end;
end;



function ModifPlatBitboard_c6(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32;
                           var resultat : bitboard; var diffPions : SInt32) : SInt32;
var nbPrise : SInt32;
begin
  with resultat do
    begin
      nbPrise := 0;
      if BAnd(opp_bits_high,$00000002) <> 0 then { if plat[B5] = adversaire then }
        begin
          if BAnd(my_bits_low,$01000000) <> 0 then { if plat[A4] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00000002);
              opp_bits_high := BXOr(opp_bits_high,$00000002);
            end;
        end;
      if BAnd(opp_bits_high,$00000004) <> 0 then { if plat[C5] = adversaire then }
        begin
          if BAnd(opp_bits_low,$04000000) <> 0 then { if plat[C4] = adversaire then }
            begin
              if BAnd(opp_bits_low,$00040000) <> 0 then { if plat[C3] = adversaire then }
                begin
                  if BAnd(opp_bits_low,$00000400) <> 0 then { if plat[C2] = adversaire then }
                    begin
                      if BAnd(my_bits_low,$00000004) <> 0 then { if plat[C1] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$04040400);
                          opp_bits_low := BXOr(opp_bits_low,$04040400);
                          my_bits_high := BOr(my_bits_high,$00000004);
                          opp_bits_high := BXOr(opp_bits_high,$00000004);
                        end;
                    end
                  else
                  if BAnd(my_bits_low,$00000400) <> 0 then { if plat[C2] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$04040000);
                      opp_bits_low := BXOr(opp_bits_low,$04040000);
                      my_bits_high := BOr(my_bits_high,$00000004);
                      opp_bits_high := BXOr(opp_bits_high,$00000004);
                    end;
                end
              else
              if BAnd(my_bits_low,$00040000) <> 0 then { if plat[C3] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$04000000);
                  opp_bits_low := BXOr(opp_bits_low,$04000000);
                  my_bits_high := BOr(my_bits_high,$00000004);
                  opp_bits_high := BXOr(opp_bits_high,$00000004);
                end;
            end
          else
          if BAnd(my_bits_low,$04000000) <> 0 then { if plat[C4] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00000004);
              opp_bits_high := BXOr(opp_bits_high,$00000004);
            end;
        end;
      if BAnd(opp_bits_high,$00000008) <> 0 then { if plat[D5] = adversaire then }
        begin
          if BAnd(opp_bits_low,$10000000) <> 0 then { if plat[E4] = adversaire then }
            begin
              if BAnd(opp_bits_low,$00200000) <> 0 then { if plat[F3] = adversaire then }
                begin
                  if BAnd(opp_bits_low,$00004000) <> 0 then { if plat[G2] = adversaire then }
                    begin
                      if BAnd(my_bits_low,$00000080) <> 0 then { if plat[H1] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$10204000);
                          opp_bits_low := BXOr(opp_bits_low,$10204000);
                          my_bits_high := BOr(my_bits_high,$00000008);
                          opp_bits_high := BXOr(opp_bits_high,$00000008);
                        end;
                    end
                  else
                  if BAnd(my_bits_low,$00004000) <> 0 then { if plat[G2] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$10200000);
                      opp_bits_low := BXOr(opp_bits_low,$10200000);
                      my_bits_high := BOr(my_bits_high,$00000008);
                      opp_bits_high := BXOr(opp_bits_high,$00000008);
                    end;
                end
              else
              if BAnd(my_bits_low,$00200000) <> 0 then { if plat[F3] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$10000000);
                  opp_bits_low := BXOr(opp_bits_low,$10000000);
                  my_bits_high := BOr(my_bits_high,$00000008);
                  opp_bits_high := BXOr(opp_bits_high,$00000008);
                end;
            end
          else
          if BAnd(my_bits_low,$10000000) <> 0 then { if plat[E4] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00000008);
              opp_bits_high := BXOr(opp_bits_high,$00000008);
            end;
        end;
      if BAnd(opp_bits_high,$00000800) <> 0 then { if plat[D6] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00001000) <> 0 then { if plat[E6] = adversaire then }
            begin
              if BAnd(opp_bits_high,$00002000) <> 0 then { if plat[F6] = adversaire then }
                begin
                  if BAnd(opp_bits_high,$00004000) <> 0 then { if plat[G6] = adversaire then }
                    begin
                      if BAnd(my_bits_high,$00008000) <> 0 then { if plat[H6] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_high := BOr(my_bits_high,$00007800);
                          opp_bits_high := BXOr(opp_bits_high,$00007800);
                        end;
                    end
                  else
                  if BAnd(my_bits_high,$00004000) <> 0 then { if plat[G6] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_high := BOr(my_bits_high,$00003800);
                      opp_bits_high := BXOr(opp_bits_high,$00003800);
                    end;
                end
              else
              if BAnd(my_bits_high,$00002000) <> 0 then { if plat[F6] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$00001800);
                  opp_bits_high := BXOr(opp_bits_high,$00001800);
                end;
            end
          else
          if BAnd(my_bits_high,$00001000) <> 0 then { if plat[E6] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00000800);
              opp_bits_high := BXOr(opp_bits_high,$00000800);
            end;
        end;
      if BAnd(opp_bits_high,$00080000) <> 0 then { if plat[D7] = adversaire then }
        begin
          if BAnd(my_bits_high,$10000000) <> 0 then { if plat[E8] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00080000);
              opp_bits_high := BXOr(opp_bits_high,$00080000);
            end;
        end;
      if BAnd(opp_bits_high,$00040000) <> 0 then { if plat[C7] = adversaire then }
        begin
          if BAnd(my_bits_high,$04000000) <> 0 then { if plat[C8] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00040000);
              opp_bits_high := BXOr(opp_bits_high,$00040000);
            end;
        end;
      if BAnd(opp_bits_high,$00020000) <> 0 then { if plat[B7] = adversaire then }
        begin
          if BAnd(my_bits_high,$01000000) <> 0 then { if plat[A8] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00020000);
              opp_bits_high := BXOr(opp_bits_high,$00020000);
            end;
        end;
      if BAnd(opp_bits_high,$00000200) <> 0 then { if plat[B6] = adversaire then }
        begin
          if BAnd(my_bits_high,$00000100) <> 0 then { if plat[A6] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00000200);
              opp_bits_high := BXOr(opp_bits_high,$00000200);
            end;
        end;
    if (nbPrise <> 0)
      then
        begin
          diffPions := succ(diffPions+nbPrise);
          ModifPlatBitboard_c6 := BXOr(vecteurParite,$00000004);
          my_bits_high := BOr(my_bits_high,$00000400);  { place the disc in C6 }
          g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
          g_my_bits_high  := opp_bits_high;
          g_opp_bits_low  := my_bits_low;
          g_opp_bits_high := my_bits_high;
        end
      else
        ModifPlatBitboard_c6 := vecteurParite;
  end;
end;



function ModifPlatBitboard_d6(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32;
                           var resultat : bitboard; var diffPions : SInt32) : SInt32;
var nbPrise : SInt32;
begin
  with resultat do
    begin
      nbPrise := 0;
      if BAnd(opp_bits_high,$00000004) <> 0 then { if plat[C5] = adversaire then }
        begin
          if BAnd(opp_bits_low,$02000000) <> 0 then { if plat[B4] = adversaire then }
            begin
              if BAnd(my_bits_low,$00010000) <> 0 then { if plat[A3] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$02000000);
                  opp_bits_low := BXOr(opp_bits_low,$02000000);
                  my_bits_high := BOr(my_bits_high,$00000004);
                  opp_bits_high := BXOr(opp_bits_high,$00000004);
                end;
            end
          else
          if BAnd(my_bits_low,$02000000) <> 0 then { if plat[B4] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00000004);
              opp_bits_high := BXOr(opp_bits_high,$00000004);
            end;
        end;
      if BAnd(opp_bits_high,$00000008) <> 0 then { if plat[D5] = adversaire then }
        begin
          if BAnd(opp_bits_low,$08000000) <> 0 then { if plat[D4] = adversaire then }
            begin
              if BAnd(opp_bits_low,$00080000) <> 0 then { if plat[D3] = adversaire then }
                begin
                  if BAnd(opp_bits_low,$00000800) <> 0 then { if plat[D2] = adversaire then }
                    begin
                      if BAnd(my_bits_low,$00000008) <> 0 then { if plat[D1] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$08080800);
                          opp_bits_low := BXOr(opp_bits_low,$08080800);
                          my_bits_high := BOr(my_bits_high,$00000008);
                          opp_bits_high := BXOr(opp_bits_high,$00000008);
                        end;
                    end
                  else
                  if BAnd(my_bits_low,$00000800) <> 0 then { if plat[D2] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$08080000);
                      opp_bits_low := BXOr(opp_bits_low,$08080000);
                      my_bits_high := BOr(my_bits_high,$00000008);
                      opp_bits_high := BXOr(opp_bits_high,$00000008);
                    end;
                end
              else
              if BAnd(my_bits_low,$00080000) <> 0 then { if plat[D3] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$08000000);
                  opp_bits_low := BXOr(opp_bits_low,$08000000);
                  my_bits_high := BOr(my_bits_high,$00000008);
                  opp_bits_high := BXOr(opp_bits_high,$00000008);
                end;
            end
          else
          if BAnd(my_bits_low,$08000000) <> 0 then { if plat[D4] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00000008);
              opp_bits_high := BXOr(opp_bits_high,$00000008);
            end;
        end;
      if BAnd(opp_bits_high,$00000010) <> 0 then { if plat[E5] = adversaire then }
        begin
          if BAnd(opp_bits_low,$20000000) <> 0 then { if plat[F4] = adversaire then }
            begin
              if BAnd(opp_bits_low,$00400000) <> 0 then { if plat[G3] = adversaire then }
                begin
                  if BAnd(my_bits_low,$00008000) <> 0 then { if plat[H2] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$20400000);
                      opp_bits_low := BXOr(opp_bits_low,$20400000);
                      my_bits_high := BOr(my_bits_high,$00000010);
                      opp_bits_high := BXOr(opp_bits_high,$00000010);
                    end;
                end
              else
              if BAnd(my_bits_low,$00400000) <> 0 then { if plat[G3] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$20000000);
                  opp_bits_low := BXOr(opp_bits_low,$20000000);
                  my_bits_high := BOr(my_bits_high,$00000010);
                  opp_bits_high := BXOr(opp_bits_high,$00000010);
                end;
            end
          else
          if BAnd(my_bits_low,$20000000) <> 0 then { if plat[F4] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00000010);
              opp_bits_high := BXOr(opp_bits_high,$00000010);
            end;
        end;
      if BAnd(opp_bits_high,$00001000) <> 0 then { if plat[E6] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00002000) <> 0 then { if plat[F6] = adversaire then }
            begin
              if BAnd(opp_bits_high,$00004000) <> 0 then { if plat[G6] = adversaire then }
                begin
                  if BAnd(my_bits_high,$00008000) <> 0 then { if plat[H6] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_high := BOr(my_bits_high,$00007000);
                      opp_bits_high := BXOr(opp_bits_high,$00007000);
                    end;
                end
              else
              if BAnd(my_bits_high,$00004000) <> 0 then { if plat[G6] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$00003000);
                  opp_bits_high := BXOr(opp_bits_high,$00003000);
                end;
            end
          else
          if BAnd(my_bits_high,$00002000) <> 0 then { if plat[F6] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00001000);
              opp_bits_high := BXOr(opp_bits_high,$00001000);
            end;
        end;
      if BAnd(opp_bits_high,$00100000) <> 0 then { if plat[E7] = adversaire then }
        begin
          if BAnd(my_bits_high,$20000000) <> 0 then { if plat[F8] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00100000);
              opp_bits_high := BXOr(opp_bits_high,$00100000);
            end;
        end;
      if BAnd(opp_bits_high,$00080000) <> 0 then { if plat[D7] = adversaire then }
        begin
          if BAnd(my_bits_high,$08000000) <> 0 then { if plat[D8] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00080000);
              opp_bits_high := BXOr(opp_bits_high,$00080000);
            end;
        end;
      if BAnd(opp_bits_high,$00040000) <> 0 then { if plat[C7] = adversaire then }
        begin
          if BAnd(my_bits_high,$02000000) <> 0 then { if plat[B8] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00040000);
              opp_bits_high := BXOr(opp_bits_high,$00040000);
            end;
        end;
      if BAnd(opp_bits_high,$00000400) <> 0 then { if plat[C6] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00000200) <> 0 then { if plat[B6] = adversaire then }
            begin
              if BAnd(my_bits_high,$00000100) <> 0 then { if plat[A6] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$00000600);
                  opp_bits_high := BXOr(opp_bits_high,$00000600);
                end;
            end
          else
          if BAnd(my_bits_high,$00000200) <> 0 then { if plat[B6] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00000400);
              opp_bits_high := BXOr(opp_bits_high,$00000400);
            end;
        end;
    if (nbPrise <> 0)
      then
        begin
          diffPions := succ(diffPions+nbPrise);
          ModifPlatBitboard_d6 := BXOr(vecteurParite,$00000004);
          my_bits_high := BOr(my_bits_high,$00000800);  { place the disc in D6 }
          g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
          g_my_bits_high  := opp_bits_high;
          g_opp_bits_low  := my_bits_low;
          g_opp_bits_high := my_bits_high;
        end
      else
        ModifPlatBitboard_d6 := vecteurParite;
  end;
end;



function ModifPlatBitboard_e6(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32;
                           var resultat : bitboard; var diffPions : SInt32) : SInt32;
var nbPrise : SInt32;
begin
  with resultat do
    begin
      nbPrise := 0;
      if BAnd(opp_bits_high,$00000008) <> 0 then { if plat[D5] = adversaire then }
        begin
          if BAnd(opp_bits_low,$04000000) <> 0 then { if plat[C4] = adversaire then }
            begin
              if BAnd(opp_bits_low,$00020000) <> 0 then { if plat[B3] = adversaire then }
                begin
                  if BAnd(my_bits_low,$00000100) <> 0 then { if plat[A2] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$04020000);
                      opp_bits_low := BXOr(opp_bits_low,$04020000);
                      my_bits_high := BOr(my_bits_high,$00000008);
                      opp_bits_high := BXOr(opp_bits_high,$00000008);
                    end;
                end
              else
              if BAnd(my_bits_low,$00020000) <> 0 then { if plat[B3] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$04000000);
                  opp_bits_low := BXOr(opp_bits_low,$04000000);
                  my_bits_high := BOr(my_bits_high,$00000008);
                  opp_bits_high := BXOr(opp_bits_high,$00000008);
                end;
            end
          else
          if BAnd(my_bits_low,$04000000) <> 0 then { if plat[C4] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00000008);
              opp_bits_high := BXOr(opp_bits_high,$00000008);
            end;
        end;
      if BAnd(opp_bits_high,$00000010) <> 0 then { if plat[E5] = adversaire then }
        begin
          if BAnd(opp_bits_low,$10000000) <> 0 then { if plat[E4] = adversaire then }
            begin
              if BAnd(opp_bits_low,$00100000) <> 0 then { if plat[E3] = adversaire then }
                begin
                  if BAnd(opp_bits_low,$00001000) <> 0 then { if plat[E2] = adversaire then }
                    begin
                      if BAnd(my_bits_low,$00000010) <> 0 then { if plat[E1] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$10101000);
                          opp_bits_low := BXOr(opp_bits_low,$10101000);
                          my_bits_high := BOr(my_bits_high,$00000010);
                          opp_bits_high := BXOr(opp_bits_high,$00000010);
                        end;
                    end
                  else
                  if BAnd(my_bits_low,$00001000) <> 0 then { if plat[E2] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$10100000);
                      opp_bits_low := BXOr(opp_bits_low,$10100000);
                      my_bits_high := BOr(my_bits_high,$00000010);
                      opp_bits_high := BXOr(opp_bits_high,$00000010);
                    end;
                end
              else
              if BAnd(my_bits_low,$00100000) <> 0 then { if plat[E3] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$10000000);
                  opp_bits_low := BXOr(opp_bits_low,$10000000);
                  my_bits_high := BOr(my_bits_high,$00000010);
                  opp_bits_high := BXOr(opp_bits_high,$00000010);
                end;
            end
          else
          if BAnd(my_bits_low,$10000000) <> 0 then { if plat[E4] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00000010);
              opp_bits_high := BXOr(opp_bits_high,$00000010);
            end;
        end;
      if BAnd(opp_bits_high,$00000020) <> 0 then { if plat[F5] = adversaire then }
        begin
          if BAnd(opp_bits_low,$40000000) <> 0 then { if plat[G4] = adversaire then }
            begin
              if BAnd(my_bits_low,$00800000) <> 0 then { if plat[H3] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$40000000);
                  opp_bits_low := BXOr(opp_bits_low,$40000000);
                  my_bits_high := BOr(my_bits_high,$00000020);
                  opp_bits_high := BXOr(opp_bits_high,$00000020);
                end;
            end
          else
          if BAnd(my_bits_low,$40000000) <> 0 then { if plat[G4] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00000020);
              opp_bits_high := BXOr(opp_bits_high,$00000020);
            end;
        end;
      if BAnd(opp_bits_high,$00002000) <> 0 then { if plat[F6] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00004000) <> 0 then { if plat[G6] = adversaire then }
            begin
              if BAnd(my_bits_high,$00008000) <> 0 then { if plat[H6] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$00006000);
                  opp_bits_high := BXOr(opp_bits_high,$00006000);
                end;
            end
          else
          if BAnd(my_bits_high,$00004000) <> 0 then { if plat[G6] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00002000);
              opp_bits_high := BXOr(opp_bits_high,$00002000);
            end;
        end;
      if BAnd(opp_bits_high,$00200000) <> 0 then { if plat[F7] = adversaire then }
        begin
          if BAnd(my_bits_high,$40000000) <> 0 then { if plat[G8] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00200000);
              opp_bits_high := BXOr(opp_bits_high,$00200000);
            end;
        end;
      if BAnd(opp_bits_high,$00100000) <> 0 then { if plat[E7] = adversaire then }
        begin
          if BAnd(my_bits_high,$10000000) <> 0 then { if plat[E8] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00100000);
              opp_bits_high := BXOr(opp_bits_high,$00100000);
            end;
        end;
      if BAnd(opp_bits_high,$00080000) <> 0 then { if plat[D7] = adversaire then }
        begin
          if BAnd(my_bits_high,$04000000) <> 0 then { if plat[C8] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00080000);
              opp_bits_high := BXOr(opp_bits_high,$00080000);
            end;
        end;
      if BAnd(opp_bits_high,$00000800) <> 0 then { if plat[D6] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00000400) <> 0 then { if plat[C6] = adversaire then }
            begin
              if BAnd(opp_bits_high,$00000200) <> 0 then { if plat[B6] = adversaire then }
                begin
                  if BAnd(my_bits_high,$00000100) <> 0 then { if plat[A6] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_high := BOr(my_bits_high,$00000E00);
                      opp_bits_high := BXOr(opp_bits_high,$00000E00);
                    end;
                end
              else
              if BAnd(my_bits_high,$00000200) <> 0 then { if plat[B6] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$00000C00);
                  opp_bits_high := BXOr(opp_bits_high,$00000C00);
                end;
            end
          else
          if BAnd(my_bits_high,$00000400) <> 0 then { if plat[C6] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00000800);
              opp_bits_high := BXOr(opp_bits_high,$00000800);
            end;
        end;
    if (nbPrise <> 0)
      then
        begin
          diffPions := succ(diffPions+nbPrise);
          ModifPlatBitboard_e6 := BXOr(vecteurParite,$00000008);
          my_bits_high := BOr(my_bits_high,$00001000);  { place the disc in E6 }
          g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
          g_my_bits_high  := opp_bits_high;
          g_opp_bits_low  := my_bits_low;
          g_opp_bits_high := my_bits_high;
        end
      else
        ModifPlatBitboard_e6 := vecteurParite;
  end;
end;



function ModifPlatBitboard_f6(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32;
                           var resultat : bitboard; var diffPions : SInt32) : SInt32;
var nbPrise : SInt32;
begin
  with resultat do
    begin
      nbPrise := 0;
      if BAnd(opp_bits_high,$00000010) <> 0 then { if plat[E5] = adversaire then }
        begin
          if BAnd(opp_bits_low,$08000000) <> 0 then { if plat[D4] = adversaire then }
            begin
              if BAnd(opp_bits_low,$00040000) <> 0 then { if plat[C3] = adversaire then }
                begin
                  if BAnd(opp_bits_low,$00000200) <> 0 then { if plat[B2] = adversaire then }
                    begin
                      if BAnd(my_bits_low,$00000001) <> 0 then { if plat[A1] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$08040200);
                          opp_bits_low := BXOr(opp_bits_low,$08040200);
                          my_bits_high := BOr(my_bits_high,$00000010);
                          opp_bits_high := BXOr(opp_bits_high,$00000010);
                        end;
                    end
                  else
                  if BAnd(my_bits_low,$00000200) <> 0 then { if plat[B2] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$08040000);
                      opp_bits_low := BXOr(opp_bits_low,$08040000);
                      my_bits_high := BOr(my_bits_high,$00000010);
                      opp_bits_high := BXOr(opp_bits_high,$00000010);
                    end;
                end
              else
              if BAnd(my_bits_low,$00040000) <> 0 then { if plat[C3] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$08000000);
                  opp_bits_low := BXOr(opp_bits_low,$08000000);
                  my_bits_high := BOr(my_bits_high,$00000010);
                  opp_bits_high := BXOr(opp_bits_high,$00000010);
                end;
            end
          else
          if BAnd(my_bits_low,$08000000) <> 0 then { if plat[D4] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00000010);
              opp_bits_high := BXOr(opp_bits_high,$00000010);
            end;
        end;
      if BAnd(opp_bits_high,$00000020) <> 0 then { if plat[F5] = adversaire then }
        begin
          if BAnd(opp_bits_low,$20000000) <> 0 then { if plat[F4] = adversaire then }
            begin
              if BAnd(opp_bits_low,$00200000) <> 0 then { if plat[F3] = adversaire then }
                begin
                  if BAnd(opp_bits_low,$00002000) <> 0 then { if plat[F2] = adversaire then }
                    begin
                      if BAnd(my_bits_low,$00000020) <> 0 then { if plat[F1] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$20202000);
                          opp_bits_low := BXOr(opp_bits_low,$20202000);
                          my_bits_high := BOr(my_bits_high,$00000020);
                          opp_bits_high := BXOr(opp_bits_high,$00000020);
                        end;
                    end
                  else
                  if BAnd(my_bits_low,$00002000) <> 0 then { if plat[F2] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$20200000);
                      opp_bits_low := BXOr(opp_bits_low,$20200000);
                      my_bits_high := BOr(my_bits_high,$00000020);
                      opp_bits_high := BXOr(opp_bits_high,$00000020);
                    end;
                end
              else
              if BAnd(my_bits_low,$00200000) <> 0 then { if plat[F3] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$20000000);
                  opp_bits_low := BXOr(opp_bits_low,$20000000);
                  my_bits_high := BOr(my_bits_high,$00000020);
                  opp_bits_high := BXOr(opp_bits_high,$00000020);
                end;
            end
          else
          if BAnd(my_bits_low,$20000000) <> 0 then { if plat[F4] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00000020);
              opp_bits_high := BXOr(opp_bits_high,$00000020);
            end;
        end;
      if BAnd(opp_bits_high,$00000040) <> 0 then { if plat[G5] = adversaire then }
        begin
          if BAnd(my_bits_low,$80000000) <> 0 then { if plat[H4] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00000040);
              opp_bits_high := BXOr(opp_bits_high,$00000040);
            end;
        end;
      if BAnd(opp_bits_high,$00004000) <> 0 then { if plat[G6] = adversaire then }
        begin
          if BAnd(my_bits_high,$00008000) <> 0 then { if plat[H6] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00004000);
              opp_bits_high := BXOr(opp_bits_high,$00004000);
            end;
        end;
      if BAnd(opp_bits_high,$00400000) <> 0 then { if plat[G7] = adversaire then }
        begin
          if BAnd(my_bits_high,$80000000) <> 0 then { if plat[H8] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00400000);
              opp_bits_high := BXOr(opp_bits_high,$00400000);
            end;
        end;
      if BAnd(opp_bits_high,$00200000) <> 0 then { if plat[F7] = adversaire then }
        begin
          if BAnd(my_bits_high,$20000000) <> 0 then { if plat[F8] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00200000);
              opp_bits_high := BXOr(opp_bits_high,$00200000);
            end;
        end;
      if BAnd(opp_bits_high,$00100000) <> 0 then { if plat[E7] = adversaire then }
        begin
          if BAnd(my_bits_high,$08000000) <> 0 then { if plat[D8] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00100000);
              opp_bits_high := BXOr(opp_bits_high,$00100000);
            end;
        end;
      if BAnd(opp_bits_high,$00001000) <> 0 then { if plat[E6] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00000800) <> 0 then { if plat[D6] = adversaire then }
            begin
              if BAnd(opp_bits_high,$00000400) <> 0 then { if plat[C6] = adversaire then }
                begin
                  if BAnd(opp_bits_high,$00000200) <> 0 then { if plat[B6] = adversaire then }
                    begin
                      if BAnd(my_bits_high,$00000100) <> 0 then { if plat[A6] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_high := BOr(my_bits_high,$00001E00);
                          opp_bits_high := BXOr(opp_bits_high,$00001E00);
                        end;
                    end
                  else
                  if BAnd(my_bits_high,$00000200) <> 0 then { if plat[B6] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_high := BOr(my_bits_high,$00001C00);
                      opp_bits_high := BXOr(opp_bits_high,$00001C00);
                    end;
                end
              else
              if BAnd(my_bits_high,$00000400) <> 0 then { if plat[C6] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$00001800);
                  opp_bits_high := BXOr(opp_bits_high,$00001800);
                end;
            end
          else
          if BAnd(my_bits_high,$00000800) <> 0 then { if plat[D6] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00001000);
              opp_bits_high := BXOr(opp_bits_high,$00001000);
            end;
        end;
    if (nbPrise <> 0)
      then
        begin
          diffPions := succ(diffPions+nbPrise);
          ModifPlatBitboard_f6 := BXOr(vecteurParite,$00000008);
          my_bits_high := BOr(my_bits_high,$00002000);  { place the disc in F6 }
          g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
          g_my_bits_high  := opp_bits_high;
          g_opp_bits_low  := my_bits_low;
          g_opp_bits_high := my_bits_high;
        end
      else
        ModifPlatBitboard_f6 := vecteurParite;
  end;
end;



function ModifPlatBitboard_g6(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32;
                           var resultat : bitboard; var diffPions : SInt32) : SInt32;
var nbPrise : SInt32;
begin
  with resultat do
    begin
      nbPrise := 0;
      if BAnd(opp_bits_high,$00400000) <> 0 then { if plat[G7] = adversaire then }
        begin
          if BAnd(my_bits_high,$40000000) <> 0 then { if plat[G8] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00400000);
              opp_bits_high := BXOr(opp_bits_high,$00400000);
            end;
        end;
      if BAnd(opp_bits_high,$00200000) <> 0 then { if plat[F7] = adversaire then }
        begin
          if BAnd(my_bits_high,$10000000) <> 0 then { if plat[E8] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00200000);
              opp_bits_high := BXOr(opp_bits_high,$00200000);
            end;
        end;
      if BAnd(opp_bits_high,$00002000) <> 0 then { if plat[F6] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00001000) <> 0 then { if plat[E6] = adversaire then }
            begin
              if BAnd(opp_bits_high,$00000800) <> 0 then { if plat[D6] = adversaire then }
                begin
                  if BAnd(opp_bits_high,$00000400) <> 0 then { if plat[C6] = adversaire then }
                    begin
                      if BAnd(opp_bits_high,$00000200) <> 0 then { if plat[B6] = adversaire then }
                        begin
                          if BAnd(my_bits_high,$00000100) <> 0 then { if plat[A6] = couleur then }
                            begin
                              nbPrise := nbPrise + 10;
                              my_bits_high := BOr(my_bits_high,$00003E00);
                              opp_bits_high := BXOr(opp_bits_high,$00003E00);
                            end;
                        end
                      else
                      if BAnd(my_bits_high,$00000200) <> 0 then { if plat[B6] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_high := BOr(my_bits_high,$00003C00);
                          opp_bits_high := BXOr(opp_bits_high,$00003C00);
                        end;
                    end
                  else
                  if BAnd(my_bits_high,$00000400) <> 0 then { if plat[C6] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_high := BOr(my_bits_high,$00003800);
                      opp_bits_high := BXOr(opp_bits_high,$00003800);
                    end;
                end
              else
              if BAnd(my_bits_high,$00000800) <> 0 then { if plat[D6] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$00003000);
                  opp_bits_high := BXOr(opp_bits_high,$00003000);
                end;
            end
          else
          if BAnd(my_bits_high,$00001000) <> 0 then { if plat[E6] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00002000);
              opp_bits_high := BXOr(opp_bits_high,$00002000);
            end;
        end;
      if BAnd(opp_bits_high,$00000020) <> 0 then { if plat[F5] = adversaire then }
        begin
          if BAnd(opp_bits_low,$10000000) <> 0 then { if plat[E4] = adversaire then }
            begin
              if BAnd(opp_bits_low,$00080000) <> 0 then { if plat[D3] = adversaire then }
                begin
                  if BAnd(opp_bits_low,$00000400) <> 0 then { if plat[C2] = adversaire then }
                    begin
                      if BAnd(my_bits_low,$00000002) <> 0 then { if plat[B1] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$10080400);
                          opp_bits_low := BXOr(opp_bits_low,$10080400);
                          my_bits_high := BOr(my_bits_high,$00000020);
                          opp_bits_high := BXOr(opp_bits_high,$00000020);
                        end;
                    end
                  else
                  if BAnd(my_bits_low,$00000400) <> 0 then { if plat[C2] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$10080000);
                      opp_bits_low := BXOr(opp_bits_low,$10080000);
                      my_bits_high := BOr(my_bits_high,$00000020);
                      opp_bits_high := BXOr(opp_bits_high,$00000020);
                    end;
                end
              else
              if BAnd(my_bits_low,$00080000) <> 0 then { if plat[D3] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$10000000);
                  opp_bits_low := BXOr(opp_bits_low,$10000000);
                  my_bits_high := BOr(my_bits_high,$00000020);
                  opp_bits_high := BXOr(opp_bits_high,$00000020);
                end;
            end
          else
          if BAnd(my_bits_low,$10000000) <> 0 then { if plat[E4] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00000020);
              opp_bits_high := BXOr(opp_bits_high,$00000020);
            end;
        end;
      if BAnd(opp_bits_high,$00000040) <> 0 then { if plat[G5] = adversaire then }
        begin
          if BAnd(opp_bits_low,$40000000) <> 0 then { if plat[G4] = adversaire then }
            begin
              if BAnd(opp_bits_low,$00400000) <> 0 then { if plat[G3] = adversaire then }
                begin
                  if BAnd(opp_bits_low,$00004000) <> 0 then { if plat[G2] = adversaire then }
                    begin
                      if BAnd(my_bits_low,$00000040) <> 0 then { if plat[G1] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$40404000);
                          opp_bits_low := BXOr(opp_bits_low,$40404000);
                          my_bits_high := BOr(my_bits_high,$00000040);
                          opp_bits_high := BXOr(opp_bits_high,$00000040);
                        end;
                    end
                  else
                  if BAnd(my_bits_low,$00004000) <> 0 then { if plat[G2] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$40400000);
                      opp_bits_low := BXOr(opp_bits_low,$40400000);
                      my_bits_high := BOr(my_bits_high,$00000040);
                      opp_bits_high := BXOr(opp_bits_high,$00000040);
                    end;
                end
              else
              if BAnd(my_bits_low,$00400000) <> 0 then { if plat[G3] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$40000000);
                  opp_bits_low := BXOr(opp_bits_low,$40000000);
                  my_bits_high := BOr(my_bits_high,$00000040);
                  opp_bits_high := BXOr(opp_bits_high,$00000040);
                end;
            end
          else
          if BAnd(my_bits_low,$40000000) <> 0 then { if plat[G4] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00000040);
              opp_bits_high := BXOr(opp_bits_high,$00000040);
            end;
        end;
    if (nbPrise <> 0)
      then
        begin
          diffPions := succ(diffPions+nbPrise);
          ModifPlatBitboard_g6 := BXOr(vecteurParite,$00000008);
          my_bits_high := BOr(my_bits_high,$00004000);  { place the disc in G6 }
          g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
          g_my_bits_high  := opp_bits_high;
          g_opp_bits_low  := my_bits_low;
          g_opp_bits_high := my_bits_high;
        end
      else
        ModifPlatBitboard_g6 := vecteurParite;
  end;
end;



function ModifPlatBitboard_h6(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32;
                           var resultat : bitboard; var diffPions : SInt32) : SInt32;
var nbPrise : SInt32;
begin
  with resultat do
    begin
      nbPrise := 0;
      if BAnd(opp_bits_high,$00800000) <> 0 then { if plat[H7] = adversaire then }
        begin
          if BAnd(my_bits_high,$80000000) <> 0 then { if plat[H8] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00800000);
              opp_bits_high := BXOr(opp_bits_high,$00800000);
            end;
        end;
      if BAnd(opp_bits_high,$00400000) <> 0 then { if plat[G7] = adversaire then }
        begin
          if BAnd(my_bits_high,$20000000) <> 0 then { if plat[F8] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00400000);
              opp_bits_high := BXOr(opp_bits_high,$00400000);
            end;
        end;
      if BAnd(opp_bits_high,$00004000) <> 0 then { if plat[G6] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00002000) <> 0 then { if plat[F6] = adversaire then }
            begin
              if BAnd(opp_bits_high,$00001000) <> 0 then { if plat[E6] = adversaire then }
                begin
                  if BAnd(opp_bits_high,$00000800) <> 0 then { if plat[D6] = adversaire then }
                    begin
                      if BAnd(opp_bits_high,$00000400) <> 0 then { if plat[C6] = adversaire then }
                        begin
                          if BAnd(opp_bits_high,$00000200) <> 0 then { if plat[B6] = adversaire then }
                            begin
                              if BAnd(my_bits_high,$00000100) <> 0 then { if plat[A6] = couleur then }
                                begin
                                  nbPrise := nbPrise + 12;
                                  my_bits_high := BOr(my_bits_high,$00007E00);
                                  opp_bits_high := BXOr(opp_bits_high,$00007E00);
                                end;
                            end
                          else
                          if BAnd(my_bits_high,$00000200) <> 0 then { if plat[B6] = couleur then }
                            begin
                              nbPrise := nbPrise + 10;
                              my_bits_high := BOr(my_bits_high,$00007C00);
                              opp_bits_high := BXOr(opp_bits_high,$00007C00);
                            end;
                        end
                      else
                      if BAnd(my_bits_high,$00000400) <> 0 then { if plat[C6] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_high := BOr(my_bits_high,$00007800);
                          opp_bits_high := BXOr(opp_bits_high,$00007800);
                        end;
                    end
                  else
                  if BAnd(my_bits_high,$00000800) <> 0 then { if plat[D6] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_high := BOr(my_bits_high,$00007000);
                      opp_bits_high := BXOr(opp_bits_high,$00007000);
                    end;
                end
              else
              if BAnd(my_bits_high,$00001000) <> 0 then { if plat[E6] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$00006000);
                  opp_bits_high := BXOr(opp_bits_high,$00006000);
                end;
            end
          else
          if BAnd(my_bits_high,$00002000) <> 0 then { if plat[F6] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00004000);
              opp_bits_high := BXOr(opp_bits_high,$00004000);
            end;
        end;
      if BAnd(opp_bits_high,$00000040) <> 0 then { if plat[G5] = adversaire then }
        begin
          if BAnd(opp_bits_low,$20000000) <> 0 then { if plat[F4] = adversaire then }
            begin
              if BAnd(opp_bits_low,$00100000) <> 0 then { if plat[E3] = adversaire then }
                begin
                  if BAnd(opp_bits_low,$00000800) <> 0 then { if plat[D2] = adversaire then }
                    begin
                      if BAnd(my_bits_low,$00000004) <> 0 then { if plat[C1] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$20100800);
                          opp_bits_low := BXOr(opp_bits_low,$20100800);
                          my_bits_high := BOr(my_bits_high,$00000040);
                          opp_bits_high := BXOr(opp_bits_high,$00000040);
                        end;
                    end
                  else
                  if BAnd(my_bits_low,$00000800) <> 0 then { if plat[D2] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$20100000);
                      opp_bits_low := BXOr(opp_bits_low,$20100000);
                      my_bits_high := BOr(my_bits_high,$00000040);
                      opp_bits_high := BXOr(opp_bits_high,$00000040);
                    end;
                end
              else
              if BAnd(my_bits_low,$00100000) <> 0 then { if plat[E3] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$20000000);
                  opp_bits_low := BXOr(opp_bits_low,$20000000);
                  my_bits_high := BOr(my_bits_high,$00000040);
                  opp_bits_high := BXOr(opp_bits_high,$00000040);
                end;
            end
          else
          if BAnd(my_bits_low,$20000000) <> 0 then { if plat[F4] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00000040);
              opp_bits_high := BXOr(opp_bits_high,$00000040);
            end;
        end;
      if BAnd(opp_bits_high,$00000080) <> 0 then { if plat[H5] = adversaire then }
        begin
          if BAnd(opp_bits_low,$80000000) <> 0 then { if plat[H4] = adversaire then }
            begin
              if BAnd(opp_bits_low,$00800000) <> 0 then { if plat[H3] = adversaire then }
                begin
                  if BAnd(opp_bits_low,$00008000) <> 0 then { if plat[H2] = adversaire then }
                    begin
                      if BAnd(my_bits_low,$00000080) <> 0 then { if plat[H1] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$80808000);
                          opp_bits_low := BXOr(opp_bits_low,$80808000);
                          my_bits_high := BOr(my_bits_high,$00000080);
                          opp_bits_high := BXOr(opp_bits_high,$00000080);
                        end;
                    end
                  else
                  if BAnd(my_bits_low,$00008000) <> 0 then { if plat[H2] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$80800000);
                      opp_bits_low := BXOr(opp_bits_low,$80800000);
                      my_bits_high := BOr(my_bits_high,$00000080);
                      opp_bits_high := BXOr(opp_bits_high,$00000080);
                    end;
                end
              else
              if BAnd(my_bits_low,$00800000) <> 0 then { if plat[H3] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_low := BOr(my_bits_low,$80000000);
                  opp_bits_low := BXOr(opp_bits_low,$80000000);
                  my_bits_high := BOr(my_bits_high,$00000080);
                  opp_bits_high := BXOr(opp_bits_high,$00000080);
                end;
            end
          else
          if BAnd(my_bits_low,$80000000) <> 0 then { if plat[H4] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00000080);
              opp_bits_high := BXOr(opp_bits_high,$00000080);
            end;
        end;
    if (nbPrise <> 0)
      then
        begin
          diffPions := succ(diffPions+nbPrise);
          ModifPlatBitboard_h6 := BXOr(vecteurParite,$00000008);
          my_bits_high := BOr(my_bits_high,$00008000);  { place the disc in H6 }
          g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
          g_my_bits_high  := opp_bits_high;
          g_opp_bits_low  := my_bits_low;
          g_opp_bits_high := my_bits_high;
        end
      else
        ModifPlatBitboard_h6 := vecteurParite;
  end;
end;



function ModifPlatBitboard_a7(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32;
                           var resultat : bitboard; var diffPions : SInt32) : SInt32;
var nbPrise : SInt32;
begin
  with resultat do
    begin
      nbPrise := 0;
      if BAnd(opp_bits_high,$00000100) <> 0 then { if plat[A6] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00000001) <> 0 then { if plat[A5] = adversaire then }
            begin
              if BAnd(opp_bits_low,$01000000) <> 0 then { if plat[A4] = adversaire then }
                begin
                  if BAnd(opp_bits_low,$00010000) <> 0 then { if plat[A3] = adversaire then }
                    begin
                      if BAnd(opp_bits_low,$00000100) <> 0 then { if plat[A2] = adversaire then }
                        begin
                          if BAnd(my_bits_low,$00000001) <> 0 then { if plat[A1] = couleur then }
                            begin
                              nbPrise := nbPrise + 10;
                              my_bits_low := BOr(my_bits_low,$01010100);
                              opp_bits_low := BXOr(opp_bits_low,$01010100);
                              my_bits_high := BOr(my_bits_high,$00000101);
                              opp_bits_high := BXOr(opp_bits_high,$00000101);
                            end;
                        end
                      else
                      if BAnd(my_bits_low,$00000100) <> 0 then { if plat[A2] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$01010000);
                          opp_bits_low := BXOr(opp_bits_low,$01010000);
                          my_bits_high := BOr(my_bits_high,$00000101);
                          opp_bits_high := BXOr(opp_bits_high,$00000101);
                        end;
                    end
                  else
                  if BAnd(my_bits_low,$00010000) <> 0 then { if plat[A3] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$01000000);
                      opp_bits_low := BXOr(opp_bits_low,$01000000);
                      my_bits_high := BOr(my_bits_high,$00000101);
                      opp_bits_high := BXOr(opp_bits_high,$00000101);
                    end;
                end
              else
              if BAnd(my_bits_low,$01000000) <> 0 then { if plat[A4] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$00000101);
                  opp_bits_high := BXOr(opp_bits_high,$00000101);
                end;
            end
          else
          if BAnd(my_bits_high,$00000001) <> 0 then { if plat[A5] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00000100);
              opp_bits_high := BXOr(opp_bits_high,$00000100);
            end;
        end;
      if BAnd(opp_bits_high,$00000200) <> 0 then { if plat[B6] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00000004) <> 0 then { if plat[C5] = adversaire then }
            begin
              if BAnd(opp_bits_low,$08000000) <> 0 then { if plat[D4] = adversaire then }
                begin
                  if BAnd(opp_bits_low,$00100000) <> 0 then { if plat[E3] = adversaire then }
                    begin
                      if BAnd(opp_bits_low,$00002000) <> 0 then { if plat[F2] = adversaire then }
                        begin
                          if BAnd(my_bits_low,$00000040) <> 0 then { if plat[G1] = couleur then }
                            begin
                              nbPrise := nbPrise + 10;
                              my_bits_low := BOr(my_bits_low,$08102000);
                              opp_bits_low := BXOr(opp_bits_low,$08102000);
                              my_bits_high := BOr(my_bits_high,$00000204);
                              opp_bits_high := BXOr(opp_bits_high,$00000204);
                            end;
                        end
                      else
                      if BAnd(my_bits_low,$00002000) <> 0 then { if plat[F2] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$08100000);
                          opp_bits_low := BXOr(opp_bits_low,$08100000);
                          my_bits_high := BOr(my_bits_high,$00000204);
                          opp_bits_high := BXOr(opp_bits_high,$00000204);
                        end;
                    end
                  else
                  if BAnd(my_bits_low,$00100000) <> 0 then { if plat[E3] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$08000000);
                      opp_bits_low := BXOr(opp_bits_low,$08000000);
                      my_bits_high := BOr(my_bits_high,$00000204);
                      opp_bits_high := BXOr(opp_bits_high,$00000204);
                    end;
                end
              else
              if BAnd(my_bits_low,$08000000) <> 0 then { if plat[D4] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$00000204);
                  opp_bits_high := BXOr(opp_bits_high,$00000204);
                end;
            end
          else
          if BAnd(my_bits_high,$00000004) <> 0 then { if plat[C5] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00000200);
              opp_bits_high := BXOr(opp_bits_high,$00000200);
            end;
        end;
      if BAnd(opp_bits_high,$00020000) <> 0 then { if plat[B7] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00040000) <> 0 then { if plat[C7] = adversaire then }
            begin
              if BAnd(opp_bits_high,$00080000) <> 0 then { if plat[D7] = adversaire then }
                begin
                  if BAnd(opp_bits_high,$00100000) <> 0 then { if plat[E7] = adversaire then }
                    begin
                      if BAnd(opp_bits_high,$00200000) <> 0 then { if plat[F7] = adversaire then }
                        begin
                          if BAnd(opp_bits_high,$00400000) <> 0 then { if plat[G7] = adversaire then }
                            begin
                              if BAnd(my_bits_high,$00800000) <> 0 then { if plat[H7] = couleur then }
                                begin
                                  nbPrise := nbPrise + 12;
                                  my_bits_high := BOr(my_bits_high,$007E0000);
                                  opp_bits_high := BXOr(opp_bits_high,$007E0000);
                                end;
                            end
                          else
                          if BAnd(my_bits_high,$00400000) <> 0 then { if plat[G7] = couleur then }
                            begin
                              nbPrise := nbPrise + 10;
                              my_bits_high := BOr(my_bits_high,$003E0000);
                              opp_bits_high := BXOr(opp_bits_high,$003E0000);
                            end;
                        end
                      else
                      if BAnd(my_bits_high,$00200000) <> 0 then { if plat[F7] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_high := BOr(my_bits_high,$001E0000);
                          opp_bits_high := BXOr(opp_bits_high,$001E0000);
                        end;
                    end
                  else
                  if BAnd(my_bits_high,$00100000) <> 0 then { if plat[E7] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_high := BOr(my_bits_high,$000E0000);
                      opp_bits_high := BXOr(opp_bits_high,$000E0000);
                    end;
                end
              else
              if BAnd(my_bits_high,$00080000) <> 0 then { if plat[D7] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$00060000);
                  opp_bits_high := BXOr(opp_bits_high,$00060000);
                end;
            end
          else
          if BAnd(my_bits_high,$00040000) <> 0 then { if plat[C7] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00020000);
              opp_bits_high := BXOr(opp_bits_high,$00020000);
            end;
        end;
    if (nbPrise <> 0)
      then
        begin
          diffPions := succ(diffPions+nbPrise);
          ModifPlatBitboard_a7 := BXOr(vecteurParite,$00000004);
          my_bits_high := BOr(my_bits_high,$00010000);  { place the disc in A7 }
          g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
          g_my_bits_high  := opp_bits_high;
          g_opp_bits_low  := my_bits_low;
          g_opp_bits_high := my_bits_high;
        end
      else
        ModifPlatBitboard_a7 := vecteurParite;
  end;
end;



function ModifPlatBitboard_b7(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32;
                           var resultat : bitboard; var diffPions : SInt32) : SInt32;
var nbPrise : SInt32;
begin
  with resultat do
    begin
      nbPrise := 0;
      if BAnd(opp_bits_high,$00000200) <> 0 then { if plat[B6] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00000002) <> 0 then { if plat[B5] = adversaire then }
            begin
              if BAnd(opp_bits_low,$02000000) <> 0 then { if plat[B4] = adversaire then }
                begin
                  if BAnd(opp_bits_low,$00020000) <> 0 then { if plat[B3] = adversaire then }
                    begin
                      if BAnd(opp_bits_low,$00000200) <> 0 then { if plat[B2] = adversaire then }
                        begin
                          if BAnd(my_bits_low,$00000002) <> 0 then { if plat[B1] = couleur then }
                            begin
                              nbPrise := nbPrise + 10;
                              my_bits_low := BOr(my_bits_low,$02020200);
                              opp_bits_low := BXOr(opp_bits_low,$02020200);
                              my_bits_high := BOr(my_bits_high,$00000202);
                              opp_bits_high := BXOr(opp_bits_high,$00000202);
                            end;
                        end
                      else
                      if BAnd(my_bits_low,$00000200) <> 0 then { if plat[B2] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$02020000);
                          opp_bits_low := BXOr(opp_bits_low,$02020000);
                          my_bits_high := BOr(my_bits_high,$00000202);
                          opp_bits_high := BXOr(opp_bits_high,$00000202);
                        end;
                    end
                  else
                  if BAnd(my_bits_low,$00020000) <> 0 then { if plat[B3] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$02000000);
                      opp_bits_low := BXOr(opp_bits_low,$02000000);
                      my_bits_high := BOr(my_bits_high,$00000202);
                      opp_bits_high := BXOr(opp_bits_high,$00000202);
                    end;
                end
              else
              if BAnd(my_bits_low,$02000000) <> 0 then { if plat[B4] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$00000202);
                  opp_bits_high := BXOr(opp_bits_high,$00000202);
                end;
            end
          else
          if BAnd(my_bits_high,$00000002) <> 0 then { if plat[B5] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00000200);
              opp_bits_high := BXOr(opp_bits_high,$00000200);
            end;
        end;
      if BAnd(opp_bits_high,$00000400) <> 0 then { if plat[C6] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00000008) <> 0 then { if plat[D5] = adversaire then }
            begin
              if BAnd(opp_bits_low,$10000000) <> 0 then { if plat[E4] = adversaire then }
                begin
                  if BAnd(opp_bits_low,$00200000) <> 0 then { if plat[F3] = adversaire then }
                    begin
                      if BAnd(opp_bits_low,$00004000) <> 0 then { if plat[G2] = adversaire then }
                        begin
                          if BAnd(my_bits_low,$00000080) <> 0 then { if plat[H1] = couleur then }
                            begin
                              nbPrise := nbPrise + 10;
                              my_bits_low := BOr(my_bits_low,$10204000);
                              opp_bits_low := BXOr(opp_bits_low,$10204000);
                              my_bits_high := BOr(my_bits_high,$00000408);
                              opp_bits_high := BXOr(opp_bits_high,$00000408);
                            end;
                        end
                      else
                      if BAnd(my_bits_low,$00004000) <> 0 then { if plat[G2] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$10200000);
                          opp_bits_low := BXOr(opp_bits_low,$10200000);
                          my_bits_high := BOr(my_bits_high,$00000408);
                          opp_bits_high := BXOr(opp_bits_high,$00000408);
                        end;
                    end
                  else
                  if BAnd(my_bits_low,$00200000) <> 0 then { if plat[F3] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$10000000);
                      opp_bits_low := BXOr(opp_bits_low,$10000000);
                      my_bits_high := BOr(my_bits_high,$00000408);
                      opp_bits_high := BXOr(opp_bits_high,$00000408);
                    end;
                end
              else
              if BAnd(my_bits_low,$10000000) <> 0 then { if plat[E4] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$00000408);
                  opp_bits_high := BXOr(opp_bits_high,$00000408);
                end;
            end
          else
          if BAnd(my_bits_high,$00000008) <> 0 then { if plat[D5] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00000400);
              opp_bits_high := BXOr(opp_bits_high,$00000400);
            end;
        end;
      if BAnd(opp_bits_high,$00040000) <> 0 then { if plat[C7] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00080000) <> 0 then { if plat[D7] = adversaire then }
            begin
              if BAnd(opp_bits_high,$00100000) <> 0 then { if plat[E7] = adversaire then }
                begin
                  if BAnd(opp_bits_high,$00200000) <> 0 then { if plat[F7] = adversaire then }
                    begin
                      if BAnd(opp_bits_high,$00400000) <> 0 then { if plat[G7] = adversaire then }
                        begin
                          if BAnd(my_bits_high,$00800000) <> 0 then { if plat[H7] = couleur then }
                            begin
                              nbPrise := nbPrise + 10;
                              my_bits_high := BOr(my_bits_high,$007C0000);
                              opp_bits_high := BXOr(opp_bits_high,$007C0000);
                            end;
                        end
                      else
                      if BAnd(my_bits_high,$00400000) <> 0 then { if plat[G7] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_high := BOr(my_bits_high,$003C0000);
                          opp_bits_high := BXOr(opp_bits_high,$003C0000);
                        end;
                    end
                  else
                  if BAnd(my_bits_high,$00200000) <> 0 then { if plat[F7] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_high := BOr(my_bits_high,$001C0000);
                      opp_bits_high := BXOr(opp_bits_high,$001C0000);
                    end;
                end
              else
              if BAnd(my_bits_high,$00100000) <> 0 then { if plat[E7] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$000C0000);
                  opp_bits_high := BXOr(opp_bits_high,$000C0000);
                end;
            end
          else
          if BAnd(my_bits_high,$00080000) <> 0 then { if plat[D7] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00040000);
              opp_bits_high := BXOr(opp_bits_high,$00040000);
            end;
        end;
    if (nbPrise <> 0)
      then
        begin
          diffPions := succ(diffPions+nbPrise);
          ModifPlatBitboard_b7 := BXOr(vecteurParite,$00000004);
          my_bits_high := BOr(my_bits_high,$00020000);  { place the disc in B7 }
          g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
          g_my_bits_high  := opp_bits_high;
          g_opp_bits_low  := my_bits_low;
          g_opp_bits_high := my_bits_high;
        end
      else
        ModifPlatBitboard_b7 := vecteurParite;
  end;
end;



function ModifPlatBitboard_c7(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32;
                           var resultat : bitboard; var diffPions : SInt32) : SInt32;
var nbPrise : SInt32;
begin
  with resultat do
    begin
      nbPrise := 0;
      if BAnd(opp_bits_high,$00020000) <> 0 then { if plat[B7] = adversaire then }
        begin
          if BAnd(my_bits_high,$00010000) <> 0 then { if plat[A7] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00020000);
              opp_bits_high := BXOr(opp_bits_high,$00020000);
            end;
        end;
      if BAnd(opp_bits_high,$00000200) <> 0 then { if plat[B6] = adversaire then }
        begin
          if BAnd(my_bits_high,$00000001) <> 0 then { if plat[A5] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00000200);
              opp_bits_high := BXOr(opp_bits_high,$00000200);
            end;
        end;
      if BAnd(opp_bits_high,$00000400) <> 0 then { if plat[C6] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00000004) <> 0 then { if plat[C5] = adversaire then }
            begin
              if BAnd(opp_bits_low,$04000000) <> 0 then { if plat[C4] = adversaire then }
                begin
                  if BAnd(opp_bits_low,$00040000) <> 0 then { if plat[C3] = adversaire then }
                    begin
                      if BAnd(opp_bits_low,$00000400) <> 0 then { if plat[C2] = adversaire then }
                        begin
                          if BAnd(my_bits_low,$00000004) <> 0 then { if plat[C1] = couleur then }
                            begin
                              nbPrise := nbPrise + 10;
                              my_bits_low := BOr(my_bits_low,$04040400);
                              opp_bits_low := BXOr(opp_bits_low,$04040400);
                              my_bits_high := BOr(my_bits_high,$00000404);
                              opp_bits_high := BXOr(opp_bits_high,$00000404);
                            end;
                        end
                      else
                      if BAnd(my_bits_low,$00000400) <> 0 then { if plat[C2] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$04040000);
                          opp_bits_low := BXOr(opp_bits_low,$04040000);
                          my_bits_high := BOr(my_bits_high,$00000404);
                          opp_bits_high := BXOr(opp_bits_high,$00000404);
                        end;
                    end
                  else
                  if BAnd(my_bits_low,$00040000) <> 0 then { if plat[C3] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$04000000);
                      opp_bits_low := BXOr(opp_bits_low,$04000000);
                      my_bits_high := BOr(my_bits_high,$00000404);
                      opp_bits_high := BXOr(opp_bits_high,$00000404);
                    end;
                end
              else
              if BAnd(my_bits_low,$04000000) <> 0 then { if plat[C4] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$00000404);
                  opp_bits_high := BXOr(opp_bits_high,$00000404);
                end;
            end
          else
          if BAnd(my_bits_high,$00000004) <> 0 then { if plat[C5] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00000400);
              opp_bits_high := BXOr(opp_bits_high,$00000400);
            end;
        end;
      if BAnd(opp_bits_high,$00000800) <> 0 then { if plat[D6] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00000010) <> 0 then { if plat[E5] = adversaire then }
            begin
              if BAnd(opp_bits_low,$20000000) <> 0 then { if plat[F4] = adversaire then }
                begin
                  if BAnd(opp_bits_low,$00400000) <> 0 then { if plat[G3] = adversaire then }
                    begin
                      if BAnd(my_bits_low,$00008000) <> 0 then { if plat[H2] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$20400000);
                          opp_bits_low := BXOr(opp_bits_low,$20400000);
                          my_bits_high := BOr(my_bits_high,$00000810);
                          opp_bits_high := BXOr(opp_bits_high,$00000810);
                        end;
                    end
                  else
                  if BAnd(my_bits_low,$00400000) <> 0 then { if plat[G3] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$20000000);
                      opp_bits_low := BXOr(opp_bits_low,$20000000);
                      my_bits_high := BOr(my_bits_high,$00000810);
                      opp_bits_high := BXOr(opp_bits_high,$00000810);
                    end;
                end
              else
              if BAnd(my_bits_low,$20000000) <> 0 then { if plat[F4] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$00000810);
                  opp_bits_high := BXOr(opp_bits_high,$00000810);
                end;
            end
          else
          if BAnd(my_bits_high,$00000010) <> 0 then { if plat[E5] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00000800);
              opp_bits_high := BXOr(opp_bits_high,$00000800);
            end;
        end;
      if BAnd(opp_bits_high,$00080000) <> 0 then { if plat[D7] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00100000) <> 0 then { if plat[E7] = adversaire then }
            begin
              if BAnd(opp_bits_high,$00200000) <> 0 then { if plat[F7] = adversaire then }
                begin
                  if BAnd(opp_bits_high,$00400000) <> 0 then { if plat[G7] = adversaire then }
                    begin
                      if BAnd(my_bits_high,$00800000) <> 0 then { if plat[H7] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_high := BOr(my_bits_high,$00780000);
                          opp_bits_high := BXOr(opp_bits_high,$00780000);
                        end;
                    end
                  else
                  if BAnd(my_bits_high,$00400000) <> 0 then { if plat[G7] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_high := BOr(my_bits_high,$00380000);
                      opp_bits_high := BXOr(opp_bits_high,$00380000);
                    end;
                end
              else
              if BAnd(my_bits_high,$00200000) <> 0 then { if plat[F7] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$00180000);
                  opp_bits_high := BXOr(opp_bits_high,$00180000);
                end;
            end
          else
          if BAnd(my_bits_high,$00100000) <> 0 then { if plat[E7] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00080000);
              opp_bits_high := BXOr(opp_bits_high,$00080000);
            end;
        end;
    if (nbPrise <> 0)
      then
        begin
          diffPions := succ(diffPions+nbPrise);
          ModifPlatBitboard_c7 := BXOr(vecteurParite,$00000004);
          my_bits_high := BOr(my_bits_high,$00040000);  { place the disc in C7 }
          g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
          g_my_bits_high  := opp_bits_high;
          g_opp_bits_low  := my_bits_low;
          g_opp_bits_high := my_bits_high;
        end
      else
        ModifPlatBitboard_c7 := vecteurParite;
  end;
end;



function ModifPlatBitboard_d7(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32;
                           var resultat : bitboard; var diffPions : SInt32) : SInt32;
var nbPrise : SInt32;
begin
  with resultat do
    begin
      nbPrise := 0;
      if BAnd(opp_bits_high,$00040000) <> 0 then { if plat[C7] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00020000) <> 0 then { if plat[B7] = adversaire then }
            begin
              if BAnd(my_bits_high,$00010000) <> 0 then { if plat[A7] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$00060000);
                  opp_bits_high := BXOr(opp_bits_high,$00060000);
                end;
            end
          else
          if BAnd(my_bits_high,$00020000) <> 0 then { if plat[B7] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00040000);
              opp_bits_high := BXOr(opp_bits_high,$00040000);
            end;
        end;
      if BAnd(opp_bits_high,$00000400) <> 0 then { if plat[C6] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00000002) <> 0 then { if plat[B5] = adversaire then }
            begin
              if BAnd(my_bits_low,$01000000) <> 0 then { if plat[A4] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$00000402);
                  opp_bits_high := BXOr(opp_bits_high,$00000402);
                end;
            end
          else
          if BAnd(my_bits_high,$00000002) <> 0 then { if plat[B5] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00000400);
              opp_bits_high := BXOr(opp_bits_high,$00000400);
            end;
        end;
      if BAnd(opp_bits_high,$00000800) <> 0 then { if plat[D6] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00000008) <> 0 then { if plat[D5] = adversaire then }
            begin
              if BAnd(opp_bits_low,$08000000) <> 0 then { if plat[D4] = adversaire then }
                begin
                  if BAnd(opp_bits_low,$00080000) <> 0 then { if plat[D3] = adversaire then }
                    begin
                      if BAnd(opp_bits_low,$00000800) <> 0 then { if plat[D2] = adversaire then }
                        begin
                          if BAnd(my_bits_low,$00000008) <> 0 then { if plat[D1] = couleur then }
                            begin
                              nbPrise := nbPrise + 10;
                              my_bits_low := BOr(my_bits_low,$08080800);
                              opp_bits_low := BXOr(opp_bits_low,$08080800);
                              my_bits_high := BOr(my_bits_high,$00000808);
                              opp_bits_high := BXOr(opp_bits_high,$00000808);
                            end;
                        end
                      else
                      if BAnd(my_bits_low,$00000800) <> 0 then { if plat[D2] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$08080000);
                          opp_bits_low := BXOr(opp_bits_low,$08080000);
                          my_bits_high := BOr(my_bits_high,$00000808);
                          opp_bits_high := BXOr(opp_bits_high,$00000808);
                        end;
                    end
                  else
                  if BAnd(my_bits_low,$00080000) <> 0 then { if plat[D3] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$08000000);
                      opp_bits_low := BXOr(opp_bits_low,$08000000);
                      my_bits_high := BOr(my_bits_high,$00000808);
                      opp_bits_high := BXOr(opp_bits_high,$00000808);
                    end;
                end
              else
              if BAnd(my_bits_low,$08000000) <> 0 then { if plat[D4] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$00000808);
                  opp_bits_high := BXOr(opp_bits_high,$00000808);
                end;
            end
          else
          if BAnd(my_bits_high,$00000008) <> 0 then { if plat[D5] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00000800);
              opp_bits_high := BXOr(opp_bits_high,$00000800);
            end;
        end;
      if BAnd(opp_bits_high,$00001000) <> 0 then { if plat[E6] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00000020) <> 0 then { if plat[F5] = adversaire then }
            begin
              if BAnd(opp_bits_low,$40000000) <> 0 then { if plat[G4] = adversaire then }
                begin
                  if BAnd(my_bits_low,$00800000) <> 0 then { if plat[H3] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$40000000);
                      opp_bits_low := BXOr(opp_bits_low,$40000000);
                      my_bits_high := BOr(my_bits_high,$00001020);
                      opp_bits_high := BXOr(opp_bits_high,$00001020);
                    end;
                end
              else
              if BAnd(my_bits_low,$40000000) <> 0 then { if plat[G4] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$00001020);
                  opp_bits_high := BXOr(opp_bits_high,$00001020);
                end;
            end
          else
          if BAnd(my_bits_high,$00000020) <> 0 then { if plat[F5] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00001000);
              opp_bits_high := BXOr(opp_bits_high,$00001000);
            end;
        end;
      if BAnd(opp_bits_high,$00100000) <> 0 then { if plat[E7] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00200000) <> 0 then { if plat[F7] = adversaire then }
            begin
              if BAnd(opp_bits_high,$00400000) <> 0 then { if plat[G7] = adversaire then }
                begin
                  if BAnd(my_bits_high,$00800000) <> 0 then { if plat[H7] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_high := BOr(my_bits_high,$00700000);
                      opp_bits_high := BXOr(opp_bits_high,$00700000);
                    end;
                end
              else
              if BAnd(my_bits_high,$00400000) <> 0 then { if plat[G7] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$00300000);
                  opp_bits_high := BXOr(opp_bits_high,$00300000);
                end;
            end
          else
          if BAnd(my_bits_high,$00200000) <> 0 then { if plat[F7] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00100000);
              opp_bits_high := BXOr(opp_bits_high,$00100000);
            end;
        end;
    if (nbPrise <> 0)
      then
        begin
          diffPions := succ(diffPions+nbPrise);
          ModifPlatBitboard_d7 := BXOr(vecteurParite,$00000004);
          my_bits_high := BOr(my_bits_high,$00080000);  { place the disc in D7 }
          g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
          g_my_bits_high  := opp_bits_high;
          g_opp_bits_low  := my_bits_low;
          g_opp_bits_high := my_bits_high;
        end
      else
        ModifPlatBitboard_d7 := vecteurParite;
  end;
end;



function ModifPlatBitboard_e7(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32;
                           var resultat : bitboard; var diffPions : SInt32) : SInt32;
var nbPrise : SInt32;
begin
  with resultat do
    begin
      nbPrise := 0;
      if BAnd(opp_bits_high,$00080000) <> 0 then { if plat[D7] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00040000) <> 0 then { if plat[C7] = adversaire then }
            begin
              if BAnd(opp_bits_high,$00020000) <> 0 then { if plat[B7] = adversaire then }
                begin
                  if BAnd(my_bits_high,$00010000) <> 0 then { if plat[A7] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_high := BOr(my_bits_high,$000E0000);
                      opp_bits_high := BXOr(opp_bits_high,$000E0000);
                    end;
                end
              else
              if BAnd(my_bits_high,$00020000) <> 0 then { if plat[B7] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$000C0000);
                  opp_bits_high := BXOr(opp_bits_high,$000C0000);
                end;
            end
          else
          if BAnd(my_bits_high,$00040000) <> 0 then { if plat[C7] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00080000);
              opp_bits_high := BXOr(opp_bits_high,$00080000);
            end;
        end;
      if BAnd(opp_bits_high,$00000800) <> 0 then { if plat[D6] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00000004) <> 0 then { if plat[C5] = adversaire then }
            begin
              if BAnd(opp_bits_low,$02000000) <> 0 then { if plat[B4] = adversaire then }
                begin
                  if BAnd(my_bits_low,$00010000) <> 0 then { if plat[A3] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$02000000);
                      opp_bits_low := BXOr(opp_bits_low,$02000000);
                      my_bits_high := BOr(my_bits_high,$00000804);
                      opp_bits_high := BXOr(opp_bits_high,$00000804);
                    end;
                end
              else
              if BAnd(my_bits_low,$02000000) <> 0 then { if plat[B4] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$00000804);
                  opp_bits_high := BXOr(opp_bits_high,$00000804);
                end;
            end
          else
          if BAnd(my_bits_high,$00000004) <> 0 then { if plat[C5] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00000800);
              opp_bits_high := BXOr(opp_bits_high,$00000800);
            end;
        end;
      if BAnd(opp_bits_high,$00001000) <> 0 then { if plat[E6] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00000010) <> 0 then { if plat[E5] = adversaire then }
            begin
              if BAnd(opp_bits_low,$10000000) <> 0 then { if plat[E4] = adversaire then }
                begin
                  if BAnd(opp_bits_low,$00100000) <> 0 then { if plat[E3] = adversaire then }
                    begin
                      if BAnd(opp_bits_low,$00001000) <> 0 then { if plat[E2] = adversaire then }
                        begin
                          if BAnd(my_bits_low,$00000010) <> 0 then { if plat[E1] = couleur then }
                            begin
                              nbPrise := nbPrise + 10;
                              my_bits_low := BOr(my_bits_low,$10101000);
                              opp_bits_low := BXOr(opp_bits_low,$10101000);
                              my_bits_high := BOr(my_bits_high,$00001010);
                              opp_bits_high := BXOr(opp_bits_high,$00001010);
                            end;
                        end
                      else
                      if BAnd(my_bits_low,$00001000) <> 0 then { if plat[E2] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$10100000);
                          opp_bits_low := BXOr(opp_bits_low,$10100000);
                          my_bits_high := BOr(my_bits_high,$00001010);
                          opp_bits_high := BXOr(opp_bits_high,$00001010);
                        end;
                    end
                  else
                  if BAnd(my_bits_low,$00100000) <> 0 then { if plat[E3] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$10000000);
                      opp_bits_low := BXOr(opp_bits_low,$10000000);
                      my_bits_high := BOr(my_bits_high,$00001010);
                      opp_bits_high := BXOr(opp_bits_high,$00001010);
                    end;
                end
              else
              if BAnd(my_bits_low,$10000000) <> 0 then { if plat[E4] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$00001010);
                  opp_bits_high := BXOr(opp_bits_high,$00001010);
                end;
            end
          else
          if BAnd(my_bits_high,$00000010) <> 0 then { if plat[E5] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00001000);
              opp_bits_high := BXOr(opp_bits_high,$00001000);
            end;
        end;
      if BAnd(opp_bits_high,$00002000) <> 0 then { if plat[F6] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00000040) <> 0 then { if plat[G5] = adversaire then }
            begin
              if BAnd(my_bits_low,$80000000) <> 0 then { if plat[H4] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$00002040);
                  opp_bits_high := BXOr(opp_bits_high,$00002040);
                end;
            end
          else
          if BAnd(my_bits_high,$00000040) <> 0 then { if plat[G5] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00002000);
              opp_bits_high := BXOr(opp_bits_high,$00002000);
            end;
        end;
      if BAnd(opp_bits_high,$00200000) <> 0 then { if plat[F7] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00400000) <> 0 then { if plat[G7] = adversaire then }
            begin
              if BAnd(my_bits_high,$00800000) <> 0 then { if plat[H7] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$00600000);
                  opp_bits_high := BXOr(opp_bits_high,$00600000);
                end;
            end
          else
          if BAnd(my_bits_high,$00400000) <> 0 then { if plat[G7] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00200000);
              opp_bits_high := BXOr(opp_bits_high,$00200000);
            end;
        end;
    if (nbPrise <> 0)
      then
        begin
          diffPions := succ(diffPions+nbPrise);
          ModifPlatBitboard_e7 := BXOr(vecteurParite,$00000008);
          my_bits_high := BOr(my_bits_high,$00100000);  { place the disc in E7 }
          g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
          g_my_bits_high  := opp_bits_high;
          g_opp_bits_low  := my_bits_low;
          g_opp_bits_high := my_bits_high;
        end
      else
        ModifPlatBitboard_e7 := vecteurParite;
  end;
end;



function ModifPlatBitboard_f7(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32;
                           var resultat : bitboard; var diffPions : SInt32) : SInt32;
var nbPrise : SInt32;
begin
  with resultat do
    begin
      nbPrise := 0;
      if BAnd(opp_bits_high,$00100000) <> 0 then { if plat[E7] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00080000) <> 0 then { if plat[D7] = adversaire then }
            begin
              if BAnd(opp_bits_high,$00040000) <> 0 then { if plat[C7] = adversaire then }
                begin
                  if BAnd(opp_bits_high,$00020000) <> 0 then { if plat[B7] = adversaire then }
                    begin
                      if BAnd(my_bits_high,$00010000) <> 0 then { if plat[A7] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_high := BOr(my_bits_high,$001E0000);
                          opp_bits_high := BXOr(opp_bits_high,$001E0000);
                        end;
                    end
                  else
                  if BAnd(my_bits_high,$00020000) <> 0 then { if plat[B7] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_high := BOr(my_bits_high,$001C0000);
                      opp_bits_high := BXOr(opp_bits_high,$001C0000);
                    end;
                end
              else
              if BAnd(my_bits_high,$00040000) <> 0 then { if plat[C7] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$00180000);
                  opp_bits_high := BXOr(opp_bits_high,$00180000);
                end;
            end
          else
          if BAnd(my_bits_high,$00080000) <> 0 then { if plat[D7] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00100000);
              opp_bits_high := BXOr(opp_bits_high,$00100000);
            end;
        end;
      if BAnd(opp_bits_high,$00001000) <> 0 then { if plat[E6] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00000008) <> 0 then { if plat[D5] = adversaire then }
            begin
              if BAnd(opp_bits_low,$04000000) <> 0 then { if plat[C4] = adversaire then }
                begin
                  if BAnd(opp_bits_low,$00020000) <> 0 then { if plat[B3] = adversaire then }
                    begin
                      if BAnd(my_bits_low,$00000100) <> 0 then { if plat[A2] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$04020000);
                          opp_bits_low := BXOr(opp_bits_low,$04020000);
                          my_bits_high := BOr(my_bits_high,$00001008);
                          opp_bits_high := BXOr(opp_bits_high,$00001008);
                        end;
                    end
                  else
                  if BAnd(my_bits_low,$00020000) <> 0 then { if plat[B3] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$04000000);
                      opp_bits_low := BXOr(opp_bits_low,$04000000);
                      my_bits_high := BOr(my_bits_high,$00001008);
                      opp_bits_high := BXOr(opp_bits_high,$00001008);
                    end;
                end
              else
              if BAnd(my_bits_low,$04000000) <> 0 then { if plat[C4] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$00001008);
                  opp_bits_high := BXOr(opp_bits_high,$00001008);
                end;
            end
          else
          if BAnd(my_bits_high,$00000008) <> 0 then { if plat[D5] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00001000);
              opp_bits_high := BXOr(opp_bits_high,$00001000);
            end;
        end;
      if BAnd(opp_bits_high,$00002000) <> 0 then { if plat[F6] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00000020) <> 0 then { if plat[F5] = adversaire then }
            begin
              if BAnd(opp_bits_low,$20000000) <> 0 then { if plat[F4] = adversaire then }
                begin
                  if BAnd(opp_bits_low,$00200000) <> 0 then { if plat[F3] = adversaire then }
                    begin
                      if BAnd(opp_bits_low,$00002000) <> 0 then { if plat[F2] = adversaire then }
                        begin
                          if BAnd(my_bits_low,$00000020) <> 0 then { if plat[F1] = couleur then }
                            begin
                              nbPrise := nbPrise + 10;
                              my_bits_low := BOr(my_bits_low,$20202000);
                              opp_bits_low := BXOr(opp_bits_low,$20202000);
                              my_bits_high := BOr(my_bits_high,$00002020);
                              opp_bits_high := BXOr(opp_bits_high,$00002020);
                            end;
                        end
                      else
                      if BAnd(my_bits_low,$00002000) <> 0 then { if plat[F2] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$20200000);
                          opp_bits_low := BXOr(opp_bits_low,$20200000);
                          my_bits_high := BOr(my_bits_high,$00002020);
                          opp_bits_high := BXOr(opp_bits_high,$00002020);
                        end;
                    end
                  else
                  if BAnd(my_bits_low,$00200000) <> 0 then { if plat[F3] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$20000000);
                      opp_bits_low := BXOr(opp_bits_low,$20000000);
                      my_bits_high := BOr(my_bits_high,$00002020);
                      opp_bits_high := BXOr(opp_bits_high,$00002020);
                    end;
                end
              else
              if BAnd(my_bits_low,$20000000) <> 0 then { if plat[F4] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$00002020);
                  opp_bits_high := BXOr(opp_bits_high,$00002020);
                end;
            end
          else
          if BAnd(my_bits_high,$00000020) <> 0 then { if plat[F5] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00002000);
              opp_bits_high := BXOr(opp_bits_high,$00002000);
            end;
        end;
      if BAnd(opp_bits_high,$00004000) <> 0 then { if plat[G6] = adversaire then }
        begin
          if BAnd(my_bits_high,$00000080) <> 0 then { if plat[H5] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00004000);
              opp_bits_high := BXOr(opp_bits_high,$00004000);
            end;
        end;
      if BAnd(opp_bits_high,$00400000) <> 0 then { if plat[G7] = adversaire then }
        begin
          if BAnd(my_bits_high,$00800000) <> 0 then { if plat[H7] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00400000);
              opp_bits_high := BXOr(opp_bits_high,$00400000);
            end;
        end;
    if (nbPrise <> 0)
      then
        begin
          diffPions := succ(diffPions+nbPrise);
          ModifPlatBitboard_f7 := BXOr(vecteurParite,$00000008);
          my_bits_high := BOr(my_bits_high,$00200000);  { place the disc in F7 }
          g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
          g_my_bits_high  := opp_bits_high;
          g_opp_bits_low  := my_bits_low;
          g_opp_bits_high := my_bits_high;
        end
      else
        ModifPlatBitboard_f7 := vecteurParite;
  end;
end;



function ModifPlatBitboard_g7(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32;
                           var resultat : bitboard; var diffPions : SInt32) : SInt32;
var nbPrise : SInt32;
begin
  with resultat do
    begin
      nbPrise := 0;
      if BAnd(opp_bits_high,$00200000) <> 0 then { if plat[F7] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00100000) <> 0 then { if plat[E7] = adversaire then }
            begin
              if BAnd(opp_bits_high,$00080000) <> 0 then { if plat[D7] = adversaire then }
                begin
                  if BAnd(opp_bits_high,$00040000) <> 0 then { if plat[C7] = adversaire then }
                    begin
                      if BAnd(opp_bits_high,$00020000) <> 0 then { if plat[B7] = adversaire then }
                        begin
                          if BAnd(my_bits_high,$00010000) <> 0 then { if plat[A7] = couleur then }
                            begin
                              nbPrise := nbPrise + 10;
                              my_bits_high := BOr(my_bits_high,$003E0000);
                              opp_bits_high := BXOr(opp_bits_high,$003E0000);
                            end;
                        end
                      else
                      if BAnd(my_bits_high,$00020000) <> 0 then { if plat[B7] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_high := BOr(my_bits_high,$003C0000);
                          opp_bits_high := BXOr(opp_bits_high,$003C0000);
                        end;
                    end
                  else
                  if BAnd(my_bits_high,$00040000) <> 0 then { if plat[C7] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_high := BOr(my_bits_high,$00380000);
                      opp_bits_high := BXOr(opp_bits_high,$00380000);
                    end;
                end
              else
              if BAnd(my_bits_high,$00080000) <> 0 then { if plat[D7] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$00300000);
                  opp_bits_high := BXOr(opp_bits_high,$00300000);
                end;
            end
          else
          if BAnd(my_bits_high,$00100000) <> 0 then { if plat[E7] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00200000);
              opp_bits_high := BXOr(opp_bits_high,$00200000);
            end;
        end;
      if BAnd(opp_bits_high,$00002000) <> 0 then { if plat[F6] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00000010) <> 0 then { if plat[E5] = adversaire then }
            begin
              if BAnd(opp_bits_low,$08000000) <> 0 then { if plat[D4] = adversaire then }
                begin
                  if BAnd(opp_bits_low,$00040000) <> 0 then { if plat[C3] = adversaire then }
                    begin
                      if BAnd(opp_bits_low,$00000200) <> 0 then { if plat[B2] = adversaire then }
                        begin
                          if BAnd(my_bits_low,$00000001) <> 0 then { if plat[A1] = couleur then }
                            begin
                              nbPrise := nbPrise + 10;
                              my_bits_low := BOr(my_bits_low,$08040200);
                              opp_bits_low := BXOr(opp_bits_low,$08040200);
                              my_bits_high := BOr(my_bits_high,$00002010);
                              opp_bits_high := BXOr(opp_bits_high,$00002010);
                            end;
                        end
                      else
                      if BAnd(my_bits_low,$00000200) <> 0 then { if plat[B2] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$08040000);
                          opp_bits_low := BXOr(opp_bits_low,$08040000);
                          my_bits_high := BOr(my_bits_high,$00002010);
                          opp_bits_high := BXOr(opp_bits_high,$00002010);
                        end;
                    end
                  else
                  if BAnd(my_bits_low,$00040000) <> 0 then { if plat[C3] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$08000000);
                      opp_bits_low := BXOr(opp_bits_low,$08000000);
                      my_bits_high := BOr(my_bits_high,$00002010);
                      opp_bits_high := BXOr(opp_bits_high,$00002010);
                    end;
                end
              else
              if BAnd(my_bits_low,$08000000) <> 0 then { if plat[D4] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$00002010);
                  opp_bits_high := BXOr(opp_bits_high,$00002010);
                end;
            end
          else
          if BAnd(my_bits_high,$00000010) <> 0 then { if plat[E5] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00002000);
              opp_bits_high := BXOr(opp_bits_high,$00002000);
            end;
        end;
      if BAnd(opp_bits_high,$00004000) <> 0 then { if plat[G6] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00000040) <> 0 then { if plat[G5] = adversaire then }
            begin
              if BAnd(opp_bits_low,$40000000) <> 0 then { if plat[G4] = adversaire then }
                begin
                  if BAnd(opp_bits_low,$00400000) <> 0 then { if plat[G3] = adversaire then }
                    begin
                      if BAnd(opp_bits_low,$00004000) <> 0 then { if plat[G2] = adversaire then }
                        begin
                          if BAnd(my_bits_low,$00000040) <> 0 then { if plat[G1] = couleur then }
                            begin
                              nbPrise := nbPrise + 10;
                              my_bits_low := BOr(my_bits_low,$40404000);
                              opp_bits_low := BXOr(opp_bits_low,$40404000);
                              my_bits_high := BOr(my_bits_high,$00004040);
                              opp_bits_high := BXOr(opp_bits_high,$00004040);
                            end;
                        end
                      else
                      if BAnd(my_bits_low,$00004000) <> 0 then { if plat[G2] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$40400000);
                          opp_bits_low := BXOr(opp_bits_low,$40400000);
                          my_bits_high := BOr(my_bits_high,$00004040);
                          opp_bits_high := BXOr(opp_bits_high,$00004040);
                        end;
                    end
                  else
                  if BAnd(my_bits_low,$00400000) <> 0 then { if plat[G3] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$40000000);
                      opp_bits_low := BXOr(opp_bits_low,$40000000);
                      my_bits_high := BOr(my_bits_high,$00004040);
                      opp_bits_high := BXOr(opp_bits_high,$00004040);
                    end;
                end
              else
              if BAnd(my_bits_low,$40000000) <> 0 then { if plat[G4] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$00004040);
                  opp_bits_high := BXOr(opp_bits_high,$00004040);
                end;
            end
          else
          if BAnd(my_bits_high,$00000040) <> 0 then { if plat[G5] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00004000);
              opp_bits_high := BXOr(opp_bits_high,$00004000);
            end;
        end;
    if (nbPrise <> 0)
      then
        begin
          diffPions := succ(diffPions+nbPrise);
          ModifPlatBitboard_g7 := BXOr(vecteurParite,$00000008);
          my_bits_high := BOr(my_bits_high,$00400000);  { place the disc in G7 }
          g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
          g_my_bits_high  := opp_bits_high;
          g_opp_bits_low  := my_bits_low;
          g_opp_bits_high := my_bits_high;
        end
      else
        ModifPlatBitboard_g7 := vecteurParite;
  end;
end;



function ModifPlatBitboard_h7(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32;
                           var resultat : bitboard; var diffPions : SInt32) : SInt32;
var nbPrise : SInt32;
begin
  with resultat do
    begin
      nbPrise := 0;
      if BAnd(opp_bits_high,$00400000) <> 0 then { if plat[G7] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00200000) <> 0 then { if plat[F7] = adversaire then }
            begin
              if BAnd(opp_bits_high,$00100000) <> 0 then { if plat[E7] = adversaire then }
                begin
                  if BAnd(opp_bits_high,$00080000) <> 0 then { if plat[D7] = adversaire then }
                    begin
                      if BAnd(opp_bits_high,$00040000) <> 0 then { if plat[C7] = adversaire then }
                        begin
                          if BAnd(opp_bits_high,$00020000) <> 0 then { if plat[B7] = adversaire then }
                            begin
                              if BAnd(my_bits_high,$00010000) <> 0 then { if plat[A7] = couleur then }
                                begin
                                  nbPrise := nbPrise + 12;
                                  my_bits_high := BOr(my_bits_high,$007E0000);
                                  opp_bits_high := BXOr(opp_bits_high,$007E0000);
                                end;
                            end
                          else
                          if BAnd(my_bits_high,$00020000) <> 0 then { if plat[B7] = couleur then }
                            begin
                              nbPrise := nbPrise + 10;
                              my_bits_high := BOr(my_bits_high,$007C0000);
                              opp_bits_high := BXOr(opp_bits_high,$007C0000);
                            end;
                        end
                      else
                      if BAnd(my_bits_high,$00040000) <> 0 then { if plat[C7] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_high := BOr(my_bits_high,$00780000);
                          opp_bits_high := BXOr(opp_bits_high,$00780000);
                        end;
                    end
                  else
                  if BAnd(my_bits_high,$00080000) <> 0 then { if plat[D7] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_high := BOr(my_bits_high,$00700000);
                      opp_bits_high := BXOr(opp_bits_high,$00700000);
                    end;
                end
              else
              if BAnd(my_bits_high,$00100000) <> 0 then { if plat[E7] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$00600000);
                  opp_bits_high := BXOr(opp_bits_high,$00600000);
                end;
            end
          else
          if BAnd(my_bits_high,$00200000) <> 0 then { if plat[F7] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00400000);
              opp_bits_high := BXOr(opp_bits_high,$00400000);
            end;
        end;
      if BAnd(opp_bits_high,$00004000) <> 0 then { if plat[G6] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00000020) <> 0 then { if plat[F5] = adversaire then }
            begin
              if BAnd(opp_bits_low,$10000000) <> 0 then { if plat[E4] = adversaire then }
                begin
                  if BAnd(opp_bits_low,$00080000) <> 0 then { if plat[D3] = adversaire then }
                    begin
                      if BAnd(opp_bits_low,$00000400) <> 0 then { if plat[C2] = adversaire then }
                        begin
                          if BAnd(my_bits_low,$00000002) <> 0 then { if plat[B1] = couleur then }
                            begin
                              nbPrise := nbPrise + 10;
                              my_bits_low := BOr(my_bits_low,$10080400);
                              opp_bits_low := BXOr(opp_bits_low,$10080400);
                              my_bits_high := BOr(my_bits_high,$00004020);
                              opp_bits_high := BXOr(opp_bits_high,$00004020);
                            end;
                        end
                      else
                      if BAnd(my_bits_low,$00000400) <> 0 then { if plat[C2] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$10080000);
                          opp_bits_low := BXOr(opp_bits_low,$10080000);
                          my_bits_high := BOr(my_bits_high,$00004020);
                          opp_bits_high := BXOr(opp_bits_high,$00004020);
                        end;
                    end
                  else
                  if BAnd(my_bits_low,$00080000) <> 0 then { if plat[D3] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$10000000);
                      opp_bits_low := BXOr(opp_bits_low,$10000000);
                      my_bits_high := BOr(my_bits_high,$00004020);
                      opp_bits_high := BXOr(opp_bits_high,$00004020);
                    end;
                end
              else
              if BAnd(my_bits_low,$10000000) <> 0 then { if plat[E4] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$00004020);
                  opp_bits_high := BXOr(opp_bits_high,$00004020);
                end;
            end
          else
          if BAnd(my_bits_high,$00000020) <> 0 then { if plat[F5] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00004000);
              opp_bits_high := BXOr(opp_bits_high,$00004000);
            end;
        end;
      if BAnd(opp_bits_high,$00008000) <> 0 then { if plat[H6] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00000080) <> 0 then { if plat[H5] = adversaire then }
            begin
              if BAnd(opp_bits_low,$80000000) <> 0 then { if plat[H4] = adversaire then }
                begin
                  if BAnd(opp_bits_low,$00800000) <> 0 then { if plat[H3] = adversaire then }
                    begin
                      if BAnd(opp_bits_low,$00008000) <> 0 then { if plat[H2] = adversaire then }
                        begin
                          if BAnd(my_bits_low,$00000080) <> 0 then { if plat[H1] = couleur then }
                            begin
                              nbPrise := nbPrise + 10;
                              my_bits_low := BOr(my_bits_low,$80808000);
                              opp_bits_low := BXOr(opp_bits_low,$80808000);
                              my_bits_high := BOr(my_bits_high,$00008080);
                              opp_bits_high := BXOr(opp_bits_high,$00008080);
                            end;
                        end
                      else
                      if BAnd(my_bits_low,$00008000) <> 0 then { if plat[H2] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$80800000);
                          opp_bits_low := BXOr(opp_bits_low,$80800000);
                          my_bits_high := BOr(my_bits_high,$00008080);
                          opp_bits_high := BXOr(opp_bits_high,$00008080);
                        end;
                    end
                  else
                  if BAnd(my_bits_low,$00800000) <> 0 then { if plat[H3] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_low := BOr(my_bits_low,$80000000);
                      opp_bits_low := BXOr(opp_bits_low,$80000000);
                      my_bits_high := BOr(my_bits_high,$00008080);
                      opp_bits_high := BXOr(opp_bits_high,$00008080);
                    end;
                end
              else
              if BAnd(my_bits_low,$80000000) <> 0 then { if plat[H4] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$00008080);
                  opp_bits_high := BXOr(opp_bits_high,$00008080);
                end;
            end
          else
          if BAnd(my_bits_high,$00000080) <> 0 then { if plat[H5] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00008000);
              opp_bits_high := BXOr(opp_bits_high,$00008000);
            end;
        end;
    if (nbPrise <> 0)
      then
        begin
          diffPions := succ(diffPions+nbPrise);
          ModifPlatBitboard_h7 := BXOr(vecteurParite,$00000008);
          my_bits_high := BOr(my_bits_high,$00800000);  { place the disc in H7 }
          g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
          g_my_bits_high  := opp_bits_high;
          g_opp_bits_low  := my_bits_low;
          g_opp_bits_high := my_bits_high;
        end
      else
        ModifPlatBitboard_h7 := vecteurParite;
  end;
end;



function ModifPlatBitboard_a8(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32;
                           var resultat : bitboard; var diffPions : SInt32) : SInt32;
var nbPrise : SInt32;
begin
  with resultat do
    begin
      nbPrise := 0;
      if BAnd(opp_bits_high,$00010000) <> 0 then { if plat[A7] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00000100) <> 0 then { if plat[A6] = adversaire then }
            begin
              if BAnd(opp_bits_high,$00000001) <> 0 then { if plat[A5] = adversaire then }
                begin
                  if BAnd(opp_bits_low,$01000000) <> 0 then { if plat[A4] = adversaire then }
                    begin
                      if BAnd(opp_bits_low,$00010000) <> 0 then { if plat[A3] = adversaire then }
                        begin
                          if BAnd(opp_bits_low,$00000100) <> 0 then { if plat[A2] = adversaire then }
                            begin
                              if BAnd(my_bits_low,$00000001) <> 0 then { if plat[A1] = couleur then }
                                begin
                                  nbPrise := nbPrise + 12;
                                  my_bits_low := BOr(my_bits_low,$01010100);
                                  opp_bits_low := BXOr(opp_bits_low,$01010100);
                                  my_bits_high := BOr(my_bits_high,$00010101);
                                  opp_bits_high := BXOr(opp_bits_high,$00010101);
                                end;
                            end
                          else
                          if BAnd(my_bits_low,$00000100) <> 0 then { if plat[A2] = couleur then }
                            begin
                              nbPrise := nbPrise + 10;
                              my_bits_low := BOr(my_bits_low,$01010000);
                              opp_bits_low := BXOr(opp_bits_low,$01010000);
                              my_bits_high := BOr(my_bits_high,$00010101);
                              opp_bits_high := BXOr(opp_bits_high,$00010101);
                            end;
                        end
                      else
                      if BAnd(my_bits_low,$00010000) <> 0 then { if plat[A3] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$01000000);
                          opp_bits_low := BXOr(opp_bits_low,$01000000);
                          my_bits_high := BOr(my_bits_high,$00010101);
                          opp_bits_high := BXOr(opp_bits_high,$00010101);
                        end;
                    end
                  else
                  if BAnd(my_bits_low,$01000000) <> 0 then { if plat[A4] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_high := BOr(my_bits_high,$00010101);
                      opp_bits_high := BXOr(opp_bits_high,$00010101);
                    end;
                end
              else
              if BAnd(my_bits_high,$00000001) <> 0 then { if plat[A5] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$00010100);
                  opp_bits_high := BXOr(opp_bits_high,$00010100);
                end;
            end
          else
          if BAnd(my_bits_high,$00000100) <> 0 then { if plat[A6] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00010000);
              opp_bits_high := BXOr(opp_bits_high,$00010000);
            end;
        end;
      if BAnd(opp_bits_high,$00020000) <> 0 then { if plat[B7] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00000400) <> 0 then { if plat[C6] = adversaire then }
            begin
              if BAnd(opp_bits_high,$00000008) <> 0 then { if plat[D5] = adversaire then }
                begin
                  if BAnd(opp_bits_low,$10000000) <> 0 then { if plat[E4] = adversaire then }
                    begin
                      if BAnd(opp_bits_low,$00200000) <> 0 then { if plat[F3] = adversaire then }
                        begin
                          if BAnd(opp_bits_low,$00004000) <> 0 then { if plat[G2] = adversaire then }
                            begin
                              if BAnd(my_bits_low,$00000080) <> 0 then { if plat[H1] = couleur then }
                                begin
                                  nbPrise := nbPrise + 12;
                                  my_bits_low := BOr(my_bits_low,$10204000);
                                  opp_bits_low := BXOr(opp_bits_low,$10204000);
                                  my_bits_high := BOr(my_bits_high,$00020408);
                                  opp_bits_high := BXOr(opp_bits_high,$00020408);
                                end;
                            end
                          else
                          if BAnd(my_bits_low,$00004000) <> 0 then { if plat[G2] = couleur then }
                            begin
                              nbPrise := nbPrise + 10;
                              my_bits_low := BOr(my_bits_low,$10200000);
                              opp_bits_low := BXOr(opp_bits_low,$10200000);
                              my_bits_high := BOr(my_bits_high,$00020408);
                              opp_bits_high := BXOr(opp_bits_high,$00020408);
                            end;
                        end
                      else
                      if BAnd(my_bits_low,$00200000) <> 0 then { if plat[F3] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$10000000);
                          opp_bits_low := BXOr(opp_bits_low,$10000000);
                          my_bits_high := BOr(my_bits_high,$00020408);
                          opp_bits_high := BXOr(opp_bits_high,$00020408);
                        end;
                    end
                  else
                  if BAnd(my_bits_low,$10000000) <> 0 then { if plat[E4] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_high := BOr(my_bits_high,$00020408);
                      opp_bits_high := BXOr(opp_bits_high,$00020408);
                    end;
                end
              else
              if BAnd(my_bits_high,$00000008) <> 0 then { if plat[D5] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$00020400);
                  opp_bits_high := BXOr(opp_bits_high,$00020400);
                end;
            end
          else
          if BAnd(my_bits_high,$00000400) <> 0 then { if plat[C6] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00020000);
              opp_bits_high := BXOr(opp_bits_high,$00020000);
            end;
        end;
      if BAnd(opp_bits_high,$02000000) <> 0 then { if plat[B8] = adversaire then }
        begin
          if BAnd(opp_bits_high,$04000000) <> 0 then { if plat[C8] = adversaire then }
            begin
              if BAnd(opp_bits_high,$08000000) <> 0 then { if plat[D8] = adversaire then }
                begin
                  if BAnd(opp_bits_high,$10000000) <> 0 then { if plat[E8] = adversaire then }
                    begin
                      if BAnd(opp_bits_high,$20000000) <> 0 then { if plat[F8] = adversaire then }
                        begin
                          if BAnd(opp_bits_high,$40000000) <> 0 then { if plat[G8] = adversaire then }
                            begin
                              if BAnd(my_bits_high,$80000000) <> 0 then { if plat[H8] = couleur then }
                                begin
                                  nbPrise := nbPrise + 12;
                                  my_bits_high := BOr(my_bits_high,$7E000000);
                                  opp_bits_high := BXOr(opp_bits_high,$7E000000);
                                end;
                            end
                          else
                          if BAnd(my_bits_high,$40000000) <> 0 then { if plat[G8] = couleur then }
                            begin
                              nbPrise := nbPrise + 10;
                              my_bits_high := BOr(my_bits_high,$3E000000);
                              opp_bits_high := BXOr(opp_bits_high,$3E000000);
                            end;
                        end
                      else
                      if BAnd(my_bits_high,$20000000) <> 0 then { if plat[F8] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_high := BOr(my_bits_high,$1E000000);
                          opp_bits_high := BXOr(opp_bits_high,$1E000000);
                        end;
                    end
                  else
                  if BAnd(my_bits_high,$10000000) <> 0 then { if plat[E8] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_high := BOr(my_bits_high,$0E000000);
                      opp_bits_high := BXOr(opp_bits_high,$0E000000);
                    end;
                end
              else
              if BAnd(my_bits_high,$08000000) <> 0 then { if plat[D8] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$06000000);
                  opp_bits_high := BXOr(opp_bits_high,$06000000);
                end;
            end
          else
          if BAnd(my_bits_high,$04000000) <> 0 then { if plat[C8] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$02000000);
              opp_bits_high := BXOr(opp_bits_high,$02000000);
            end;
        end;
    if (nbPrise <> 0)
      then
        begin
          diffPions := succ(diffPions+nbPrise);
          ModifPlatBitboard_a8 := BXOr(vecteurParite,$00000004);
          my_bits_high := BOr(my_bits_high,$01000000);  { place the disc in A8 }
          g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
          g_my_bits_high  := opp_bits_high;
          g_opp_bits_low  := my_bits_low;
          g_opp_bits_high := my_bits_high;
        end
      else
        ModifPlatBitboard_a8 := vecteurParite;
  end;
end;



function ModifPlatBitboard_b8(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32;
                           var resultat : bitboard; var diffPions : SInt32) : SInt32;
var nbPrise : SInt32;
begin
  with resultat do
    begin
      nbPrise := 0;
      if BAnd(opp_bits_high,$00020000) <> 0 then { if plat[B7] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00000200) <> 0 then { if plat[B6] = adversaire then }
            begin
              if BAnd(opp_bits_high,$00000002) <> 0 then { if plat[B5] = adversaire then }
                begin
                  if BAnd(opp_bits_low,$02000000) <> 0 then { if plat[B4] = adversaire then }
                    begin
                      if BAnd(opp_bits_low,$00020000) <> 0 then { if plat[B3] = adversaire then }
                        begin
                          if BAnd(opp_bits_low,$00000200) <> 0 then { if plat[B2] = adversaire then }
                            begin
                              if BAnd(my_bits_low,$00000002) <> 0 then { if plat[B1] = couleur then }
                                begin
                                  nbPrise := nbPrise + 12;
                                  my_bits_low := BOr(my_bits_low,$02020200);
                                  opp_bits_low := BXOr(opp_bits_low,$02020200);
                                  my_bits_high := BOr(my_bits_high,$00020202);
                                  opp_bits_high := BXOr(opp_bits_high,$00020202);
                                end;
                            end
                          else
                          if BAnd(my_bits_low,$00000200) <> 0 then { if plat[B2] = couleur then }
                            begin
                              nbPrise := nbPrise + 10;
                              my_bits_low := BOr(my_bits_low,$02020000);
                              opp_bits_low := BXOr(opp_bits_low,$02020000);
                              my_bits_high := BOr(my_bits_high,$00020202);
                              opp_bits_high := BXOr(opp_bits_high,$00020202);
                            end;
                        end
                      else
                      if BAnd(my_bits_low,$00020000) <> 0 then { if plat[B3] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$02000000);
                          opp_bits_low := BXOr(opp_bits_low,$02000000);
                          my_bits_high := BOr(my_bits_high,$00020202);
                          opp_bits_high := BXOr(opp_bits_high,$00020202);
                        end;
                    end
                  else
                  if BAnd(my_bits_low,$02000000) <> 0 then { if plat[B4] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_high := BOr(my_bits_high,$00020202);
                      opp_bits_high := BXOr(opp_bits_high,$00020202);
                    end;
                end
              else
              if BAnd(my_bits_high,$00000002) <> 0 then { if plat[B5] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$00020200);
                  opp_bits_high := BXOr(opp_bits_high,$00020200);
                end;
            end
          else
          if BAnd(my_bits_high,$00000200) <> 0 then { if plat[B6] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00020000);
              opp_bits_high := BXOr(opp_bits_high,$00020000);
            end;
        end;
      if BAnd(opp_bits_high,$00040000) <> 0 then { if plat[C7] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00000800) <> 0 then { if plat[D6] = adversaire then }
            begin
              if BAnd(opp_bits_high,$00000010) <> 0 then { if plat[E5] = adversaire then }
                begin
                  if BAnd(opp_bits_low,$20000000) <> 0 then { if plat[F4] = adversaire then }
                    begin
                      if BAnd(opp_bits_low,$00400000) <> 0 then { if plat[G3] = adversaire then }
                        begin
                          if BAnd(my_bits_low,$00008000) <> 0 then { if plat[H2] = couleur then }
                            begin
                              nbPrise := nbPrise + 10;
                              my_bits_low := BOr(my_bits_low,$20400000);
                              opp_bits_low := BXOr(opp_bits_low,$20400000);
                              my_bits_high := BOr(my_bits_high,$00040810);
                              opp_bits_high := BXOr(opp_bits_high,$00040810);
                            end;
                        end
                      else
                      if BAnd(my_bits_low,$00400000) <> 0 then { if plat[G3] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$20000000);
                          opp_bits_low := BXOr(opp_bits_low,$20000000);
                          my_bits_high := BOr(my_bits_high,$00040810);
                          opp_bits_high := BXOr(opp_bits_high,$00040810);
                        end;
                    end
                  else
                  if BAnd(my_bits_low,$20000000) <> 0 then { if plat[F4] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_high := BOr(my_bits_high,$00040810);
                      opp_bits_high := BXOr(opp_bits_high,$00040810);
                    end;
                end
              else
              if BAnd(my_bits_high,$00000010) <> 0 then { if plat[E5] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$00040800);
                  opp_bits_high := BXOr(opp_bits_high,$00040800);
                end;
            end
          else
          if BAnd(my_bits_high,$00000800) <> 0 then { if plat[D6] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00040000);
              opp_bits_high := BXOr(opp_bits_high,$00040000);
            end;
        end;
      if BAnd(opp_bits_high,$04000000) <> 0 then { if plat[C8] = adversaire then }
        begin
          if BAnd(opp_bits_high,$08000000) <> 0 then { if plat[D8] = adversaire then }
            begin
              if BAnd(opp_bits_high,$10000000) <> 0 then { if plat[E8] = adversaire then }
                begin
                  if BAnd(opp_bits_high,$20000000) <> 0 then { if plat[F8] = adversaire then }
                    begin
                      if BAnd(opp_bits_high,$40000000) <> 0 then { if plat[G8] = adversaire then }
                        begin
                          if BAnd(my_bits_high,$80000000) <> 0 then { if plat[H8] = couleur then }
                            begin
                              nbPrise := nbPrise + 10;
                              my_bits_high := BOr(my_bits_high,$7C000000);
                              opp_bits_high := BXOr(opp_bits_high,$7C000000);
                            end;
                        end
                      else
                      if BAnd(my_bits_high,$40000000) <> 0 then { if plat[G8] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_high := BOr(my_bits_high,$3C000000);
                          opp_bits_high := BXOr(opp_bits_high,$3C000000);
                        end;
                    end
                  else
                  if BAnd(my_bits_high,$20000000) <> 0 then { if plat[F8] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_high := BOr(my_bits_high,$1C000000);
                      opp_bits_high := BXOr(opp_bits_high,$1C000000);
                    end;
                end
              else
              if BAnd(my_bits_high,$10000000) <> 0 then { if plat[E8] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$0C000000);
                  opp_bits_high := BXOr(opp_bits_high,$0C000000);
                end;
            end
          else
          if BAnd(my_bits_high,$08000000) <> 0 then { if plat[D8] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$04000000);
              opp_bits_high := BXOr(opp_bits_high,$04000000);
            end;
        end;
    if (nbPrise <> 0)
      then
        begin
          diffPions := succ(diffPions+nbPrise);
          ModifPlatBitboard_b8 := BXOr(vecteurParite,$00000004);
          my_bits_high := BOr(my_bits_high,$02000000);  { place the disc in B8 }
          g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
          g_my_bits_high  := opp_bits_high;
          g_opp_bits_low  := my_bits_low;
          g_opp_bits_high := my_bits_high;
        end
      else
        ModifPlatBitboard_b8 := vecteurParite;
  end;
end;



function ModifPlatBitboard_c8(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32;
                           var resultat : bitboard; var diffPions : SInt32) : SInt32;
var nbPrise : SInt32;
begin
  with resultat do
    begin
      nbPrise := 0;
      if BAnd(opp_bits_high,$02000000) <> 0 then { if plat[B8] = adversaire then }
        begin
          if BAnd(my_bits_high,$01000000) <> 0 then { if plat[A8] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$02000000);
              opp_bits_high := BXOr(opp_bits_high,$02000000);
            end;
        end;
      if BAnd(opp_bits_high,$00020000) <> 0 then { if plat[B7] = adversaire then }
        begin
          if BAnd(my_bits_high,$00000100) <> 0 then { if plat[A6] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00020000);
              opp_bits_high := BXOr(opp_bits_high,$00020000);
            end;
        end;
      if BAnd(opp_bits_high,$00040000) <> 0 then { if plat[C7] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00000400) <> 0 then { if plat[C6] = adversaire then }
            begin
              if BAnd(opp_bits_high,$00000004) <> 0 then { if plat[C5] = adversaire then }
                begin
                  if BAnd(opp_bits_low,$04000000) <> 0 then { if plat[C4] = adversaire then }
                    begin
                      if BAnd(opp_bits_low,$00040000) <> 0 then { if plat[C3] = adversaire then }
                        begin
                          if BAnd(opp_bits_low,$00000400) <> 0 then { if plat[C2] = adversaire then }
                            begin
                              if BAnd(my_bits_low,$00000004) <> 0 then { if plat[C1] = couleur then }
                                begin
                                  nbPrise := nbPrise + 12;
                                  my_bits_low := BOr(my_bits_low,$04040400);
                                  opp_bits_low := BXOr(opp_bits_low,$04040400);
                                  my_bits_high := BOr(my_bits_high,$00040404);
                                  opp_bits_high := BXOr(opp_bits_high,$00040404);
                                end;
                            end
                          else
                          if BAnd(my_bits_low,$00000400) <> 0 then { if plat[C2] = couleur then }
                            begin
                              nbPrise := nbPrise + 10;
                              my_bits_low := BOr(my_bits_low,$04040000);
                              opp_bits_low := BXOr(opp_bits_low,$04040000);
                              my_bits_high := BOr(my_bits_high,$00040404);
                              opp_bits_high := BXOr(opp_bits_high,$00040404);
                            end;
                        end
                      else
                      if BAnd(my_bits_low,$00040000) <> 0 then { if plat[C3] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$04000000);
                          opp_bits_low := BXOr(opp_bits_low,$04000000);
                          my_bits_high := BOr(my_bits_high,$00040404);
                          opp_bits_high := BXOr(opp_bits_high,$00040404);
                        end;
                    end
                  else
                  if BAnd(my_bits_low,$04000000) <> 0 then { if plat[C4] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_high := BOr(my_bits_high,$00040404);
                      opp_bits_high := BXOr(opp_bits_high,$00040404);
                    end;
                end
              else
              if BAnd(my_bits_high,$00000004) <> 0 then { if plat[C5] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$00040400);
                  opp_bits_high := BXOr(opp_bits_high,$00040400);
                end;
            end
          else
          if BAnd(my_bits_high,$00000400) <> 0 then { if plat[C6] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00040000);
              opp_bits_high := BXOr(opp_bits_high,$00040000);
            end;
        end;
      if BAnd(opp_bits_high,$00080000) <> 0 then { if plat[D7] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00001000) <> 0 then { if plat[E6] = adversaire then }
            begin
              if BAnd(opp_bits_high,$00000020) <> 0 then { if plat[F5] = adversaire then }
                begin
                  if BAnd(opp_bits_low,$40000000) <> 0 then { if plat[G4] = adversaire then }
                    begin
                      if BAnd(my_bits_low,$00800000) <> 0 then { if plat[H3] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$40000000);
                          opp_bits_low := BXOr(opp_bits_low,$40000000);
                          my_bits_high := BOr(my_bits_high,$00081020);
                          opp_bits_high := BXOr(opp_bits_high,$00081020);
                        end;
                    end
                  else
                  if BAnd(my_bits_low,$40000000) <> 0 then { if plat[G4] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_high := BOr(my_bits_high,$00081020);
                      opp_bits_high := BXOr(opp_bits_high,$00081020);
                    end;
                end
              else
              if BAnd(my_bits_high,$00000020) <> 0 then { if plat[F5] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$00081000);
                  opp_bits_high := BXOr(opp_bits_high,$00081000);
                end;
            end
          else
          if BAnd(my_bits_high,$00001000) <> 0 then { if plat[E6] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00080000);
              opp_bits_high := BXOr(opp_bits_high,$00080000);
            end;
        end;
      if BAnd(opp_bits_high,$08000000) <> 0 then { if plat[D8] = adversaire then }
        begin
          if BAnd(opp_bits_high,$10000000) <> 0 then { if plat[E8] = adversaire then }
            begin
              if BAnd(opp_bits_high,$20000000) <> 0 then { if plat[F8] = adversaire then }
                begin
                  if BAnd(opp_bits_high,$40000000) <> 0 then { if plat[G8] = adversaire then }
                    begin
                      if BAnd(my_bits_high,$80000000) <> 0 then { if plat[H8] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_high := BOr(my_bits_high,$78000000);
                          opp_bits_high := BXOr(opp_bits_high,$78000000);
                        end;
                    end
                  else
                  if BAnd(my_bits_high,$40000000) <> 0 then { if plat[G8] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_high := BOr(my_bits_high,$38000000);
                      opp_bits_high := BXOr(opp_bits_high,$38000000);
                    end;
                end
              else
              if BAnd(my_bits_high,$20000000) <> 0 then { if plat[F8] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$18000000);
                  opp_bits_high := BXOr(opp_bits_high,$18000000);
                end;
            end
          else
          if BAnd(my_bits_high,$10000000) <> 0 then { if plat[E8] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$08000000);
              opp_bits_high := BXOr(opp_bits_high,$08000000);
            end;
        end;
    if (nbPrise <> 0)
      then
        begin
          diffPions := succ(diffPions+nbPrise);
          ModifPlatBitboard_c8 := BXOr(vecteurParite,$00000004);
          my_bits_high := BOr(my_bits_high,$04000000);  { place the disc in C8 }
          g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
          g_my_bits_high  := opp_bits_high;
          g_opp_bits_low  := my_bits_low;
          g_opp_bits_high := my_bits_high;
        end
      else
        ModifPlatBitboard_c8 := vecteurParite;
  end;
end;



function ModifPlatBitboard_d8(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32;
                           var resultat : bitboard; var diffPions : SInt32) : SInt32;
var nbPrise : SInt32;
begin
  with resultat do
    begin
      nbPrise := 0;
      if BAnd(opp_bits_high,$04000000) <> 0 then { if plat[C8] = adversaire then }
        begin
          if BAnd(opp_bits_high,$02000000) <> 0 then { if plat[B8] = adversaire then }
            begin
              if BAnd(my_bits_high,$01000000) <> 0 then { if plat[A8] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$06000000);
                  opp_bits_high := BXOr(opp_bits_high,$06000000);
                end;
            end
          else
          if BAnd(my_bits_high,$02000000) <> 0 then { if plat[B8] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$04000000);
              opp_bits_high := BXOr(opp_bits_high,$04000000);
            end;
        end;
      if BAnd(opp_bits_high,$00040000) <> 0 then { if plat[C7] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00000200) <> 0 then { if plat[B6] = adversaire then }
            begin
              if BAnd(my_bits_high,$00000001) <> 0 then { if plat[A5] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$00040200);
                  opp_bits_high := BXOr(opp_bits_high,$00040200);
                end;
            end
          else
          if BAnd(my_bits_high,$00000200) <> 0 then { if plat[B6] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00040000);
              opp_bits_high := BXOr(opp_bits_high,$00040000);
            end;
        end;
      if BAnd(opp_bits_high,$00080000) <> 0 then { if plat[D7] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00000800) <> 0 then { if plat[D6] = adversaire then }
            begin
              if BAnd(opp_bits_high,$00000008) <> 0 then { if plat[D5] = adversaire then }
                begin
                  if BAnd(opp_bits_low,$08000000) <> 0 then { if plat[D4] = adversaire then }
                    begin
                      if BAnd(opp_bits_low,$00080000) <> 0 then { if plat[D3] = adversaire then }
                        begin
                          if BAnd(opp_bits_low,$00000800) <> 0 then { if plat[D2] = adversaire then }
                            begin
                              if BAnd(my_bits_low,$00000008) <> 0 then { if plat[D1] = couleur then }
                                begin
                                  nbPrise := nbPrise + 12;
                                  my_bits_low := BOr(my_bits_low,$08080800);
                                  opp_bits_low := BXOr(opp_bits_low,$08080800);
                                  my_bits_high := BOr(my_bits_high,$00080808);
                                  opp_bits_high := BXOr(opp_bits_high,$00080808);
                                end;
                            end
                          else
                          if BAnd(my_bits_low,$00000800) <> 0 then { if plat[D2] = couleur then }
                            begin
                              nbPrise := nbPrise + 10;
                              my_bits_low := BOr(my_bits_low,$08080000);
                              opp_bits_low := BXOr(opp_bits_low,$08080000);
                              my_bits_high := BOr(my_bits_high,$00080808);
                              opp_bits_high := BXOr(opp_bits_high,$00080808);
                            end;
                        end
                      else
                      if BAnd(my_bits_low,$00080000) <> 0 then { if plat[D3] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$08000000);
                          opp_bits_low := BXOr(opp_bits_low,$08000000);
                          my_bits_high := BOr(my_bits_high,$00080808);
                          opp_bits_high := BXOr(opp_bits_high,$00080808);
                        end;
                    end
                  else
                  if BAnd(my_bits_low,$08000000) <> 0 then { if plat[D4] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_high := BOr(my_bits_high,$00080808);
                      opp_bits_high := BXOr(opp_bits_high,$00080808);
                    end;
                end
              else
              if BAnd(my_bits_high,$00000008) <> 0 then { if plat[D5] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$00080800);
                  opp_bits_high := BXOr(opp_bits_high,$00080800);
                end;
            end
          else
          if BAnd(my_bits_high,$00000800) <> 0 then { if plat[D6] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00080000);
              opp_bits_high := BXOr(opp_bits_high,$00080000);
            end;
        end;
      if BAnd(opp_bits_high,$00100000) <> 0 then { if plat[E7] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00002000) <> 0 then { if plat[F6] = adversaire then }
            begin
              if BAnd(opp_bits_high,$00000040) <> 0 then { if plat[G5] = adversaire then }
                begin
                  if BAnd(my_bits_low,$80000000) <> 0 then { if plat[H4] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_high := BOr(my_bits_high,$00102040);
                      opp_bits_high := BXOr(opp_bits_high,$00102040);
                    end;
                end
              else
              if BAnd(my_bits_high,$00000040) <> 0 then { if plat[G5] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$00102000);
                  opp_bits_high := BXOr(opp_bits_high,$00102000);
                end;
            end
          else
          if BAnd(my_bits_high,$00002000) <> 0 then { if plat[F6] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00100000);
              opp_bits_high := BXOr(opp_bits_high,$00100000);
            end;
        end;
      if BAnd(opp_bits_high,$10000000) <> 0 then { if plat[E8] = adversaire then }
        begin
          if BAnd(opp_bits_high,$20000000) <> 0 then { if plat[F8] = adversaire then }
            begin
              if BAnd(opp_bits_high,$40000000) <> 0 then { if plat[G8] = adversaire then }
                begin
                  if BAnd(my_bits_high,$80000000) <> 0 then { if plat[H8] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_high := BOr(my_bits_high,$70000000);
                      opp_bits_high := BXOr(opp_bits_high,$70000000);
                    end;
                end
              else
              if BAnd(my_bits_high,$40000000) <> 0 then { if plat[G8] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$30000000);
                  opp_bits_high := BXOr(opp_bits_high,$30000000);
                end;
            end
          else
          if BAnd(my_bits_high,$20000000) <> 0 then { if plat[F8] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$10000000);
              opp_bits_high := BXOr(opp_bits_high,$10000000);
            end;
        end;
    if (nbPrise <> 0)
      then
        begin
          diffPions := succ(diffPions+nbPrise);
          ModifPlatBitboard_d8 := BXOr(vecteurParite,$00000004);
          my_bits_high := BOr(my_bits_high,$08000000);  { place the disc in D8 }
          g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
          g_my_bits_high  := opp_bits_high;
          g_opp_bits_low  := my_bits_low;
          g_opp_bits_high := my_bits_high;
        end
      else
        ModifPlatBitboard_d8 := vecteurParite;
  end;
end;



function ModifPlatBitboard_e8(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32;
                           var resultat : bitboard; var diffPions : SInt32) : SInt32;
var nbPrise : SInt32;
begin
  with resultat do
    begin
      nbPrise := 0;
      if BAnd(opp_bits_high,$08000000) <> 0 then { if plat[D8] = adversaire then }
        begin
          if BAnd(opp_bits_high,$04000000) <> 0 then { if plat[C8] = adversaire then }
            begin
              if BAnd(opp_bits_high,$02000000) <> 0 then { if plat[B8] = adversaire then }
                begin
                  if BAnd(my_bits_high,$01000000) <> 0 then { if plat[A8] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_high := BOr(my_bits_high,$0E000000);
                      opp_bits_high := BXOr(opp_bits_high,$0E000000);
                    end;
                end
              else
              if BAnd(my_bits_high,$02000000) <> 0 then { if plat[B8] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$0C000000);
                  opp_bits_high := BXOr(opp_bits_high,$0C000000);
                end;
            end
          else
          if BAnd(my_bits_high,$04000000) <> 0 then { if plat[C8] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$08000000);
              opp_bits_high := BXOr(opp_bits_high,$08000000);
            end;
        end;
      if BAnd(opp_bits_high,$00080000) <> 0 then { if plat[D7] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00000400) <> 0 then { if plat[C6] = adversaire then }
            begin
              if BAnd(opp_bits_high,$00000002) <> 0 then { if plat[B5] = adversaire then }
                begin
                  if BAnd(my_bits_low,$01000000) <> 0 then { if plat[A4] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_high := BOr(my_bits_high,$00080402);
                      opp_bits_high := BXOr(opp_bits_high,$00080402);
                    end;
                end
              else
              if BAnd(my_bits_high,$00000002) <> 0 then { if plat[B5] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$00080400);
                  opp_bits_high := BXOr(opp_bits_high,$00080400);
                end;
            end
          else
          if BAnd(my_bits_high,$00000400) <> 0 then { if plat[C6] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00080000);
              opp_bits_high := BXOr(opp_bits_high,$00080000);
            end;
        end;
      if BAnd(opp_bits_high,$00100000) <> 0 then { if plat[E7] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00001000) <> 0 then { if plat[E6] = adversaire then }
            begin
              if BAnd(opp_bits_high,$00000010) <> 0 then { if plat[E5] = adversaire then }
                begin
                  if BAnd(opp_bits_low,$10000000) <> 0 then { if plat[E4] = adversaire then }
                    begin
                      if BAnd(opp_bits_low,$00100000) <> 0 then { if plat[E3] = adversaire then }
                        begin
                          if BAnd(opp_bits_low,$00001000) <> 0 then { if plat[E2] = adversaire then }
                            begin
                              if BAnd(my_bits_low,$00000010) <> 0 then { if plat[E1] = couleur then }
                                begin
                                  nbPrise := nbPrise + 12;
                                  my_bits_low := BOr(my_bits_low,$10101000);
                                  opp_bits_low := BXOr(opp_bits_low,$10101000);
                                  my_bits_high := BOr(my_bits_high,$00101010);
                                  opp_bits_high := BXOr(opp_bits_high,$00101010);
                                end;
                            end
                          else
                          if BAnd(my_bits_low,$00001000) <> 0 then { if plat[E2] = couleur then }
                            begin
                              nbPrise := nbPrise + 10;
                              my_bits_low := BOr(my_bits_low,$10100000);
                              opp_bits_low := BXOr(opp_bits_low,$10100000);
                              my_bits_high := BOr(my_bits_high,$00101010);
                              opp_bits_high := BXOr(opp_bits_high,$00101010);
                            end;
                        end
                      else
                      if BAnd(my_bits_low,$00100000) <> 0 then { if plat[E3] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$10000000);
                          opp_bits_low := BXOr(opp_bits_low,$10000000);
                          my_bits_high := BOr(my_bits_high,$00101010);
                          opp_bits_high := BXOr(opp_bits_high,$00101010);
                        end;
                    end
                  else
                  if BAnd(my_bits_low,$10000000) <> 0 then { if plat[E4] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_high := BOr(my_bits_high,$00101010);
                      opp_bits_high := BXOr(opp_bits_high,$00101010);
                    end;
                end
              else
              if BAnd(my_bits_high,$00000010) <> 0 then { if plat[E5] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$00101000);
                  opp_bits_high := BXOr(opp_bits_high,$00101000);
                end;
            end
          else
          if BAnd(my_bits_high,$00001000) <> 0 then { if plat[E6] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00100000);
              opp_bits_high := BXOr(opp_bits_high,$00100000);
            end;
        end;
      if BAnd(opp_bits_high,$00200000) <> 0 then { if plat[F7] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00004000) <> 0 then { if plat[G6] = adversaire then }
            begin
              if BAnd(my_bits_high,$00000080) <> 0 then { if plat[H5] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$00204000);
                  opp_bits_high := BXOr(opp_bits_high,$00204000);
                end;
            end
          else
          if BAnd(my_bits_high,$00004000) <> 0 then { if plat[G6] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00200000);
              opp_bits_high := BXOr(opp_bits_high,$00200000);
            end;
        end;
      if BAnd(opp_bits_high,$20000000) <> 0 then { if plat[F8] = adversaire then }
        begin
          if BAnd(opp_bits_high,$40000000) <> 0 then { if plat[G8] = adversaire then }
            begin
              if BAnd(my_bits_high,$80000000) <> 0 then { if plat[H8] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$60000000);
                  opp_bits_high := BXOr(opp_bits_high,$60000000);
                end;
            end
          else
          if BAnd(my_bits_high,$40000000) <> 0 then { if plat[G8] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$20000000);
              opp_bits_high := BXOr(opp_bits_high,$20000000);
            end;
        end;
    if (nbPrise <> 0)
      then
        begin
          diffPions := succ(diffPions+nbPrise);
          ModifPlatBitboard_e8 := BXOr(vecteurParite,$00000008);
          my_bits_high := BOr(my_bits_high,$10000000);  { place the disc in E8 }
          g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
          g_my_bits_high  := opp_bits_high;
          g_opp_bits_low  := my_bits_low;
          g_opp_bits_high := my_bits_high;
        end
      else
        ModifPlatBitboard_e8 := vecteurParite;
  end;
end;



function ModifPlatBitboard_f8(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32;
                           var resultat : bitboard; var diffPions : SInt32) : SInt32;
var nbPrise : SInt32;
begin
  with resultat do
    begin
      nbPrise := 0;
      if BAnd(opp_bits_high,$10000000) <> 0 then { if plat[E8] = adversaire then }
        begin
          if BAnd(opp_bits_high,$08000000) <> 0 then { if plat[D8] = adversaire then }
            begin
              if BAnd(opp_bits_high,$04000000) <> 0 then { if plat[C8] = adversaire then }
                begin
                  if BAnd(opp_bits_high,$02000000) <> 0 then { if plat[B8] = adversaire then }
                    begin
                      if BAnd(my_bits_high,$01000000) <> 0 then { if plat[A8] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_high := BOr(my_bits_high,$1E000000);
                          opp_bits_high := BXOr(opp_bits_high,$1E000000);
                        end;
                    end
                  else
                  if BAnd(my_bits_high,$02000000) <> 0 then { if plat[B8] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_high := BOr(my_bits_high,$1C000000);
                      opp_bits_high := BXOr(opp_bits_high,$1C000000);
                    end;
                end
              else
              if BAnd(my_bits_high,$04000000) <> 0 then { if plat[C8] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$18000000);
                  opp_bits_high := BXOr(opp_bits_high,$18000000);
                end;
            end
          else
          if BAnd(my_bits_high,$08000000) <> 0 then { if plat[D8] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$10000000);
              opp_bits_high := BXOr(opp_bits_high,$10000000);
            end;
        end;
      if BAnd(opp_bits_high,$00100000) <> 0 then { if plat[E7] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00000800) <> 0 then { if plat[D6] = adversaire then }
            begin
              if BAnd(opp_bits_high,$00000004) <> 0 then { if plat[C5] = adversaire then }
                begin
                  if BAnd(opp_bits_low,$02000000) <> 0 then { if plat[B4] = adversaire then }
                    begin
                      if BAnd(my_bits_low,$00010000) <> 0 then { if plat[A3] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$02000000);
                          opp_bits_low := BXOr(opp_bits_low,$02000000);
                          my_bits_high := BOr(my_bits_high,$00100804);
                          opp_bits_high := BXOr(opp_bits_high,$00100804);
                        end;
                    end
                  else
                  if BAnd(my_bits_low,$02000000) <> 0 then { if plat[B4] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_high := BOr(my_bits_high,$00100804);
                      opp_bits_high := BXOr(opp_bits_high,$00100804);
                    end;
                end
              else
              if BAnd(my_bits_high,$00000004) <> 0 then { if plat[C5] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$00100800);
                  opp_bits_high := BXOr(opp_bits_high,$00100800);
                end;
            end
          else
          if BAnd(my_bits_high,$00000800) <> 0 then { if plat[D6] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00100000);
              opp_bits_high := BXOr(opp_bits_high,$00100000);
            end;
        end;
      if BAnd(opp_bits_high,$00200000) <> 0 then { if plat[F7] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00002000) <> 0 then { if plat[F6] = adversaire then }
            begin
              if BAnd(opp_bits_high,$00000020) <> 0 then { if plat[F5] = adversaire then }
                begin
                  if BAnd(opp_bits_low,$20000000) <> 0 then { if plat[F4] = adversaire then }
                    begin
                      if BAnd(opp_bits_low,$00200000) <> 0 then { if plat[F3] = adversaire then }
                        begin
                          if BAnd(opp_bits_low,$00002000) <> 0 then { if plat[F2] = adversaire then }
                            begin
                              if BAnd(my_bits_low,$00000020) <> 0 then { if plat[F1] = couleur then }
                                begin
                                  nbPrise := nbPrise + 12;
                                  my_bits_low := BOr(my_bits_low,$20202000);
                                  opp_bits_low := BXOr(opp_bits_low,$20202000);
                                  my_bits_high := BOr(my_bits_high,$00202020);
                                  opp_bits_high := BXOr(opp_bits_high,$00202020);
                                end;
                            end
                          else
                          if BAnd(my_bits_low,$00002000) <> 0 then { if plat[F2] = couleur then }
                            begin
                              nbPrise := nbPrise + 10;
                              my_bits_low := BOr(my_bits_low,$20200000);
                              opp_bits_low := BXOr(opp_bits_low,$20200000);
                              my_bits_high := BOr(my_bits_high,$00202020);
                              opp_bits_high := BXOr(opp_bits_high,$00202020);
                            end;
                        end
                      else
                      if BAnd(my_bits_low,$00200000) <> 0 then { if plat[F3] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$20000000);
                          opp_bits_low := BXOr(opp_bits_low,$20000000);
                          my_bits_high := BOr(my_bits_high,$00202020);
                          opp_bits_high := BXOr(opp_bits_high,$00202020);
                        end;
                    end
                  else
                  if BAnd(my_bits_low,$20000000) <> 0 then { if plat[F4] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_high := BOr(my_bits_high,$00202020);
                      opp_bits_high := BXOr(opp_bits_high,$00202020);
                    end;
                end
              else
              if BAnd(my_bits_high,$00000020) <> 0 then { if plat[F5] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$00202000);
                  opp_bits_high := BXOr(opp_bits_high,$00202000);
                end;
            end
          else
          if BAnd(my_bits_high,$00002000) <> 0 then { if plat[F6] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00200000);
              opp_bits_high := BXOr(opp_bits_high,$00200000);
            end;
        end;
      if BAnd(opp_bits_high,$00400000) <> 0 then { if plat[G7] = adversaire then }
        begin
          if BAnd(my_bits_high,$00008000) <> 0 then { if plat[H6] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00400000);
              opp_bits_high := BXOr(opp_bits_high,$00400000);
            end;
        end;
      if BAnd(opp_bits_high,$40000000) <> 0 then { if plat[G8] = adversaire then }
        begin
          if BAnd(my_bits_high,$80000000) <> 0 then { if plat[H8] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$40000000);
              opp_bits_high := BXOr(opp_bits_high,$40000000);
            end;
        end;
    if (nbPrise <> 0)
      then
        begin
          diffPions := succ(diffPions+nbPrise);
          ModifPlatBitboard_f8 := BXOr(vecteurParite,$00000008);
          my_bits_high := BOr(my_bits_high,$20000000);  { place the disc in F8 }
          g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
          g_my_bits_high  := opp_bits_high;
          g_opp_bits_low  := my_bits_low;
          g_opp_bits_high := my_bits_high;
        end
      else
        ModifPlatBitboard_f8 := vecteurParite;
  end;
end;



function ModifPlatBitboard_g8(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32;
                           var resultat : bitboard; var diffPions : SInt32) : SInt32;
var nbPrise : SInt32;
begin
  with resultat do
    begin
      nbPrise := 0;
      if BAnd(opp_bits_high,$20000000) <> 0 then { if plat[F8] = adversaire then }
        begin
          if BAnd(opp_bits_high,$10000000) <> 0 then { if plat[E8] = adversaire then }
            begin
              if BAnd(opp_bits_high,$08000000) <> 0 then { if plat[D8] = adversaire then }
                begin
                  if BAnd(opp_bits_high,$04000000) <> 0 then { if plat[C8] = adversaire then }
                    begin
                      if BAnd(opp_bits_high,$02000000) <> 0 then { if plat[B8] = adversaire then }
                        begin
                          if BAnd(my_bits_high,$01000000) <> 0 then { if plat[A8] = couleur then }
                            begin
                              nbPrise := nbPrise + 10;
                              my_bits_high := BOr(my_bits_high,$3E000000);
                              opp_bits_high := BXOr(opp_bits_high,$3E000000);
                            end;
                        end
                      else
                      if BAnd(my_bits_high,$02000000) <> 0 then { if plat[B8] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_high := BOr(my_bits_high,$3C000000);
                          opp_bits_high := BXOr(opp_bits_high,$3C000000);
                        end;
                    end
                  else
                  if BAnd(my_bits_high,$04000000) <> 0 then { if plat[C8] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_high := BOr(my_bits_high,$38000000);
                      opp_bits_high := BXOr(opp_bits_high,$38000000);
                    end;
                end
              else
              if BAnd(my_bits_high,$08000000) <> 0 then { if plat[D8] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$30000000);
                  opp_bits_high := BXOr(opp_bits_high,$30000000);
                end;
            end
          else
          if BAnd(my_bits_high,$10000000) <> 0 then { if plat[E8] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$20000000);
              opp_bits_high := BXOr(opp_bits_high,$20000000);
            end;
        end;
      if BAnd(opp_bits_high,$00200000) <> 0 then { if plat[F7] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00001000) <> 0 then { if plat[E6] = adversaire then }
            begin
              if BAnd(opp_bits_high,$00000008) <> 0 then { if plat[D5] = adversaire then }
                begin
                  if BAnd(opp_bits_low,$04000000) <> 0 then { if plat[C4] = adversaire then }
                    begin
                      if BAnd(opp_bits_low,$00020000) <> 0 then { if plat[B3] = adversaire then }
                        begin
                          if BAnd(my_bits_low,$00000100) <> 0 then { if plat[A2] = couleur then }
                            begin
                              nbPrise := nbPrise + 10;
                              my_bits_low := BOr(my_bits_low,$04020000);
                              opp_bits_low := BXOr(opp_bits_low,$04020000);
                              my_bits_high := BOr(my_bits_high,$00201008);
                              opp_bits_high := BXOr(opp_bits_high,$00201008);
                            end;
                        end
                      else
                      if BAnd(my_bits_low,$00020000) <> 0 then { if plat[B3] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$04000000);
                          opp_bits_low := BXOr(opp_bits_low,$04000000);
                          my_bits_high := BOr(my_bits_high,$00201008);
                          opp_bits_high := BXOr(opp_bits_high,$00201008);
                        end;
                    end
                  else
                  if BAnd(my_bits_low,$04000000) <> 0 then { if plat[C4] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_high := BOr(my_bits_high,$00201008);
                      opp_bits_high := BXOr(opp_bits_high,$00201008);
                    end;
                end
              else
              if BAnd(my_bits_high,$00000008) <> 0 then { if plat[D5] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$00201000);
                  opp_bits_high := BXOr(opp_bits_high,$00201000);
                end;
            end
          else
          if BAnd(my_bits_high,$00001000) <> 0 then { if plat[E6] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00200000);
              opp_bits_high := BXOr(opp_bits_high,$00200000);
            end;
        end;
      if BAnd(opp_bits_high,$00400000) <> 0 then { if plat[G7] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00004000) <> 0 then { if plat[G6] = adversaire then }
            begin
              if BAnd(opp_bits_high,$00000040) <> 0 then { if plat[G5] = adversaire then }
                begin
                  if BAnd(opp_bits_low,$40000000) <> 0 then { if plat[G4] = adversaire then }
                    begin
                      if BAnd(opp_bits_low,$00400000) <> 0 then { if plat[G3] = adversaire then }
                        begin
                          if BAnd(opp_bits_low,$00004000) <> 0 then { if plat[G2] = adversaire then }
                            begin
                              if BAnd(my_bits_low,$00000040) <> 0 then { if plat[G1] = couleur then }
                                begin
                                  nbPrise := nbPrise + 12;
                                  my_bits_low := BOr(my_bits_low,$40404000);
                                  opp_bits_low := BXOr(opp_bits_low,$40404000);
                                  my_bits_high := BOr(my_bits_high,$00404040);
                                  opp_bits_high := BXOr(opp_bits_high,$00404040);
                                end;
                            end
                          else
                          if BAnd(my_bits_low,$00004000) <> 0 then { if plat[G2] = couleur then }
                            begin
                              nbPrise := nbPrise + 10;
                              my_bits_low := BOr(my_bits_low,$40400000);
                              opp_bits_low := BXOr(opp_bits_low,$40400000);
                              my_bits_high := BOr(my_bits_high,$00404040);
                              opp_bits_high := BXOr(opp_bits_high,$00404040);
                            end;
                        end
                      else
                      if BAnd(my_bits_low,$00400000) <> 0 then { if plat[G3] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$40000000);
                          opp_bits_low := BXOr(opp_bits_low,$40000000);
                          my_bits_high := BOr(my_bits_high,$00404040);
                          opp_bits_high := BXOr(opp_bits_high,$00404040);
                        end;
                    end
                  else
                  if BAnd(my_bits_low,$40000000) <> 0 then { if plat[G4] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_high := BOr(my_bits_high,$00404040);
                      opp_bits_high := BXOr(opp_bits_high,$00404040);
                    end;
                end
              else
              if BAnd(my_bits_high,$00000040) <> 0 then { if plat[G5] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$00404000);
                  opp_bits_high := BXOr(opp_bits_high,$00404000);
                end;
            end
          else
          if BAnd(my_bits_high,$00004000) <> 0 then { if plat[G6] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00400000);
              opp_bits_high := BXOr(opp_bits_high,$00400000);
            end;
        end;
    if (nbPrise <> 0)
      then
        begin
          diffPions := succ(diffPions+nbPrise);
          ModifPlatBitboard_g8 := BXOr(vecteurParite,$00000008);
          my_bits_high := BOr(my_bits_high,$40000000);  { place the disc in G8 }
          g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
          g_my_bits_high  := opp_bits_high;
          g_opp_bits_low  := my_bits_low;
          g_opp_bits_high := my_bits_high;
        end
      else
        ModifPlatBitboard_g8 := vecteurParite;
  end;
end;



function ModifPlatBitboard_h8(vecteurParite : SInt32; my_bits_low,my_bits_high,opp_bits_low,opp_bits_high : UInt32;
                           var resultat : bitboard; var diffPions : SInt32) : SInt32;
var nbPrise : SInt32;
begin
  with resultat do
    begin
      nbPrise := 0;
      if BAnd(opp_bits_high,$40000000) <> 0 then { if plat[G8] = adversaire then }
        begin
          if BAnd(opp_bits_high,$20000000) <> 0 then { if plat[F8] = adversaire then }
            begin
              if BAnd(opp_bits_high,$10000000) <> 0 then { if plat[E8] = adversaire then }
                begin
                  if BAnd(opp_bits_high,$08000000) <> 0 then { if plat[D8] = adversaire then }
                    begin
                      if BAnd(opp_bits_high,$04000000) <> 0 then { if plat[C8] = adversaire then }
                        begin
                          if BAnd(opp_bits_high,$02000000) <> 0 then { if plat[B8] = adversaire then }
                            begin
                              if BAnd(my_bits_high,$01000000) <> 0 then { if plat[A8] = couleur then }
                                begin
                                  nbPrise := nbPrise + 12;
                                  my_bits_high := BOr(my_bits_high,$7E000000);
                                  opp_bits_high := BXOr(opp_bits_high,$7E000000);
                                end;
                            end
                          else
                          if BAnd(my_bits_high,$02000000) <> 0 then { if plat[B8] = couleur then }
                            begin
                              nbPrise := nbPrise + 10;
                              my_bits_high := BOr(my_bits_high,$7C000000);
                              opp_bits_high := BXOr(opp_bits_high,$7C000000);
                            end;
                        end
                      else
                      if BAnd(my_bits_high,$04000000) <> 0 then { if plat[C8] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_high := BOr(my_bits_high,$78000000);
                          opp_bits_high := BXOr(opp_bits_high,$78000000);
                        end;
                    end
                  else
                  if BAnd(my_bits_high,$08000000) <> 0 then { if plat[D8] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_high := BOr(my_bits_high,$70000000);
                      opp_bits_high := BXOr(opp_bits_high,$70000000);
                    end;
                end
              else
              if BAnd(my_bits_high,$10000000) <> 0 then { if plat[E8] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$60000000);
                  opp_bits_high := BXOr(opp_bits_high,$60000000);
                end;
            end
          else
          if BAnd(my_bits_high,$20000000) <> 0 then { if plat[F8] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$40000000);
              opp_bits_high := BXOr(opp_bits_high,$40000000);
            end;
        end;
      if BAnd(opp_bits_high,$00400000) <> 0 then { if plat[G7] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00002000) <> 0 then { if plat[F6] = adversaire then }
            begin
              if BAnd(opp_bits_high,$00000010) <> 0 then { if plat[E5] = adversaire then }
                begin
                  if BAnd(opp_bits_low,$08000000) <> 0 then { if plat[D4] = adversaire then }
                    begin
                      if BAnd(opp_bits_low,$00040000) <> 0 then { if plat[C3] = adversaire then }
                        begin
                          if BAnd(opp_bits_low,$00000200) <> 0 then { if plat[B2] = adversaire then }
                            begin
                              if BAnd(my_bits_low,$00000001) <> 0 then { if plat[A1] = couleur then }
                                begin
                                  nbPrise := nbPrise + 12;
                                  my_bits_low := BOr(my_bits_low,$08040200);
                                  opp_bits_low := BXOr(opp_bits_low,$08040200);
                                  my_bits_high := BOr(my_bits_high,$00402010);
                                  opp_bits_high := BXOr(opp_bits_high,$00402010);
                                end;
                            end
                          else
                          if BAnd(my_bits_low,$00000200) <> 0 then { if plat[B2] = couleur then }
                            begin
                              nbPrise := nbPrise + 10;
                              my_bits_low := BOr(my_bits_low,$08040000);
                              opp_bits_low := BXOr(opp_bits_low,$08040000);
                              my_bits_high := BOr(my_bits_high,$00402010);
                              opp_bits_high := BXOr(opp_bits_high,$00402010);
                            end;
                        end
                      else
                      if BAnd(my_bits_low,$00040000) <> 0 then { if plat[C3] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$08000000);
                          opp_bits_low := BXOr(opp_bits_low,$08000000);
                          my_bits_high := BOr(my_bits_high,$00402010);
                          opp_bits_high := BXOr(opp_bits_high,$00402010);
                        end;
                    end
                  else
                  if BAnd(my_bits_low,$08000000) <> 0 then { if plat[D4] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_high := BOr(my_bits_high,$00402010);
                      opp_bits_high := BXOr(opp_bits_high,$00402010);
                    end;
                end
              else
              if BAnd(my_bits_high,$00000010) <> 0 then { if plat[E5] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$00402000);
                  opp_bits_high := BXOr(opp_bits_high,$00402000);
                end;
            end
          else
          if BAnd(my_bits_high,$00002000) <> 0 then { if plat[F6] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00400000);
              opp_bits_high := BXOr(opp_bits_high,$00400000);
            end;
        end;
      if BAnd(opp_bits_high,$00800000) <> 0 then { if plat[H7] = adversaire then }
        begin
          if BAnd(opp_bits_high,$00008000) <> 0 then { if plat[H6] = adversaire then }
            begin
              if BAnd(opp_bits_high,$00000080) <> 0 then { if plat[H5] = adversaire then }
                begin
                  if BAnd(opp_bits_low,$80000000) <> 0 then { if plat[H4] = adversaire then }
                    begin
                      if BAnd(opp_bits_low,$00800000) <> 0 then { if plat[H3] = adversaire then }
                        begin
                          if BAnd(opp_bits_low,$00008000) <> 0 then { if plat[H2] = adversaire then }
                            begin
                              if BAnd(my_bits_low,$00000080) <> 0 then { if plat[H1] = couleur then }
                                begin
                                  nbPrise := nbPrise + 12;
                                  my_bits_low := BOr(my_bits_low,$80808000);
                                  opp_bits_low := BXOr(opp_bits_low,$80808000);
                                  my_bits_high := BOr(my_bits_high,$00808080);
                                  opp_bits_high := BXOr(opp_bits_high,$00808080);
                                end;
                            end
                          else
                          if BAnd(my_bits_low,$00008000) <> 0 then { if plat[H2] = couleur then }
                            begin
                              nbPrise := nbPrise + 10;
                              my_bits_low := BOr(my_bits_low,$80800000);
                              opp_bits_low := BXOr(opp_bits_low,$80800000);
                              my_bits_high := BOr(my_bits_high,$00808080);
                              opp_bits_high := BXOr(opp_bits_high,$00808080);
                            end;
                        end
                      else
                      if BAnd(my_bits_low,$00800000) <> 0 then { if plat[H3] = couleur then }
                        begin
                          nbPrise := nbPrise + 8;
                          my_bits_low := BOr(my_bits_low,$80000000);
                          opp_bits_low := BXOr(opp_bits_low,$80000000);
                          my_bits_high := BOr(my_bits_high,$00808080);
                          opp_bits_high := BXOr(opp_bits_high,$00808080);
                        end;
                    end
                  else
                  if BAnd(my_bits_low,$80000000) <> 0 then { if plat[H4] = couleur then }
                    begin
                      nbPrise := nbPrise + 6;
                      my_bits_high := BOr(my_bits_high,$00808080);
                      opp_bits_high := BXOr(opp_bits_high,$00808080);
                    end;
                end
              else
              if BAnd(my_bits_high,$00000080) <> 0 then { if plat[H5] = couleur then }
                begin
                  nbPrise := nbPrise + 4;
                  my_bits_high := BOr(my_bits_high,$00808000);
                  opp_bits_high := BXOr(opp_bits_high,$00808000);
                end;
            end
          else
          if BAnd(my_bits_high,$00008000) <> 0 then { if plat[H6] = couleur then }
            begin
              nbPrise := nbPrise + 2;
              my_bits_high := BOr(my_bits_high,$00800000);
              opp_bits_high := BXOr(opp_bits_high,$00800000);
            end;
        end;
    if (nbPrise <> 0)
      then
        begin
          diffPions := succ(diffPions+nbPrise);
          ModifPlatBitboard_h8 := BXOr(vecteurParite,$00000008);
          my_bits_high := BOr(my_bits_high,$80000000);  { place the disc in H8 }
          g_my_bits_low   := opp_bits_low;  {le trait change : on echange my_bits et opp_bits}
          g_my_bits_high  := opp_bits_high;
          g_opp_bits_low  := my_bits_low;
          g_opp_bits_high := my_bits_high;
        end
      else
        ModifPlatBitboard_h8 := vecteurParite;
  end;
end;





END.
